

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Fri May 05 15:48:27 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2
    50                           	psect	text37,local,class=CODE,merge=1,delta=2
    51                           	psect	text38,local,class=CODE,merge=1,delta=2
    52                           	psect	text39,local,class=CODE,merge=1,delta=2
    53                           	psect	text40,local,class=CODE,merge=1,delta=2
    54                           	psect	text41,local,class=CODE,merge=1,delta=2
    55                           	psect	intentry,global,class=CODE,delta=2
    56                           	dabs	1,0x7E,2
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  010C                     	;# 
   112  010D                     	;# 
   113  010E                     	;# 
   114  010F                     	;# 
   115  018C                     	;# 
   116  018D                     	;# 
   117  0000                     	;# 
   118  0001                     	;# 
   119  0002                     	;# 
   120  0003                     	;# 
   121  0004                     	;# 
   122  0005                     	;# 
   123  0006                     	;# 
   124  0007                     	;# 
   125  0008                     	;# 
   126  0009                     	;# 
   127  000A                     	;# 
   128  000B                     	;# 
   129  000C                     	;# 
   130  000D                     	;# 
   131  000E                     	;# 
   132  000E                     	;# 
   133  000F                     	;# 
   134  0010                     	;# 
   135  0011                     	;# 
   136  0012                     	;# 
   137  0013                     	;# 
   138  0014                     	;# 
   139  0015                     	;# 
   140  0015                     	;# 
   141  0016                     	;# 
   142  0017                     	;# 
   143  0018                     	;# 
   144  0019                     	;# 
   145  001A                     	;# 
   146  001B                     	;# 
   147  001B                     	;# 
   148  001C                     	;# 
   149  001D                     	;# 
   150  001E                     	;# 
   151  001F                     	;# 
   152  0081                     	;# 
   153  0085                     	;# 
   154  0086                     	;# 
   155  0087                     	;# 
   156  0088                     	;# 
   157  0089                     	;# 
   158  008C                     	;# 
   159  008D                     	;# 
   160  008E                     	;# 
   161  0091                     	;# 
   162  0092                     	;# 
   163  0093                     	;# 
   164  0094                     	;# 
   165  0098                     	;# 
   166  0099                     	;# 
   167  009C                     	;# 
   168  009D                     	;# 
   169  009E                     	;# 
   170  009F                     	;# 
   171  010C                     	;# 
   172  010D                     	;# 
   173  010E                     	;# 
   174  010F                     	;# 
   175  018C                     	;# 
   176  018D                     	;# 
   177  0000                     	;# 
   178  0001                     	;# 
   179  0002                     	;# 
   180  0003                     	;# 
   181  0004                     	;# 
   182  0005                     	;# 
   183  0006                     	;# 
   184  0007                     	;# 
   185  0008                     	;# 
   186  0009                     	;# 
   187  000A                     	;# 
   188  000B                     	;# 
   189  000C                     	;# 
   190  000D                     	;# 
   191  000E                     	;# 
   192  000E                     	;# 
   193  000F                     	;# 
   194  0010                     	;# 
   195  0011                     	;# 
   196  0012                     	;# 
   197  0013                     	;# 
   198  0014                     	;# 
   199  0015                     	;# 
   200  0015                     	;# 
   201  0016                     	;# 
   202  0017                     	;# 
   203  0018                     	;# 
   204  0019                     	;# 
   205  001A                     	;# 
   206  001B                     	;# 
   207  001B                     	;# 
   208  001C                     	;# 
   209  001D                     	;# 
   210  001E                     	;# 
   211  001F                     	;# 
   212  0081                     	;# 
   213  0085                     	;# 
   214  0086                     	;# 
   215  0087                     	;# 
   216  0088                     	;# 
   217  0089                     	;# 
   218  008C                     	;# 
   219  008D                     	;# 
   220  008E                     	;# 
   221  0091                     	;# 
   222  0092                     	;# 
   223  0093                     	;# 
   224  0094                     	;# 
   225  0098                     	;# 
   226  0099                     	;# 
   227  009C                     	;# 
   228  009D                     	;# 
   229  009E                     	;# 
   230  009F                     	;# 
   231  010C                     	;# 
   232  010D                     	;# 
   233  010E                     	;# 
   234  010F                     	;# 
   235  018C                     	;# 
   236  018D                     	;# 
   237  0000                     	;# 
   238  0001                     	;# 
   239  0002                     	;# 
   240  0003                     	;# 
   241  0004                     	;# 
   242  0005                     	;# 
   243  0006                     	;# 
   244  0007                     	;# 
   245  0008                     	;# 
   246  0009                     	;# 
   247  000A                     	;# 
   248  000B                     	;# 
   249  000C                     	;# 
   250  000D                     	;# 
   251  000E                     	;# 
   252  000E                     	;# 
   253  000F                     	;# 
   254  0010                     	;# 
   255  0011                     	;# 
   256  0012                     	;# 
   257  0013                     	;# 
   258  0014                     	;# 
   259  0015                     	;# 
   260  0015                     	;# 
   261  0016                     	;# 
   262  0017                     	;# 
   263  0018                     	;# 
   264  0019                     	;# 
   265  001A                     	;# 
   266  001B                     	;# 
   267  001B                     	;# 
   268  001C                     	;# 
   269  001D                     	;# 
   270  001E                     	;# 
   271  001F                     	;# 
   272  0081                     	;# 
   273  0085                     	;# 
   274  0086                     	;# 
   275  0087                     	;# 
   276  0088                     	;# 
   277  0089                     	;# 
   278  008C                     	;# 
   279  008D                     	;# 
   280  008E                     	;# 
   281  0091                     	;# 
   282  0092                     	;# 
   283  0093                     	;# 
   284  0094                     	;# 
   285  0098                     	;# 
   286  0099                     	;# 
   287  009C                     	;# 
   288  009D                     	;# 
   289  009E                     	;# 
   290  009F                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  0000                     	;# 
   298  0001                     	;# 
   299  0002                     	;# 
   300  0003                     	;# 
   301  0004                     	;# 
   302  0005                     	;# 
   303  0006                     	;# 
   304  0007                     	;# 
   305  0008                     	;# 
   306  0009                     	;# 
   307  000A                     	;# 
   308  000B                     	;# 
   309  000C                     	;# 
   310  000D                     	;# 
   311  000E                     	;# 
   312  000E                     	;# 
   313  000F                     	;# 
   314  0010                     	;# 
   315  0011                     	;# 
   316  0012                     	;# 
   317  0013                     	;# 
   318  0014                     	;# 
   319  0015                     	;# 
   320  0015                     	;# 
   321  0016                     	;# 
   322  0017                     	;# 
   323  0018                     	;# 
   324  0019                     	;# 
   325  001A                     	;# 
   326  001B                     	;# 
   327  001B                     	;# 
   328  001C                     	;# 
   329  001D                     	;# 
   330  001E                     	;# 
   331  001F                     	;# 
   332  0081                     	;# 
   333  0085                     	;# 
   334  0086                     	;# 
   335  0087                     	;# 
   336  0088                     	;# 
   337  0089                     	;# 
   338  008C                     	;# 
   339  008D                     	;# 
   340  008E                     	;# 
   341  0091                     	;# 
   342  0092                     	;# 
   343  0093                     	;# 
   344  0094                     	;# 
   345  0098                     	;# 
   346  0099                     	;# 
   347  009C                     	;# 
   348  009D                     	;# 
   349  009E                     	;# 
   350  009F                     	;# 
   351  010C                     	;# 
   352  010D                     	;# 
   353  010E                     	;# 
   354  010F                     	;# 
   355  018C                     	;# 
   356  018D                     	;# 
   357  0000                     	;# 
   358  0001                     	;# 
   359  0002                     	;# 
   360  0003                     	;# 
   361  0004                     	;# 
   362  0005                     	;# 
   363  0006                     	;# 
   364  0007                     	;# 
   365  0008                     	;# 
   366  0009                     	;# 
   367  000A                     	;# 
   368  000B                     	;# 
   369  000C                     	;# 
   370  000D                     	;# 
   371  000E                     	;# 
   372  000E                     	;# 
   373  000F                     	;# 
   374  0010                     	;# 
   375  0011                     	;# 
   376  0012                     	;# 
   377  0013                     	;# 
   378  0014                     	;# 
   379  0015                     	;# 
   380  0015                     	;# 
   381  0016                     	;# 
   382  0017                     	;# 
   383  0018                     	;# 
   384  0019                     	;# 
   385  001A                     	;# 
   386  001B                     	;# 
   387  001B                     	;# 
   388  001C                     	;# 
   389  001D                     	;# 
   390  001E                     	;# 
   391  001F                     	;# 
   392  0081                     	;# 
   393  0085                     	;# 
   394  0086                     	;# 
   395  0087                     	;# 
   396  0088                     	;# 
   397  0089                     	;# 
   398  008C                     	;# 
   399  008D                     	;# 
   400  008E                     	;# 
   401  0091                     	;# 
   402  0092                     	;# 
   403  0093                     	;# 
   404  0094                     	;# 
   405  0098                     	;# 
   406  0099                     	;# 
   407  009C                     	;# 
   408  009D                     	;# 
   409  009E                     	;# 
   410  009F                     	;# 
   411  010C                     	;# 
   412  010D                     	;# 
   413  010E                     	;# 
   414  010F                     	;# 
   415  018C                     	;# 
   416  018D                     	;# 
   417  0000                     	;# 
   418  0001                     	;# 
   419  0002                     	;# 
   420  0003                     	;# 
   421  0004                     	;# 
   422  0005                     	;# 
   423  0006                     	;# 
   424  0007                     	;# 
   425  0008                     	;# 
   426  0009                     	;# 
   427  000A                     	;# 
   428  000B                     	;# 
   429  000C                     	;# 
   430  000D                     	;# 
   431  000E                     	;# 
   432  000E                     	;# 
   433  000F                     	;# 
   434  0010                     	;# 
   435  0011                     	;# 
   436  0012                     	;# 
   437  0013                     	;# 
   438  0014                     	;# 
   439  0015                     	;# 
   440  0015                     	;# 
   441  0016                     	;# 
   442  0017                     	;# 
   443  0018                     	;# 
   444  0019                     	;# 
   445  001A                     	;# 
   446  001B                     	;# 
   447  001B                     	;# 
   448  001C                     	;# 
   449  001D                     	;# 
   450  001E                     	;# 
   451  001F                     	;# 
   452  0081                     	;# 
   453  0085                     	;# 
   454  0086                     	;# 
   455  0087                     	;# 
   456  0088                     	;# 
   457  0089                     	;# 
   458  008C                     	;# 
   459  008D                     	;# 
   460  008E                     	;# 
   461  0091                     	;# 
   462  0092                     	;# 
   463  0093                     	;# 
   464  0094                     	;# 
   465  0098                     	;# 
   466  0099                     	;# 
   467  009C                     	;# 
   468  009D                     	;# 
   469  009E                     	;# 
   470  009F                     	;# 
   471  010C                     	;# 
   472  010D                     	;# 
   473  010E                     	;# 
   474  010F                     	;# 
   475  018C                     	;# 
   476  018D                     	;# 
   477  0000                     	;# 
   478  0001                     	;# 
   479  0002                     	;# 
   480  0003                     	;# 
   481  0004                     	;# 
   482  0005                     	;# 
   483  0006                     	;# 
   484  0007                     	;# 
   485  0008                     	;# 
   486  0009                     	;# 
   487  000A                     	;# 
   488  000B                     	;# 
   489  000C                     	;# 
   490  000D                     	;# 
   491  000E                     	;# 
   492  000E                     	;# 
   493  000F                     	;# 
   494  0010                     	;# 
   495  0011                     	;# 
   496  0012                     	;# 
   497  0013                     	;# 
   498  0014                     	;# 
   499  0015                     	;# 
   500  0015                     	;# 
   501  0016                     	;# 
   502  0017                     	;# 
   503  0018                     	;# 
   504  0019                     	;# 
   505  001A                     	;# 
   506  001B                     	;# 
   507  001B                     	;# 
   508  001C                     	;# 
   509  001D                     	;# 
   510  001E                     	;# 
   511  001F                     	;# 
   512  0081                     	;# 
   513  0085                     	;# 
   514  0086                     	;# 
   515  0087                     	;# 
   516  0088                     	;# 
   517  0089                     	;# 
   518  008C                     	;# 
   519  008D                     	;# 
   520  008E                     	;# 
   521  0091                     	;# 
   522  0092                     	;# 
   523  0093                     	;# 
   524  0094                     	;# 
   525  0098                     	;# 
   526  0099                     	;# 
   527  009C                     	;# 
   528  009D                     	;# 
   529  009E                     	;# 
   530  009F                     	;# 
   531  010C                     	;# 
   532  010D                     	;# 
   533  010E                     	;# 
   534  010F                     	;# 
   535  018C                     	;# 
   536  018D                     	;# 
   537  0000                     	;# 
   538  0001                     	;# 
   539  0002                     	;# 
   540  0003                     	;# 
   541  0004                     	;# 
   542  0005                     	;# 
   543  0006                     	;# 
   544  0007                     	;# 
   545  0008                     	;# 
   546  0009                     	;# 
   547  000A                     	;# 
   548  000B                     	;# 
   549  000C                     	;# 
   550  000D                     	;# 
   551  000E                     	;# 
   552  000E                     	;# 
   553  000F                     	;# 
   554  0010                     	;# 
   555  0011                     	;# 
   556  0012                     	;# 
   557  0013                     	;# 
   558  0014                     	;# 
   559  0015                     	;# 
   560  0015                     	;# 
   561  0016                     	;# 
   562  0017                     	;# 
   563  0018                     	;# 
   564  0019                     	;# 
   565  001A                     	;# 
   566  001B                     	;# 
   567  001B                     	;# 
   568  001C                     	;# 
   569  001D                     	;# 
   570  001E                     	;# 
   571  001F                     	;# 
   572  0081                     	;# 
   573  0085                     	;# 
   574  0086                     	;# 
   575  0087                     	;# 
   576  0088                     	;# 
   577  0089                     	;# 
   578  008C                     	;# 
   579  008D                     	;# 
   580  008E                     	;# 
   581  0091                     	;# 
   582  0092                     	;# 
   583  0093                     	;# 
   584  0094                     	;# 
   585  0098                     	;# 
   586  0099                     	;# 
   587  009C                     	;# 
   588  009D                     	;# 
   589  009E                     	;# 
   590  009F                     	;# 
   591  010C                     	;# 
   592  010D                     	;# 
   593  010E                     	;# 
   594  010F                     	;# 
   595  018C                     	;# 
   596  018D                     	;# 
   597  0000                     	;# 
   598  0001                     	;# 
   599  0002                     	;# 
   600  0003                     	;# 
   601  0004                     	;# 
   602  0005                     	;# 
   603  0006                     	;# 
   604  0007                     	;# 
   605  0008                     	;# 
   606  0009                     	;# 
   607  000A                     	;# 
   608  000B                     	;# 
   609  000C                     	;# 
   610  000D                     	;# 
   611  000E                     	;# 
   612  000E                     	;# 
   613  000F                     	;# 
   614  0010                     	;# 
   615  0011                     	;# 
   616  0012                     	;# 
   617  0013                     	;# 
   618  0014                     	;# 
   619  0015                     	;# 
   620  0015                     	;# 
   621  0016                     	;# 
   622  0017                     	;# 
   623  0018                     	;# 
   624  0019                     	;# 
   625  001A                     	;# 
   626  001B                     	;# 
   627  001B                     	;# 
   628  001C                     	;# 
   629  001D                     	;# 
   630  001E                     	;# 
   631  001F                     	;# 
   632  0081                     	;# 
   633  0085                     	;# 
   634  0086                     	;# 
   635  0087                     	;# 
   636  0088                     	;# 
   637  0089                     	;# 
   638  008C                     	;# 
   639  008D                     	;# 
   640  008E                     	;# 
   641  0091                     	;# 
   642  0092                     	;# 
   643  0093                     	;# 
   644  0094                     	;# 
   645  0098                     	;# 
   646  0099                     	;# 
   647  009C                     	;# 
   648  009D                     	;# 
   649  009E                     	;# 
   650  009F                     	;# 
   651  010C                     	;# 
   652  010D                     	;# 
   653  010E                     	;# 
   654  010F                     	;# 
   655  018C                     	;# 
   656  018D                     	;# 
   657  0000                     	;# 
   658  0001                     	;# 
   659  0002                     	;# 
   660  0003                     	;# 
   661  0004                     	;# 
   662  0005                     	;# 
   663  0006                     	;# 
   664  0007                     	;# 
   665  0008                     	;# 
   666  0009                     	;# 
   667  000A                     	;# 
   668  000B                     	;# 
   669  000C                     	;# 
   670  000D                     	;# 
   671  000E                     	;# 
   672  000E                     	;# 
   673  000F                     	;# 
   674  0010                     	;# 
   675  0011                     	;# 
   676  0012                     	;# 
   677  0013                     	;# 
   678  0014                     	;# 
   679  0015                     	;# 
   680  0015                     	;# 
   681  0016                     	;# 
   682  0017                     	;# 
   683  0018                     	;# 
   684  0019                     	;# 
   685  001A                     	;# 
   686  001B                     	;# 
   687  001B                     	;# 
   688  001C                     	;# 
   689  001D                     	;# 
   690  001E                     	;# 
   691  001F                     	;# 
   692  0081                     	;# 
   693  0085                     	;# 
   694  0086                     	;# 
   695  0087                     	;# 
   696  0088                     	;# 
   697  0089                     	;# 
   698  008C                     	;# 
   699  008D                     	;# 
   700  008E                     	;# 
   701  0091                     	;# 
   702  0092                     	;# 
   703  0093                     	;# 
   704  0094                     	;# 
   705  0098                     	;# 
   706  0099                     	;# 
   707  009C                     	;# 
   708  009D                     	;# 
   709  009E                     	;# 
   710  009F                     	;# 
   711  010C                     	;# 
   712  010D                     	;# 
   713  010E                     	;# 
   714  010F                     	;# 
   715  018C                     	;# 
   716  018D                     	;# 
   717  0000                     	;# 
   718  0001                     	;# 
   719  0002                     	;# 
   720  0003                     	;# 
   721  0004                     	;# 
   722  0005                     	;# 
   723  0006                     	;# 
   724  0007                     	;# 
   725  0008                     	;# 
   726  0009                     	;# 
   727  000A                     	;# 
   728  000B                     	;# 
   729  000C                     	;# 
   730  000D                     	;# 
   731  000E                     	;# 
   732  000E                     	;# 
   733  000F                     	;# 
   734  0010                     	;# 
   735  0011                     	;# 
   736  0012                     	;# 
   737  0013                     	;# 
   738  0014                     	;# 
   739  0015                     	;# 
   740  0015                     	;# 
   741  0016                     	;# 
   742  0017                     	;# 
   743  0018                     	;# 
   744  0019                     	;# 
   745  001A                     	;# 
   746  001B                     	;# 
   747  001B                     	;# 
   748  001C                     	;# 
   749  001D                     	;# 
   750  001E                     	;# 
   751  001F                     	;# 
   752  0081                     	;# 
   753  0085                     	;# 
   754  0086                     	;# 
   755  0087                     	;# 
   756  0088                     	;# 
   757  0089                     	;# 
   758  008C                     	;# 
   759  008D                     	;# 
   760  008E                     	;# 
   761  0091                     	;# 
   762  0092                     	;# 
   763  0093                     	;# 
   764  0094                     	;# 
   765  0098                     	;# 
   766  0099                     	;# 
   767  009C                     	;# 
   768  009D                     	;# 
   769  009E                     	;# 
   770  009F                     	;# 
   771  010C                     	;# 
   772  010D                     	;# 
   773  010E                     	;# 
   774  010F                     	;# 
   775  018C                     	;# 
   776  018D                     	;# 
   777  0000                     	;# 
   778  0001                     	;# 
   779  0002                     	;# 
   780  0003                     	;# 
   781  0004                     	;# 
   782  0005                     	;# 
   783  0006                     	;# 
   784  0007                     	;# 
   785  0008                     	;# 
   786  0009                     	;# 
   787  000A                     	;# 
   788  000B                     	;# 
   789  000C                     	;# 
   790  000D                     	;# 
   791  000E                     	;# 
   792  000E                     	;# 
   793  000F                     	;# 
   794  0010                     	;# 
   795  0011                     	;# 
   796  0012                     	;# 
   797  0013                     	;# 
   798  0014                     	;# 
   799  0015                     	;# 
   800  0015                     	;# 
   801  0016                     	;# 
   802  0017                     	;# 
   803  0018                     	;# 
   804  0019                     	;# 
   805  001A                     	;# 
   806  001B                     	;# 
   807  001B                     	;# 
   808  001C                     	;# 
   809  001D                     	;# 
   810  001E                     	;# 
   811  001F                     	;# 
   812  0081                     	;# 
   813  0085                     	;# 
   814  0086                     	;# 
   815  0087                     	;# 
   816  0088                     	;# 
   817  0089                     	;# 
   818  008C                     	;# 
   819  008D                     	;# 
   820  008E                     	;# 
   821  0091                     	;# 
   822  0092                     	;# 
   823  0093                     	;# 
   824  0094                     	;# 
   825  0098                     	;# 
   826  0099                     	;# 
   827  009C                     	;# 
   828  009D                     	;# 
   829  009E                     	;# 
   830  009F                     	;# 
   831  010C                     	;# 
   832  010D                     	;# 
   833  010E                     	;# 
   834  010F                     	;# 
   835  018C                     	;# 
   836  018D                     	;# 
   837  0000                     	;# 
   838  0001                     	;# 
   839  0002                     	;# 
   840  0003                     	;# 
   841  0004                     	;# 
   842  0005                     	;# 
   843  0006                     	;# 
   844  0007                     	;# 
   845  0008                     	;# 
   846  0009                     	;# 
   847  000A                     	;# 
   848  000B                     	;# 
   849  000C                     	;# 
   850  000D                     	;# 
   851  000E                     	;# 
   852  000E                     	;# 
   853  000F                     	;# 
   854  0010                     	;# 
   855  0011                     	;# 
   856  0012                     	;# 
   857  0013                     	;# 
   858  0014                     	;# 
   859  0015                     	;# 
   860  0015                     	;# 
   861  0016                     	;# 
   862  0017                     	;# 
   863  0018                     	;# 
   864  0019                     	;# 
   865  001A                     	;# 
   866  001B                     	;# 
   867  001B                     	;# 
   868  001C                     	;# 
   869  001D                     	;# 
   870  001E                     	;# 
   871  001F                     	;# 
   872  0081                     	;# 
   873  0085                     	;# 
   874  0086                     	;# 
   875  0087                     	;# 
   876  0088                     	;# 
   877  0089                     	;# 
   878  008C                     	;# 
   879  008D                     	;# 
   880  008E                     	;# 
   881  0091                     	;# 
   882  0092                     	;# 
   883  0093                     	;# 
   884  0094                     	;# 
   885  0098                     	;# 
   886  0099                     	;# 
   887  009C                     	;# 
   888  009D                     	;# 
   889  009E                     	;# 
   890  009F                     	;# 
   891  010C                     	;# 
   892  010D                     	;# 
   893  010E                     	;# 
   894  010F                     	;# 
   895  018C                     	;# 
   896  018D                     	;# 
   897                           
   898                           	psect	idataBANK1
   899  07FF                     __pidataBANK1:	
   900                           
   901                           ;initializer for _temperature
   902  07FF  3443               	retlw	67
   903  001F                     _ADCON0bits	set	31
   904  001E                     _ADRESH	set	30
   905  000B                     _INTCON	set	11
   906  000B                     _INTCONbits	set	11
   907  000C                     _PIR1bits	set	12
   908  0006                     _PORTB	set	6
   909  0010                     _T1CON	set	16
   910  0010                     _T1CONbits	set	16
   911  0001                     _TMR0	set	1
   912  000F                     _TMR1H	set	15
   913  000E                     _TMR1L	set	14
   914  005F                     _GIE	set	95
   915  0035                     _RB5	set	53
   916  0037                     _RB7	set	55
   917  0058                     _RBIF	set	88
   918  0040                     _RD0	set	64
   919  0041                     _RD1	set	65
   920  0042                     _RD2	set	66
   921  0043                     _RD3	set	67
   922  0044                     _RD4	set	68
   923  0046                     _RD6	set	70
   924  0047                     _RD7	set	71
   925  009F                     _ADCON1bits	set	159
   926  009E                     _ADRESL	set	158
   927  0081                     _OPTION_REG	set	129
   928  0085                     _TRISA	set	133
   929  0086                     _TRISB	set	134
   930  0088                     _TRISD	set	136
   931                           
   932                           	psect	strings
   933  0800                     __pstrings:	
   934  0800                     stringtab:	
   935  0800                     __stringtab:	
   936  0800                     stringcode:	
   937                           ;	String table - string pointers are 1 byte each
   938                           
   939  0800                     stringdir:	
   940  0800  3008               	movlw	high stringdir
   941  0801  008A               	movwf	10
   942  0802  0804               	movf	4,w
   943  0803  0A84               	incf	4,f
   944  0804  0782               	addwf	2,f
   945  0805                     __stringbase:	
   946  0805  3400               	retlw	0
   947  0806                     __end_of__stringtab:	
   948  0806                     STR_5:	
   949  0806  3443               	retlw	67	;'C'
   950  0807  3465               	retlw	101	;'e'
   951  0808  346E               	retlw	110	;'n'
   952  0809  3474               	retlw	116	;'t'
   953  080A  3469               	retlw	105	;'i'
   954  080B  3467               	retlw	103	;'g'
   955  080C  3472               	retlw	114	;'r'
   956  080D  3461               	retlw	97	;'a'
   957  080E  3464               	retlw	100	;'d'
   958  080F  3465               	retlw	101	;'e'
   959  0810  3400               	retlw	0
   960  0811                     STR_6:	
   961  0811  3446               	retlw	70	;'F'
   962  0812  3461               	retlw	97	;'a'
   963  0813  3468               	retlw	104	;'h'
   964  0814  3472               	retlw	114	;'r'
   965  0815  3465               	retlw	101	;'e'
   966  0816  346E               	retlw	110	;'n'
   967  0817  3468               	retlw	104	;'h'
   968  0818  3465               	retlw	101	;'e'
   969  0819  3469               	retlw	105	;'i'
   970  081A  3474               	retlw	116	;'t'
   971  081B  3400               	retlw	0
   972  081C                     STR_4:	
   973  081C  3474               	retlw	116	;'t'
   974  081D  3465               	retlw	101	;'e'
   975  081E  346D               	retlw	109	;'m'
   976  081F  3470               	retlw	112	;'p'
   977  0820  3420               	retlw	32	;' '
   978  0821  346D               	retlw	109	;'m'
   979  0822  346F               	retlw	111	;'o'
   980  0823  3464               	retlw	100	;'d'
   981  0824  3465               	retlw	101	;'e'
   982  0825  3400               	retlw	0
   983  0826                     STR_3:	
   984  0826  3473               	retlw	115	;'s'
   985  0827  3465               	retlw	101	;'e'
   986  0828  3474               	retlw	116	;'t'
   987  0829  3420               	retlw	32	;' '
   988  082A  3461               	retlw	97	;'a'
   989  082B  346C               	retlw	108	;'l'
   990  082C  3461               	retlw	97	;'a'
   991  082D  3472               	retlw	114	;'r'
   992  082E  346D               	retlw	109	;'m'
   993  082F  3400               	retlw	0
   994  0830                     STR_2:	
   995  0830  3473               	retlw	115	;'s'
   996  0831  3465               	retlw	101	;'e'
   997  0832  3474               	retlw	116	;'t'
   998  0833  3420               	retlw	32	;' '
   999  0834  3474               	retlw	116	;'t'
  1000  0835  3469               	retlw	105	;'i'
  1001  0836  346D               	retlw	109	;'m'
  1002  0837  3465               	retlw	101	;'e'
  1003  0838  3400               	retlw	0
  1004  0839                     STR_16:	
  1005  0839  3474               	retlw	116	;'t'
  1006  083A  3469               	retlw	105	;'i'
  1007  083B  346D               	retlw	109	;'m'
  1008  083C  3465               	retlw	101	;'e'
  1009  083D  3420               	retlw	32	;' '
  1010  083E  343A               	retlw	58	;':'
  1011  083F  3420               	retlw	32	;' '
  1012  0840  3400               	retlw	0
  1013  0841                     STR_17:	
  1014  0841  3474               	retlw	116	;'t'
  1015  0842  3465               	retlw	101	;'e'
  1016  0843  346D               	retlw	109	;'m'
  1017  0844  3470               	retlw	112	;'p'
  1018  0845  3420               	retlw	32	;' '
  1019  0846  343A               	retlw	58	;':'
  1020  0847  3420               	retlw	32	;' '
  1021  0848  3400               	retlw	0
  1022  0849                     STR_12:	
  1023  0849  3461               	retlw	97	;'a'
  1024  084A  346C               	retlw	108	;'l'
  1025  084B  3461               	retlw	97	;'a'
  1026  084C  3472               	retlw	114	;'r'
  1027  084D  346D               	retlw	109	;'m'
  1028  084E  343A               	retlw	58	;':'
  1029  084F  3420               	retlw	32	;' '
  1030  0850  3400               	retlw	0
  1031  0851                     STR_15:	
  1032  0851  3452               	retlw	82	;'R'
  1033  0852  3448               	retlw	72	;'H'
  1034  0853  343A               	retlw	58	;':'
  1035  0854  3420               	retlw	32	;' '
  1036  0855  3420               	retlw	32	;' '
  1037  0856  3420               	retlw	32	;' '
  1038  0857  3400               	retlw	0
  1039  0858                     STR_11:	
  1040  0858  3474               	retlw	116	;'t'
  1041  0859  3469               	retlw	105	;'i'
  1042  085A  346D               	retlw	109	;'m'
  1043  085B  3465               	retlw	101	;'e'
  1044  085C  343A               	retlw	58	;':'
  1045  085D  3420               	retlw	32	;' '
  1046  085E  3400               	retlw	0
  1047  085F                     STR_13:	
  1048  085F  3420               	retlw	32	;' '
  1049  0860  3420               	retlw	32	;' '
  1050  0861  3420               	retlw	32	;' '
  1051  0862  3420               	retlw	32	;' '
  1052  0863  3420               	retlw	32	;' '
  1053  0864  3400               	retlw	0
  1054  0865                     STR_8:	
  1055  0865  345F               	retlw	95	;'_'
  1056  0866  345F               	retlw	95	;'_'
  1057  0867  343A               	retlw	58	;':'
  1058  0868  345F               	retlw	95	;'_'
  1059  0869  345F               	retlw	95	;'_'
  1060  086A  3400               	retlw	0
  1061  086B                     STR_19:	
  1062  086B  3464               	retlw	100	;'d'
  1063  086C  3465               	retlw	101	;'e'
  1064  086D  3467               	retlw	103	;'g'
  1065  086E  3420               	retlw	32	;' '
  1066  086F  3400               	retlw	0
  1067  0870                     STR_1:	
  1068  0870  3445               	retlw	69	;'E'
  1069  0871  3452               	retlw	82	;'R'
  1070  0872  3452               	retlw	82	;'R'
  1071  0873  3400               	retlw	0
  1072  0839                     
  1073                           	psect	cinit
  1074  0015                     start_initialization:	
  1075                           ; #config settings
  1076                           
  1077  0015                     __initialization:	
  1078                           
  1079                           ; Initialize objects allocated to BANK1
  1080  0015  1683               	bsf	3,5	;RP0=1, select bank1
  1081  0016  1303               	bcf	3,6	;RP1=0, select bank1
  1082  0017  120A  118A  27FF   	fcall	__pidataBANK1	;fetch initializer
  1083  001A  00D5               	movwf	__pdataBANK1& (0+127)
  1084                           
  1085                           ; Clear objects allocated to BANK1
  1086  001B  01C6               	clrf	__pbssBANK1& (0+127)
  1087  001C  01C7               	clrf	(__pbssBANK1+1)& (0+127)
  1088  001D  01C8               	clrf	(__pbssBANK1+2)& (0+127)
  1089  001E  01C9               	clrf	(__pbssBANK1+3)& (0+127)
  1090  001F  01CA               	clrf	(__pbssBANK1+4)& (0+127)
  1091  0020  01CB               	clrf	(__pbssBANK1+5)& (0+127)
  1092  0021  01CC               	clrf	(__pbssBANK1+6)& (0+127)
  1093  0022  01CD               	clrf	(__pbssBANK1+7)& (0+127)
  1094  0023  01CE               	clrf	(__pbssBANK1+8)& (0+127)
  1095  0024  01CF               	clrf	(__pbssBANK1+9)& (0+127)
  1096  0025  01D0               	clrf	(__pbssBANK1+10)& (0+127)
  1097  0026  01D1               	clrf	(__pbssBANK1+11)& (0+127)
  1098  0027  01D2               	clrf	(__pbssBANK1+12)& (0+127)
  1099  0028  01D3               	clrf	(__pbssBANK1+13)& (0+127)
  1100  0029  01D4               	clrf	(__pbssBANK1+14)& (0+127)
  1101                           
  1102                           ; Clear objects allocated to COMMON
  1103  002A  01F5               	clrf	__pbssCOMMON& (0+127)
  1104  002B  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
  1105  002C  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
  1106  002D  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
  1107  002E                     end_of_initialization:	
  1108                           ;End of C runtime variable initialization code
  1109                           
  1110  002E                     __end_of__initialization:	
  1111  002E  0183               	clrf	3
  1112  002F  120A  118A  2832   	ljmp	_main	;jump to C main() function
  1113                           
  1114                           	psect	bssCOMMON
  1115  0075                     __pbssCOMMON:	
  1116  0075                     _temperatureMenu:	
  1117  0075                     	ds	2
  1118  0077                     _overflowInt:	
  1119  0077                     	ds	1
  1120  0078                     _timeRepeated:	
  1121  0078                     	ds	1
  1122                           
  1123                           	psect	bssBANK1
  1124  00C6                     __pbssBANK1:	
  1125  00C6                     _alarmTime:	
  1126  00C6                     	ds	4
  1127  00CA                     _time:	
  1128  00CA                     	ds	4
  1129  00CE                     _configuration_Options:	
  1130  00CE                     	ds	3
  1131  00D1                     _alarmActivator:	
  1132  00D1                     	ds	1
  1133  00D2                     _buzzer:	
  1134  00D2                     	ds	1
  1135  00D3                     _selectMode:	
  1136  00D3                     	ds	1
  1137  00D4                     _snoozeActivator:	
  1138  00D4                     	ds	1
  1139                           
  1140                           	psect	dataBANK1
  1141  00D5                     __pdataBANK1:	
  1142  00D5                     _temperature:	
  1143  00D5                     	ds	1
  1144                           
  1145                           	psect	cstackBANK1
  1146  00A0                     __pcstackBANK1:	
  1147  00A0                     ?_LCD_display_float:	
  1148  00A0                     LCD_display_float@value:	
  1149                           ; 1 bytes @ 0x0
  1150                           
  1151                           
  1152                           ; 3 bytes @ 0x0
  1153  00A0                     	ds	3
  1154  00A3                     LCD_display_float@dplaces:	
  1155                           
  1156                           ; 1 bytes @ 0x3
  1157  00A3                     	ds	1
  1158  00A4                     ??_LCD_display_float:	
  1159                           
  1160                           ; 1 bytes @ 0x4
  1161  00A4                     	ds	2
  1162  00A6                     LCD_display_float@buffer:	
  1163                           
  1164                           ; 12 bytes @ 0x6
  1165  00A6                     	ds	12
  1166  00B2                     LCD_display_float@j:	
  1167                           
  1168                           ; 1 bytes @ 0x12
  1169  00B2                     	ds	1
  1170  00B3                     LCD_display_float@output:	
  1171                           
  1172                           ; 7 bytes @ 0x13
  1173  00B3                     	ds	7
  1174  00BA                     LCD_display_float@isneg:	
  1175                           
  1176                           ; 1 bytes @ 0x1A
  1177  00BA                     	ds	1
  1178  00BB                     LCD_display_float@str_len:	
  1179                           
  1180                           ; 1 bytes @ 0x1B
  1181  00BB                     	ds	1
  1182  00BC                     LCD_display_float@offset:	
  1183                           
  1184                           ; 1 bytes @ 0x1C
  1185  00BC                     	ds	1
  1186  00BD                     LCD_display_float@pos:	
  1187                           
  1188                           ; 1 bytes @ 0x1D
  1189  00BD                     	ds	1
  1190  00BE                     LCD_display_float@i:	
  1191                           
  1192                           ; 1 bytes @ 0x1E
  1193  00BE                     	ds	1
  1194  00BF                     ??_temperatureReader:	
  1195  00BF                     humidityReader@Humidity:	
  1196                           ; 1 bytes @ 0x1F
  1197                           
  1198                           
  1199                           ; 3 bytes @ 0x1F
  1200  00BF                     	ds	1
  1201  00C0                     temperatureReader@TemperatureT:	
  1202                           
  1203                           ; 3 bytes @ 0x20
  1204  00C0                     	ds	3
  1205  00C3                     ??_main:	
  1206                           
  1207                           ; 1 bytes @ 0x23
  1208  00C3                     	ds	1
  1209  00C4                     main@i:	
  1210                           
  1211                           ; 2 bytes @ 0x24
  1212  00C4                     	ds	2
  1213                           
  1214                           	psect	cstackCOMMON
  1215  0070                     __pcstackCOMMON:	
  1216  0070                     ?_LCD_clear:	
  1217  0070                     ?_TMR1Delay:	
  1218                           ; 1 bytes @ 0x0
  1219                           
  1220  0070                     ?_temperatureReader:	
  1221                           ; 1 bytes @ 0x0
  1222                           
  1223  0070                     ?_LCD_initialise:	
  1224                           ; 1 bytes @ 0x0
  1225                           
  1226  0070                     ?_LCD_putch:	
  1227                           ; 1 bytes @ 0x0
  1228                           
  1229  0070                     ?_LCD_puts:	
  1230                           ; 1 bytes @ 0x0
  1231                           
  1232  0070                     ?_LCD_putsc:	
  1233                           ; 1 bytes @ 0x0
  1234                           
  1235  0070                     ?_LCD_cursor_on:	
  1236                           ; 1 bytes @ 0x0
  1237                           
  1238  0070                     ?_LCD_cursor_off:	
  1239                           ; 1 bytes @ 0x0
  1240                           
  1241  0070                     ?_ADC_initialise:	
  1242                           ; 1 bytes @ 0x0
  1243                           
  1244  0070                     ?_ADC_channel_select:	
  1245                           ; 1 bytes @ 0x0
  1246                           
  1247  0070                     ?_config:	
  1248                           ; 1 bytes @ 0x0
  1249                           
  1250  0070                     ?_MyISR:	
  1251                           ; 1 bytes @ 0x0
  1252                           
  1253  0070                     ??_MyISR:	
  1254                           ; 1 bytes @ 0x0
  1255                           
  1256  0070                     ?_humidityReader:	
  1257                           ; 1 bytes @ 0x0
  1258                           
  1259  0070                     ?_setTemperatureUnit:	
  1260                           ; 1 bytes @ 0x0
  1261                           
  1262  0070                     ?_main:	
  1263                           ; 1 bytes @ 0x0
  1264                           
  1265                           
  1266                           ; 1 bytes @ 0x0
  1267  0070                     	ds	5
  1268  0075                     ??_LCD_clear:	
  1269  0075                     ??_LCD_initialise:	
  1270                           ; 1 bytes @ 0x5
  1271                           
  1272  0075                     ??_LCD_putch:	
  1273                           ; 1 bytes @ 0x5
  1274                           
  1275  0075                     ??_LCD_cursor_on:	
  1276                           ; 1 bytes @ 0x5
  1277                           
  1278  0075                     ??_LCD_cursor_off:	
  1279                           ; 1 bytes @ 0x5
  1280                           
  1281  0075                     ??_ADC_initialise:	
  1282                           ; 1 bytes @ 0x5
  1283                           
  1284  0075                     ??_humidityReader:	
  1285                           ; 1 bytes @ 0x5
  1286                           
  1287  0075                     ??___wmul:	
  1288                           ; 1 bytes @ 0x5
  1289                           
  1290  0075                     ??___ftsub:	
  1291                           ; 1 bytes @ 0x5
  1292                           
  1293                           
  1294                           	psect	cstackBANK0
  1295  0020                     __pcstackBANK0:	
  1296                           ; 1 bytes @ 0x5
  1297                           
  1298  0020                     ?___ftge:	
  1299  0020                     ?_LCD_write:	
  1300                           ; 1 bit 
  1301                           
  1302  0020                     ??_TMR1Delay:	
  1303                           ; 1 bytes @ 0x0
  1304                           
  1305  0020                     ??_ADC_channel_select:	
  1306                           ; 1 bytes @ 0x0
  1307                           
  1308  0020                     ?_ADC_read:	
  1309                           ; 1 bytes @ 0x0
  1310                           
  1311  0020                     ?___wmul:	
  1312                           ; 2 bytes @ 0x0
  1313                           
  1314  0020                     ?___lwdiv:	
  1315                           ; 2 bytes @ 0x0
  1316                           
  1317  0020                     ?___lwmod:	
  1318                           ; 2 bytes @ 0x0
  1319                           
  1320  0020                     ?___ftpack:	
  1321                           ; 2 bytes @ 0x0
  1322                           
  1323  0020                     ?___aldiv:	
  1324                           ; 3 bytes @ 0x0
  1325                           
  1326  0020                     ?___lldiv:	
  1327                           ; 4 bytes @ 0x0
  1328                           
  1329  0020                     ?___llmod:	
  1330                           ; 4 bytes @ 0x0
  1331                           
  1332  0020                     LCD_write@rs:	
  1333                           ; 4 bytes @ 0x0
  1334                           
  1335  0020                     ___wmul@multiplier:	
  1336                           ; 1 bytes @ 0x0
  1337                           
  1338  0020                     ___lwdiv@divisor:	
  1339                           ; 2 bytes @ 0x0
  1340                           
  1341  0020                     ___lwmod@divisor:	
  1342                           ; 2 bytes @ 0x0
  1343                           
  1344  0020                     ___ftpack@arg:	
  1345                           ; 2 bytes @ 0x0
  1346                           
  1347  0020                     ___ftge@ff1:	
  1348                           ; 3 bytes @ 0x0
  1349                           
  1350  0020                     ___aldiv@divisor:	
  1351                           ; 3 bytes @ 0x0
  1352                           
  1353  0020                     ___lldiv@divisor:	
  1354                           ; 4 bytes @ 0x0
  1355                           
  1356  0020                     ___llmod@divisor:	
  1357                           ; 4 bytes @ 0x0
  1358                           
  1359                           
  1360                           ; 4 bytes @ 0x0
  1361  0020                     	ds	1
  1362  0021                     ??_LCD_write:	
  1363  0021                     ADC_channel_select@channel:	
  1364                           ; 1 bytes @ 0x1
  1365                           
  1366                           
  1367                           ; 1 bytes @ 0x1
  1368  0021                     	ds	1
  1369  0022                     ??_ADC_read:	
  1370  0022                     LCD_write@intsON:	
  1371                           ; 1 bytes @ 0x2
  1372                           
  1373  0022                     TMR1Delay@delay:	
  1374                           ; 1 bytes @ 0x2
  1375                           
  1376  0022                     ___wmul@multiplicand:	
  1377                           ; 1 bytes @ 0x2
  1378                           
  1379  0022                     ___lwdiv@dividend:	
  1380                           ; 2 bytes @ 0x2
  1381                           
  1382  0022                     ___lwmod@dividend:	
  1383                           ; 2 bytes @ 0x2
  1384                           
  1385                           
  1386                           ; 2 bytes @ 0x2
  1387  0022                     	ds	1
  1388  0023                     LCD_write@TRISB_BAK:	
  1389  0023                     ___ftpack@exp:	
  1390                           ; 1 bytes @ 0x3
  1391                           
  1392  0023                     ADC_read@result:	
  1393                           ; 1 bytes @ 0x3
  1394                           
  1395  0023                     TMR1Delay@x:	
  1396                           ; 2 bytes @ 0x3
  1397                           
  1398  0023                     ___ftge@ff2:	
  1399                           ; 2 bytes @ 0x3
  1400                           
  1401                           
  1402                           ; 3 bytes @ 0x3
  1403  0023                     	ds	1
  1404  0024                     ??___lwdiv:	
  1405  0024                     ??___lwmod:	
  1406                           ; 1 bytes @ 0x4
  1407                           
  1408  0024                     LCD_write@temp:	
  1409                           ; 1 bytes @ 0x4
  1410                           
  1411  0024                     ___ftpack@sign:	
  1412                           ; 1 bytes @ 0x4
  1413                           
  1414  0024                     ___wmul@product:	
  1415                           ; 1 bytes @ 0x4
  1416                           
  1417  0024                     ___aldiv@dividend:	
  1418                           ; 2 bytes @ 0x4
  1419                           
  1420  0024                     ___lldiv@dividend:	
  1421                           ; 4 bytes @ 0x4
  1422                           
  1423  0024                     ___llmod@dividend:	
  1424                           ; 4 bytes @ 0x4
  1425                           
  1426                           
  1427                           ; 4 bytes @ 0x4
  1428  0024                     	ds	1
  1429  0025                     ??___ftpack:	
  1430  0025                     LCD_write@c:	
  1431                           ; 1 bytes @ 0x5
  1432                           
  1433  0025                     ___lwdiv@counter:	
  1434                           ; 1 bytes @ 0x5
  1435                           
  1436  0025                     ___lwmod@counter:	
  1437                           ; 1 bytes @ 0x5
  1438                           
  1439                           
  1440                           ; 1 bytes @ 0x5
  1441  0025                     	ds	1
  1442  0026                     ??___ftge:	
  1443  0026                     ?___lmul:	
  1444                           ; 1 bytes @ 0x6
  1445                           
  1446  0026                     LCD_write@RSmask:	
  1447                           ; 4 bytes @ 0x6
  1448                           
  1449  0026                     ___lwdiv@quotient:	
  1450                           ; 1 bytes @ 0x6
  1451                           
  1452  0026                     ___lmul@multiplier:	
  1453                           ; 2 bytes @ 0x6
  1454                           
  1455                           
  1456                           ; 4 bytes @ 0x6
  1457  0026                     	ds	1
  1458  0027                     LCD_write@counter:	
  1459                           
  1460                           ; 2 bytes @ 0x7
  1461  0027                     	ds	1
  1462  0028                     ??___aldiv:	
  1463  0028                     ??___lldiv:	
  1464                           ; 1 bytes @ 0x8
  1465                           
  1466  0028                     ??___llmod:	
  1467                           ; 1 bytes @ 0x8
  1468                           
  1469  0028                     ?___lwtoft:	
  1470                           ; 1 bytes @ 0x8
  1471                           
  1472  0028                     ___lwtoft@c:	
  1473                           ; 3 bytes @ 0x8
  1474                           
  1475                           
  1476                           ; 2 bytes @ 0x8
  1477  0028                     	ds	1
  1478  0029                     ?_LCD_cursor:	
  1479  0029                     LCD_putch@c:	
  1480                           ; 1 bytes @ 0x9
  1481                           
  1482  0029                     LCD_cursor@y:	
  1483                           ; 1 bytes @ 0x9
  1484                           
  1485  0029                     ___aldiv@counter:	
  1486                           ; 1 bytes @ 0x9
  1487                           
  1488  0029                     ___llmod@counter:	
  1489                           ; 1 bytes @ 0x9
  1490                           
  1491  0029                     LCD_clear@counter:	
  1492                           ; 1 bytes @ 0x9
  1493                           
  1494  0029                     ___lldiv@quotient:	
  1495                           ; 2 bytes @ 0x9
  1496                           
  1497                           
  1498                           ; 4 bytes @ 0x9
  1499  0029                     	ds	1
  1500  002A                     ??_LCD_cursor:	
  1501  002A                     ___aldiv@sign:	
  1502                           ; 1 bytes @ 0xA
  1503                           
  1504  002A                     LCD_putch@counter:	
  1505                           ; 1 bytes @ 0xA
  1506                           
  1507  002A                     ___lmul@multiplicand:	
  1508                           ; 2 bytes @ 0xA
  1509                           
  1510                           
  1511                           ; 4 bytes @ 0xA
  1512  002A                     	ds	1
  1513  002B                     ??___lwtoft:	
  1514  002B                     LCD_cursor@x:	
  1515                           ; 1 bytes @ 0xB
  1516                           
  1517  002B                     LCD_initialise@counter:	
  1518                           ; 1 bytes @ 0xB
  1519                           
  1520  002B                     ___aldiv@quotient:	
  1521                           ; 2 bytes @ 0xB
  1522                           
  1523                           
  1524                           ; 4 bytes @ 0xB
  1525  002B                     	ds	1
  1526  002C                     ??_LCD_puts:	
  1527  002C                     ??_LCD_putsc:	
  1528                           ; 1 bytes @ 0xC
  1529                           
  1530  002C                     ?___ftdiv:	
  1531                           ; 1 bytes @ 0xC
  1532                           
  1533  002C                     ___ftdiv@f2:	
  1534                           ; 3 bytes @ 0xC
  1535                           
  1536                           
  1537                           ; 3 bytes @ 0xC
  1538  002C                     	ds	1
  1539  002D                     ??_config:	
  1540  002D                     LCD_putsc@i:	
  1541                           ; 1 bytes @ 0xD
  1542                           
  1543  002D                     ___lldiv@counter:	
  1544                           ; 1 bytes @ 0xD
  1545                           
  1546                           
  1547                           ; 1 bytes @ 0xD
  1548  002D                     	ds	1
  1549  002E                     ?_ultoa:	
  1550  002E                     ??___lmul:	
  1551                           ; 1 bytes @ 0xE
  1552                           
  1553  002E                     LCD_puts@s:	
  1554                           ; 1 bytes @ 0xE
  1555                           
  1556  002E                     LCD_putsc@c:	
  1557                           ; 1 bytes @ 0xE
  1558                           
  1559  002E                     ultoa@val:	
  1560                           ; 1 bytes @ 0xE
  1561                           
  1562                           
  1563                           ; 4 bytes @ 0xE
  1564  002E                     	ds	1
  1565  002F                     ?_updateTimeDisplayed:	
  1566  002F                     ?_updateSetAlarm:	
  1567                           ; 1 bytes @ 0xF
  1568                           
  1569  002F                     LCD_puts@i:	
  1570                           ; 1 bytes @ 0xF
  1571                           
  1572  002F                     LCD_putsc@s:	
  1573                           ; 1 bytes @ 0xF
  1574                           
  1575  002F                     ___ftdiv@f1:	
  1576                           ; 1 bytes @ 0xF
  1577                           
  1578  002F                     updateTimeDisplayed@elapsed_time:	
  1579                           ; 3 bytes @ 0xF
  1580                           
  1581  002F                     updateSetAlarm@elapsed_time:	
  1582                           ; 4 bytes @ 0xF
  1583                           
  1584  002F                     ___lmul@product:	
  1585                           ; 4 bytes @ 0xF
  1586                           
  1587                           
  1588                           ; 4 bytes @ 0xF
  1589  002F                     	ds	1
  1590  0030                     ??_setTemperatureUnit:	
  1591  0030                     ?_screenConfigurationMode:	
  1592                           ; 1 bytes @ 0x10
  1593                           
  1594  0030                     LCD_puts@c:	
  1595                           ; 2 bytes @ 0x10
  1596                           
  1597                           
  1598                           ; 1 bytes @ 0x10
  1599  0030                     	ds	2
  1600  0032                     ??_screenConfigurationMode:	
  1601  0032                     ??___ftdiv:	
  1602                           ; 1 bytes @ 0x12
  1603                           
  1604  0032                     setTemperatureUnit@c:	
  1605                           ; 1 bytes @ 0x12
  1606                           
  1607  0032                     ultoa@base:	
  1608                           ; 2 bytes @ 0x12
  1609                           
  1610                           
  1611                           ; 2 bytes @ 0x12
  1612  0032                     	ds	1
  1613  0033                     ??_updateTimeDisplayed:	
  1614  0033                     ??_updateSetAlarm:	
  1615                           ; 1 bytes @ 0x13
  1616                           
  1617  0033                     ?_setTimeDisplayer:	
  1618                           ; 1 bytes @ 0x13
  1619                           
  1620  0033                     ?_setAlarm:	
  1621                           ; 4 bytes @ 0x13
  1622                           
  1623                           
  1624                           ; 4 bytes @ 0x13
  1625  0033                     	ds	1
  1626  0034                     ??_ultoa:	
  1627  0034                     screenConfigurationMode@c:	
  1628                           ; 1 bytes @ 0x14
  1629                           
  1630  0034                     setTemperatureUnit@b:	
  1631                           ; 2 bytes @ 0x14
  1632                           
  1633                           
  1634                           ; 2 bytes @ 0x14
  1635  0034                     	ds	1
  1636  0035                     updateTimeDisplayed@backSecondDigit:	
  1637  0035                     updateSetAlarm@remainder:	
  1638                           ; 1 bytes @ 0x15
  1639                           
  1640  0035                     ultoa@v:	
  1641                           ; 2 bytes @ 0x15
  1642                           
  1643                           
  1644                           ; 4 bytes @ 0x15
  1645  0035                     	ds	1
  1646  0036                     updateTimeDisplayed@frontSecondDigit:	
  1647  0036                     ___ftdiv@cntr:	
  1648                           ; 1 bytes @ 0x16
  1649                           
  1650  0036                     screenConfigurationMode@b:	
  1651                           ; 1 bytes @ 0x16
  1652                           
  1653  0036                     setTemperatureUnit@a:	
  1654                           ; 2 bytes @ 0x16
  1655                           
  1656                           
  1657                           ; 2 bytes @ 0x16
  1658  0036                     	ds	1
  1659  0037                     ??_setTimeDisplayer:	
  1660  0037                     ??_setAlarm:	
  1661                           ; 1 bytes @ 0x17
  1662                           
  1663  0037                     updateTimeDisplayed@backMinuteDigit:	
  1664                           ; 1 bytes @ 0x17
  1665                           
  1666  0037                     updateSetAlarm@hoursVariable4:	
  1667                           ; 1 bytes @ 0x17
  1668                           
  1669  0037                     ___ftdiv@f3:	
  1670                           ; 1 bytes @ 0x17
  1671                           
  1672                           
  1673                           ; 3 bytes @ 0x17
  1674  0037                     	ds	1
  1675  0038                     updateTimeDisplayed@frontMinuteDigit:	
  1676  0038                     updateSetAlarm@hoursVariable3:	
  1677                           ; 1 bytes @ 0x18
  1678                           
  1679  0038                     screenConfigurationMode@a:	
  1680                           ; 1 bytes @ 0x18
  1681                           
  1682                           
  1683                           ; 2 bytes @ 0x18
  1684  0038                     	ds	1
  1685  0039                     updateTimeDisplayed@backHourDigit:	
  1686  0039                     updateSetAlarm@minVariable2:	
  1687                           ; 1 bytes @ 0x19
  1688                           
  1689  0039                     ultoa@c:	
  1690                           ; 1 bytes @ 0x19
  1691                           
  1692                           
  1693                           ; 1 bytes @ 0x19
  1694  0039                     	ds	1
  1695  003A                     updateTimeDisplayed@frontHourDigit:	
  1696  003A                     updateSetAlarm@minVariable1:	
  1697                           ; 1 bytes @ 0x1A
  1698                           
  1699  003A                     ___ftdiv@exp:	
  1700                           ; 1 bytes @ 0x1A
  1701                           
  1702  003A                     ultoa@buf:	
  1703                           ; 1 bytes @ 0x1A
  1704                           
  1705                           
  1706                           ; 1 bytes @ 0x1A
  1707  003A                     	ds	1
  1708  003B                     ___ftdiv@sign:	
  1709  003B                     updateTimeDisplayed@seconds:	
  1710                           ; 1 bytes @ 0x1B
  1711                           
  1712  003B                     updateSetAlarm@minutes:	
  1713                           ; 2 bytes @ 0x1B
  1714                           
  1715                           
  1716                           ; 2 bytes @ 0x1B
  1717  003B                     	ds	1
  1718  003C                     ?___ftmul:	
  1719  003C                     ___ftmul@f1:	
  1720                           ; 3 bytes @ 0x1C
  1721                           
  1722                           
  1723                           ; 3 bytes @ 0x1C
  1724  003C                     	ds	1
  1725  003D                     updateTimeDisplayed@hours:	
  1726  003D                     updateSetAlarm@hours:	
  1727                           ; 2 bytes @ 0x1D
  1728                           
  1729                           
  1730                           ; 2 bytes @ 0x1D
  1731  003D                     	ds	2
  1732  003F                     updateTimeDisplayed@minutes:	
  1733  003F                     _setTimeDisplayer$1074:	
  1734                           ; 2 bytes @ 0x1F
  1735                           
  1736  003F                     _setAlarm$1075:	
  1737                           ; 2 bytes @ 0x1F
  1738                           
  1739  003F                     ___ftmul@f2:	
  1740                           ; 2 bytes @ 0x1F
  1741                           
  1742                           
  1743                           ; 3 bytes @ 0x1F
  1744  003F                     	ds	2
  1745  0041                     setTimeDisplayer@first_Minute_Digit:	
  1746  0041                     setAlarm@first_Minute_Digit:	
  1747                           ; 1 bytes @ 0x21
  1748                           
  1749  0041                     updateTimeDisplayed@remainder:	
  1750                           ; 1 bytes @ 0x21
  1751                           
  1752                           
  1753                           ; 2 bytes @ 0x21
  1754  0041                     	ds	1
  1755  0042                     ??___ftmul:	
  1756  0042                     setTimeDisplayer@second_Minute_Digit:	
  1757                           ; 1 bytes @ 0x22
  1758                           
  1759  0042                     setAlarm@second_Minute_Digit:	
  1760                           ; 1 bytes @ 0x22
  1761                           
  1762                           
  1763                           ; 1 bytes @ 0x22
  1764  0042                     	ds	1
  1765  0043                     setTimeDisplayer@second_Hour_Digit:	
  1766  0043                     setAlarm@second_Hour_Digit:	
  1767                           ; 1 bytes @ 0x23
  1768                           
  1769                           
  1770                           ; 1 bytes @ 0x23
  1771  0043                     	ds	1
  1772  0044                     setTimeDisplayer@first_Hour_Digit:	
  1773  0044                     setAlarm@first_Hour_Digit:	
  1774                           ; 1 bytes @ 0x24
  1775                           
  1776                           
  1777                           ; 1 bytes @ 0x24
  1778  0044                     	ds	1
  1779  0045                     setTimeDisplayer@push_Button:	
  1780  0045                     setAlarm@pushbutton:	
  1781                           ; 2 bytes @ 0x25
  1782                           
  1783                           
  1784                           ; 2 bytes @ 0x25
  1785  0045                     	ds	1
  1786  0046                     ___ftmul@exp:	
  1787                           
  1788                           ; 1 bytes @ 0x26
  1789  0046                     	ds	1
  1790  0047                     setTimeDisplayer@variable_Value:	
  1791  0047                     setAlarm@variable_Value:	
  1792                           ; 2 bytes @ 0x27
  1793                           
  1794  0047                     ___ftmul@f3_as_product:	
  1795                           ; 2 bytes @ 0x27
  1796                           
  1797                           
  1798                           ; 3 bytes @ 0x27
  1799  0047                     	ds	3
  1800  004A                     ___ftmul@cntr:	
  1801                           
  1802                           ; 1 bytes @ 0x2A
  1803  004A                     	ds	1
  1804  004B                     ___ftmul@sign:	
  1805                           
  1806                           ; 1 bytes @ 0x2B
  1807  004B                     	ds	1
  1808  004C                     ?___ftadd:	
  1809  004C                     ___ftadd@f1:	
  1810                           ; 3 bytes @ 0x2C
  1811                           
  1812                           
  1813                           ; 3 bytes @ 0x2C
  1814  004C                     	ds	3
  1815  004F                     ___ftadd@f2:	
  1816                           
  1817                           ; 3 bytes @ 0x2F
  1818  004F                     	ds	3
  1819  0052                     ??___ftadd:	
  1820                           
  1821                           ; 1 bytes @ 0x32
  1822  0052                     	ds	4
  1823  0056                     ___ftadd@sign:	
  1824                           
  1825                           ; 1 bytes @ 0x36
  1826  0056                     	ds	1
  1827  0057                     ___ftadd@exp2:	
  1828                           
  1829                           ; 1 bytes @ 0x37
  1830  0057                     	ds	1
  1831  0058                     ___ftadd@exp1:	
  1832                           
  1833                           ; 1 bytes @ 0x38
  1834  0058                     	ds	1
  1835  0059                     ?___ftsub:	
  1836  0059                     ?___fttol:	
  1837                           ; 3 bytes @ 0x39
  1838                           
  1839  0059                     ___ftsub@f2:	
  1840                           ; 4 bytes @ 0x39
  1841                           
  1842  0059                     ___fttol@f1:	
  1843                           ; 3 bytes @ 0x39
  1844                           
  1845                           
  1846                           ; 3 bytes @ 0x39
  1847  0059                     	ds	3
  1848  005C                     ___ftsub@f1:	
  1849                           
  1850                           ; 3 bytes @ 0x3C
  1851  005C                     	ds	1
  1852  005D                     ??___fttol:	
  1853                           
  1854                           ; 1 bytes @ 0x3D
  1855  005D                     	ds	4
  1856  0061                     ___fttol@sign1:	
  1857                           
  1858                           ; 1 bytes @ 0x41
  1859  0061                     	ds	1
  1860  0062                     ___fttol@lval:	
  1861                           
  1862                           ; 4 bytes @ 0x42
  1863  0062                     	ds	4
  1864  0066                     ___fttol@exp1:	
  1865                           
  1866                           ; 1 bytes @ 0x46
  1867  0066                     	ds	1
  1868  0067                     ?_ltoa:	
  1869  0067                     ltoa@val:	
  1870                           ; 1 bytes @ 0x47
  1871                           
  1872                           
  1873                           ; 4 bytes @ 0x47
  1874  0067                     	ds	4
  1875  006B                     ltoa@base:	
  1876                           
  1877                           ; 2 bytes @ 0x4B
  1878  006B                     	ds	2
  1879  006D                     ??_ltoa:	
  1880                           
  1881                           ; 1 bytes @ 0x4D
  1882  006D                     	ds	1
  1883  006E                     ltoa@cp:	
  1884                           
  1885                           ; 1 bytes @ 0x4E
  1886  006E                     	ds	1
  1887  006F                     ltoa@buf:	
  1888                           
  1889                           ; 1 bytes @ 0x4F
  1890  006F                     	ds	1
  1891                           
  1892                           	psect	maintext
  1893  0032                     __pmaintext:	
  1894 ;;
  1895 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1896 ;;
  1897 ;; *************** function _main *****************
  1898 ;; Defined at:
  1899 ;;		line 16 in file "mainDigitalClock.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;		None
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;  i               2   36[BANK1 ] int 
  1904 ;; Return value:  Size  Location     Type
  1905 ;;                  1    wreg      void 
  1906 ;; Registers used:
  1907 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1908 ;; Tracked objects:
  1909 ;;		On entry : B00/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1913 ;;      Params:         0       0       0       0       0
  1914 ;;      Locals:         0       0       2       0       0
  1915 ;;      Temps:          0       0       1       0       0
  1916 ;;      Totals:         0       0       3       0       0
  1917 ;;Total ram usage:        3 bytes
  1918 ;; Hardware stack levels required when called:    6
  1919 ;; This function calls:
  1920 ;;		_LCD_clear
  1921 ;;		_LCD_cursor
  1922 ;;		_LCD_putsc
  1923 ;;		_TMR1Delay
  1924 ;;		_config
  1925 ;;		_humidityReader
  1926 ;;		_screenConfigurationMode
  1927 ;;		_setAlarm
  1928 ;;		_setTemperatureUnit
  1929 ;;		_setTimeDisplayer
  1930 ;;		_temperatureReader
  1931 ;;		_updateSetAlarm
  1932 ;;		_updateTimeDisplayed
  1933 ;; This function is called by:
  1934 ;;		Startup code after reset
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938                           
  1939                           ;psect for function _main
  1940  0032                     _main:	
  1941                           
  1942                           ;mainDigitalClock.c: 17: config();
  1943                           
  1944                           ;incstack = 0
  1945                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1946  0032  160A  158A  274F  120A  118A  	fcall	_config
  1947                           
  1948                           ;mainDigitalClock.c: 18: int i = 0;
  1949  0037  1683               	bsf	3,5	;RP0=1, select bank1
  1950  0038  1303               	bcf	3,6	;RP1=0, select bank1
  1951  0039  01C4               	clrf	main@i^(0+128)
  1952  003A  01C5               	clrf	(main@i+1)^(0+128)
  1953  003B                     l5714:	
  1954                           ;mainDigitalClock.c: 20: while (1) {
  1955                           
  1956                           
  1957                           ;mainDigitalClock.c: 22: LCD_cursor(0, 0);
  1958  003B  1283               	bcf	3,5	;RP0=0, select bank0
  1959  003C  1303               	bcf	3,6	;RP1=0, select bank0
  1960  003D  01A9               	clrf	LCD_cursor@y
  1961  003E  3000               	movlw	0
  1962  003F  160A  158A  24E9  120A  118A  	fcall	_LCD_cursor
  1963                           
  1964                           ;mainDigitalClock.c: 23: LCD_putsc("time: ");
  1965  0044  3053               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1966  0045  160A  158A  25EE  120A  118A  	fcall	_LCD_putsc
  1967                           
  1968                           ;mainDigitalClock.c: 26: for (i = 0; i < 5; i++) {
  1969  004A  1683               	bsf	3,5	;RP0=1, select bank1
  1970  004B  1303               	bcf	3,6	;RP1=0, select bank1
  1971  004C  01C4               	clrf	main@i^(0+128)
  1972  004D  01C5               	clrf	(main@i+1)^(0+128)
  1973  004E  0845               	movf	(main@i+1)^(0+128),w
  1974  004F  3A80               	xorlw	128
  1975  0050  00FF               	movwf	127
  1976  0051  3080               	movlw	128
  1977  0052  027F               	subwf	127,w
  1978  0053  1D03               	skipz
  1979  0054  2857               	goto	u8255
  1980  0055  3005               	movlw	5
  1981  0056  0244               	subwf	main@i^(0+128),w
  1982  0057                     u8255:	
  1983  0057  1803               	btfsc	3,0
  1984  0058  29A9               	goto	l5792
  1985  0059                     l5724:	
  1986                           
  1987                           ;mainDigitalClock.c: 27: LCD_cursor(6, 0);
  1988  0059  1283               	bcf	3,5	;RP0=0, select bank0
  1989  005A  1303               	bcf	3,6	;RP1=0, select bank0
  1990  005B  01A9               	clrf	LCD_cursor@y
  1991  005C  3006               	movlw	6
  1992  005D  160A  158A  24E9  120A  118A  	fcall	_LCD_cursor
  1993                           
  1994                           ;mainDigitalClock.c: 28: updateTimeDisplayed(time);
  1995  0062  1683               	bsf	3,5	;RP0=1, select bank1
  1996  0063  1303               	bcf	3,6	;RP1=0, select bank1
  1997  0064  084D               	movf	(_time+3)^(0+128),w
  1998  0065  1283               	bcf	3,5	;RP0=0, select bank0
  1999  0066  1303               	bcf	3,6	;RP1=0, select bank0
  2000  0067  00B2               	movwf	updateTimeDisplayed@elapsed_time+3
  2001  0068  1683               	bsf	3,5	;RP0=1, select bank1
  2002  0069  1303               	bcf	3,6	;RP1=0, select bank1
  2003  006A  084C               	movf	(_time+2)^(0+128),w
  2004  006B  1283               	bcf	3,5	;RP0=0, select bank0
  2005  006C  1303               	bcf	3,6	;RP1=0, select bank0
  2006  006D  00B1               	movwf	updateTimeDisplayed@elapsed_time+2
  2007  006E  1683               	bsf	3,5	;RP0=1, select bank1
  2008  006F  1303               	bcf	3,6	;RP1=0, select bank1
  2009  0070  084B               	movf	(_time+1)^(0+128),w
  2010  0071  1283               	bcf	3,5	;RP0=0, select bank0
  2011  0072  1303               	bcf	3,6	;RP1=0, select bank0
  2012  0073  00B0               	movwf	updateTimeDisplayed@elapsed_time+1
  2013  0074  1683               	bsf	3,5	;RP0=1, select bank1
  2014  0075  1303               	bcf	3,6	;RP1=0, select bank1
  2015  0076  084A               	movf	_time^(0+128),w
  2016  0077  1283               	bcf	3,5	;RP0=0, select bank0
  2017  0078  1303               	bcf	3,6	;RP1=0, select bank0
  2018  0079  00AF               	movwf	updateTimeDisplayed@elapsed_time
  2019  007A  120A  118A  26AA  120A  118A  	fcall	_updateTimeDisplayed
  2020                           
  2021                           ;mainDigitalClock.c: 29: LCD_cursor(0, 1);
  2022  007F  1283               	bcf	3,5	;RP0=0, select bank0
  2023  0080  1303               	bcf	3,6	;RP1=0, select bank0
  2024  0081  01A9               	clrf	LCD_cursor@y
  2025  0082  0AA9               	incf	LCD_cursor@y,f
  2026  0083  3000               	movlw	0
  2027  0084  160A  158A  24E9  120A  118A  	fcall	_LCD_cursor
  2028                           
  2029                           ;mainDigitalClock.c: 30: LCD_putsc("alarm: ");
  2030  0089  3044               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  2031  008A  160A  158A  25EE  120A  118A  	fcall	_LCD_putsc
  2032                           
  2033                           ;mainDigitalClock.c: 31: LCD_cursor(6, 1);
  2034  008F  1283               	bcf	3,5	;RP0=0, select bank0
  2035  0090  1303               	bcf	3,6	;RP1=0, select bank0
  2036  0091  01A9               	clrf	LCD_cursor@y
  2037  0092  0AA9               	incf	LCD_cursor@y,f
  2038  0093  3006               	movlw	6
  2039  0094  160A  158A  24E9  120A  118A  	fcall	_LCD_cursor
  2040                           
  2041                           ;mainDigitalClock.c: 32: updateSetAlarm(alarmTime);
  2042  0099  1683               	bsf	3,5	;RP0=1, select bank1
  2043  009A  1303               	bcf	3,6	;RP1=0, select bank1
  2044  009B  0849               	movf	(_alarmTime+3)^(0+128),w
  2045  009C  1283               	bcf	3,5	;RP0=0, select bank0
  2046  009D  1303               	bcf	3,6	;RP1=0, select bank0
  2047  009E  00B2               	movwf	updateSetAlarm@elapsed_time+3
  2048  009F  1683               	bsf	3,5	;RP0=1, select bank1
  2049  00A0  1303               	bcf	3,6	;RP1=0, select bank1
  2050  00A1  0848               	movf	(_alarmTime+2)^(0+128),w
  2051  00A2  1283               	bcf	3,5	;RP0=0, select bank0
  2052  00A3  1303               	bcf	3,6	;RP1=0, select bank0
  2053  00A4  00B1               	movwf	updateSetAlarm@elapsed_time+2
  2054  00A5  1683               	bsf	3,5	;RP0=1, select bank1
  2055  00A6  1303               	bcf	3,6	;RP1=0, select bank1
  2056  00A7  0847               	movf	(_alarmTime+1)^(0+128),w
  2057  00A8  1283               	bcf	3,5	;RP0=0, select bank0
  2058  00A9  1303               	bcf	3,6	;RP1=0, select bank0
  2059  00AA  00B0               	movwf	updateSetAlarm@elapsed_time+1
  2060  00AB  1683               	bsf	3,5	;RP0=1, select bank1
  2061  00AC  1303               	bcf	3,6	;RP1=0, select bank1
  2062  00AD  0846               	movf	_alarmTime^(0+128),w
  2063  00AE  1283               	bcf	3,5	;RP0=0, select bank0
  2064  00AF  1303               	bcf	3,6	;RP1=0, select bank0
  2065  00B0  00AF               	movwf	updateSetAlarm@elapsed_time
  2066  00B1  160A  118A  257A  120A  118A  	fcall	_updateSetAlarm
  2067                           
  2068                           ;mainDigitalClock.c: 33: LCD_putsc("     ");
  2069  00B6  305A               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  2070  00B7  160A  158A  25EE  120A  118A  	fcall	_LCD_putsc
  2071                           
  2072                           ;mainDigitalClock.c: 34: TMR1Delay(1);
  2073  00BC  3001               	movlw	1
  2074  00BD  160A  158A  25A1  120A  118A  	fcall	_TMR1Delay
  2075                           
  2076                           ;mainDigitalClock.c: 35: time++;
  2077  00C2  3001               	movlw	1
  2078  00C3  1683               	bsf	3,5	;RP0=1, select bank1
  2079  00C4  1303               	bcf	3,6	;RP1=0, select bank1
  2080  00C5  07CA               	addwf	_time^(0+128),f
  2081  00C6  3000               	movlw	0
  2082  00C7  1803               	skipnc
  2083  00C8  3001               	movlw	1
  2084  00C9  07CB               	addwf	(_time+1)^(0+128),f
  2085  00CA  3000               	movlw	0
  2086  00CB  1803               	skipnc
  2087  00CC  3001               	movlw	1
  2088  00CD  07CC               	addwf	(_time+2)^(0+128),f
  2089  00CE  3000               	movlw	0
  2090  00CF  1803               	skipnc
  2091  00D0  3001               	movlw	1
  2092  00D1  07CD               	addwf	(_time+3)^(0+128),f
  2093                           
  2094                           ;mainDigitalClock.c: 36: if (time == 86400) {
  2095  00D2  3080               	movlw	128
  2096  00D3  064A               	xorwf	_time^(0+128),w
  2097  00D4  3051               	movlw	81
  2098  00D5  1903               	skipnz
  2099  00D6  064B               	xorwf	(_time+1)^(0+128),w
  2100  00D7  1D03               	skipz
  2101  00D8  28E5               	goto	l5740
  2102  00D9  034C               	decf	(_time+2)^(0+128),w
  2103  00DA  044D               	iorwf	(_time+3)^(0+128),w
  2104  00DB  1D03               	btfss	3,2
  2105  00DC  28E5               	goto	l5740
  2106                           
  2107                           ;mainDigitalClock.c: 38: time = 0;
  2108  00DD  3000               	movlw	0
  2109  00DE  00CD               	movwf	(_time+3)^(0+128)
  2110  00DF  3000               	movlw	0
  2111  00E0  00CC               	movwf	(_time+2)^(0+128)
  2112  00E1  3000               	movlw	0
  2113  00E2  00CB               	movwf	(_time+1)^(0+128)
  2114  00E3  3000               	movlw	0
  2115  00E4  00CA               	movwf	_time^(0+128)
  2116  00E5                     l5740:	
  2117                           
  2118                           ;mainDigitalClock.c: 39: }
  2119                           ;mainDigitalClock.c: 41: if (RD2 == 1) {
  2120  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  2121  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  2122  00E7  1908               	btfsc	8,2	;volatile
  2123  00E8  2947               	goto	l5758
  2124  00E9  2962               	goto	l5768
  2125  00EA                     l5744:	
  2126                           ;mainDigitalClock.c: 42: while (selectMode != 3) {
  2127                           
  2128                           
  2129                           ;mainDigitalClock.c: 44: selectMode = screenConfigurationMode();
  2130  00EA  120A  158A  228F  120A  118A  	fcall	_screenConfigurationMode
  2131  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  2132  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  2133  00F1  0830               	movf	?_screenConfigurationMode,w
  2134  00F2  1683               	bsf	3,5	;RP0=1, select bank1
  2135  00F3  1303               	bcf	3,6	;RP1=0, select bank1
  2136  00F4  00C3               	movwf	??_main^(0+128)
  2137  00F5  0843               	movf	??_main^(0+128),w
  2138  00F6  00D3               	movwf	_selectMode^(0+128)
  2139                           
  2140                           ;mainDigitalClock.c: 45: if (selectMode == 0) {
  2141  00F7  0853               	movf	_selectMode^(0+128),w
  2142  00F8  1D03               	btfss	3,2
  2143  00F9  2918               	goto	l5750
  2144                           
  2145                           ;mainDigitalClock.c: 46: time = setTimeDisplayer();
  2146  00FA  120A  118A  2421  120A  118A  	fcall	_setTimeDisplayer
  2147  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  2148  0100  1303               	bcf	3,6	;RP1=0, select bank0
  2149  0101  0836               	movf	?_setTimeDisplayer+3,w
  2150  0102  1683               	bsf	3,5	;RP0=1, select bank1
  2151  0103  1303               	bcf	3,6	;RP1=0, select bank1
  2152  0104  00CD               	movwf	(_time+3)^(0+128)
  2153  0105  1283               	bcf	3,5	;RP0=0, select bank0
  2154  0106  1303               	bcf	3,6	;RP1=0, select bank0
  2155  0107  0835               	movf	?_setTimeDisplayer+2,w
  2156  0108  1683               	bsf	3,5	;RP0=1, select bank1
  2157  0109  1303               	bcf	3,6	;RP1=0, select bank1
  2158  010A  00CC               	movwf	(_time+2)^(0+128)
  2159  010B  1283               	bcf	3,5	;RP0=0, select bank0
  2160  010C  1303               	bcf	3,6	;RP1=0, select bank0
  2161  010D  0834               	movf	?_setTimeDisplayer+1,w
  2162  010E  1683               	bsf	3,5	;RP0=1, select bank1
  2163  010F  1303               	bcf	3,6	;RP1=0, select bank1
  2164  0110  00CB               	movwf	(_time+1)^(0+128)
  2165  0111  1283               	bcf	3,5	;RP0=0, select bank0
  2166  0112  1303               	bcf	3,6	;RP1=0, select bank0
  2167  0113  0833               	movf	?_setTimeDisplayer,w
  2168  0114  1683               	bsf	3,5	;RP0=1, select bank1
  2169  0115  1303               	bcf	3,6	;RP1=0, select bank1
  2170  0116  00CA               	movwf	_time^(0+128)
  2171                           
  2172                           ;mainDigitalClock.c: 48: } else if (selectMode == 1) {
  2173  0117  2947               	goto	l5758
  2174  0118                     l5750:	
  2175  0118  0353               	decf	_selectMode^(0+128),w
  2176  0119  1D03               	btfss	3,2
  2177  011A  2939               	goto	l5754
  2178                           
  2179                           ;mainDigitalClock.c: 49: alarmTime = setAlarm();
  2180  011B  120A  158A  257E  120A  118A  	fcall	_setAlarm
  2181  0120  1283               	bcf	3,5	;RP0=0, select bank0
  2182  0121  1303               	bcf	3,6	;RP1=0, select bank0
  2183  0122  0836               	movf	?_setAlarm+3,w
  2184  0123  1683               	bsf	3,5	;RP0=1, select bank1
  2185  0124  1303               	bcf	3,6	;RP1=0, select bank1
  2186  0125  00C9               	movwf	(_alarmTime+3)^(0+128)
  2187  0126  1283               	bcf	3,5	;RP0=0, select bank0
  2188  0127  1303               	bcf	3,6	;RP1=0, select bank0
  2189  0128  0835               	movf	?_setAlarm+2,w
  2190  0129  1683               	bsf	3,5	;RP0=1, select bank1
  2191  012A  1303               	bcf	3,6	;RP1=0, select bank1
  2192  012B  00C8               	movwf	(_alarmTime+2)^(0+128)
  2193  012C  1283               	bcf	3,5	;RP0=0, select bank0
  2194  012D  1303               	bcf	3,6	;RP1=0, select bank0
  2195  012E  0834               	movf	?_setAlarm+1,w
  2196  012F  1683               	bsf	3,5	;RP0=1, select bank1
  2197  0130  1303               	bcf	3,6	;RP1=0, select bank1
  2198  0131  00C7               	movwf	(_alarmTime+1)^(0+128)
  2199  0132  1283               	bcf	3,5	;RP0=0, select bank0
  2200  0133  1303               	bcf	3,6	;RP1=0, select bank0
  2201  0134  0833               	movf	?_setAlarm,w
  2202  0135  1683               	bsf	3,5	;RP0=1, select bank1
  2203  0136  1303               	bcf	3,6	;RP1=0, select bank1
  2204  0137  00C6               	movwf	_alarmTime^(0+128)
  2205                           
  2206                           ;mainDigitalClock.c: 50: } else if (selectMode == 2) {
  2207  0138  2947               	goto	l5758
  2208  0139                     l5754:	
  2209  0139  3002               	movlw	2
  2210  013A  0653               	xorwf	_selectMode^(0+128),w
  2211  013B  1D03               	btfss	3,2
  2212  013C  2947               	goto	l5758
  2213                           
  2214                           ;mainDigitalClock.c: 51: temperature = setTemperatureUnit();
  2215  013D  160A  118A  270E  120A  118A  	fcall	_setTemperatureUnit
  2216  0142  1683               	bsf	3,5	;RP0=1, select bank1
  2217  0143  1303               	bcf	3,6	;RP1=0, select bank1
  2218  0144  00C3               	movwf	??_main^(0+128)
  2219  0145  0843               	movf	??_main^(0+128),w
  2220  0146  00D5               	movwf	_temperature^(0+128)
  2221  0147                     l5758:	
  2222  0147  3003               	movlw	3
  2223  0148  1683               	bsf	3,5	;RP0=1, select bank1
  2224  0149  1303               	bcf	3,6	;RP1=0, select bank1
  2225  014A  0653               	xorwf	_selectMode^(0+128),w
  2226  014B  1D03               	btfss	3,2
  2227  014C  28EA               	goto	l5744
  2228                           
  2229                           ;mainDigitalClock.c: 52: }
  2230                           ;mainDigitalClock.c: 54: }
  2231                           ;mainDigitalClock.c: 55: selectMode = 0;
  2232  014D  01D3               	clrf	_selectMode^(0+128)
  2233                           
  2234                           ;mainDigitalClock.c: 56: LCD_clear();
  2235  014E  160A  158A  2648  120A  118A  	fcall	_LCD_clear
  2236                           
  2237                           ;mainDigitalClock.c: 57: LCD_cursor(0, 0);
  2238  0153  1283               	bcf	3,5	;RP0=0, select bank0
  2239  0154  1303               	bcf	3,6	;RP1=0, select bank0
  2240  0155  01A9               	clrf	LCD_cursor@y
  2241  0156  3000               	movlw	0
  2242  0157  160A  158A  24E9  120A  118A  	fcall	_LCD_cursor
  2243                           
  2244                           ;mainDigitalClock.c: 58: LCD_putsc("time: ");
  2245  015C  3053               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2246  015D  160A  158A  25EE  120A  118A  	fcall	_LCD_putsc
  2247  0162                     l5768:	
  2248                           
  2249                           ;mainDigitalClock.c: 59: }
  2250                           ;mainDigitalClock.c: 61: if (alarmTime == time) {
  2251  0162  1683               	bsf	3,5	;RP0=1, select bank1
  2252  0163  1303               	bcf	3,6	;RP1=0, select bank1
  2253  0164  084D               	movf	(_time+3)^(0+128),w
  2254  0165  0649               	xorwf	(_alarmTime+3)^(0+128),w
  2255  0166  1D03               	skipz
  2256  0167  2972               	goto	u8325
  2257  0168  084C               	movf	(_time+2)^(0+128),w
  2258  0169  0648               	xorwf	(_alarmTime+2)^(0+128),w
  2259  016A  1D03               	skipz
  2260  016B  2972               	goto	u8325
  2261  016C  084B               	movf	(_time+1)^(0+128),w
  2262  016D  0647               	xorwf	(_alarmTime+1)^(0+128),w
  2263  016E  1D03               	skipz
  2264  016F  2972               	goto	u8325
  2265  0170  084A               	movf	_time^(0+128),w
  2266  0171  0646               	xorwf	_alarmTime^(0+128),w
  2267  0172                     u8325:	
  2268  0172  1D03               	skipz
  2269  0173  2976               	goto	l659
  2270                           
  2271                           ;mainDigitalClock.c: 62: alarmActivator = 1;
  2272  0174  01D1               	clrf	_alarmActivator^(0+128)
  2273  0175  0AD1               	incf	_alarmActivator^(0+128),f
  2274  0176                     l659:	
  2275                           
  2276                           ;mainDigitalClock.c: 64: }
  2277                           ;mainDigitalClock.c: 65: if (RD4 == 1 && alarmActivator == 1) {
  2278  0176  1283               	bcf	3,5	;RP0=0, select bank0
  2279  0177  1303               	bcf	3,6	;RP1=0, select bank0
  2280  0178  1E08               	btfss	8,4	;volatile
  2281  0179  2988               	goto	l5780
  2282  017A  1683               	bsf	3,5	;RP0=1, select bank1
  2283  017B  1303               	bcf	3,6	;RP1=0, select bank1
  2284  017C  0351               	decf	_alarmActivator^(0+128),w
  2285  017D  1D03               	btfss	3,2
  2286  017E  2988               	goto	l5780
  2287                           
  2288                           ;mainDigitalClock.c: 66: RD7 = 0;
  2289  017F  1283               	bcf	3,5	;RP0=0, select bank0
  2290  0180  1303               	bcf	3,6	;RP1=0, select bank0
  2291  0181  1388               	bcf	8,7	;volatile
  2292                           
  2293                           ;mainDigitalClock.c: 67: alarmActivator = 0;
  2294  0182  1683               	bsf	3,5	;RP0=1, select bank1
  2295  0183  1303               	bcf	3,6	;RP1=0, select bank1
  2296  0184  01D1               	clrf	_alarmActivator^(0+128)
  2297                           
  2298                           ;mainDigitalClock.c: 68: snoozeActivator = 1;
  2299  0185  01D4               	clrf	_snoozeActivator^(0+128)
  2300  0186  0AD4               	incf	_snoozeActivator^(0+128),f
  2301                           
  2302                           ;mainDigitalClock.c: 69: buzzer = 0;
  2303  0187  01D2               	clrf	_buzzer^(0+128)
  2304  0188                     l5780:	
  2305                           
  2306                           ;mainDigitalClock.c: 70: }
  2307                           ;mainDigitalClock.c: 71: if (snoozeActivator == 1) {
  2308  0188  1683               	bsf	3,5	;RP0=1, select bank1
  2309  0189  1303               	bcf	3,6	;RP1=0, select bank1
  2310  018A  0354               	decf	_snoozeActivator^(0+128),w
  2311  018B  1D03               	btfss	3,2
  2312  018C  2991               	goto	l661
  2313                           
  2314                           ;mainDigitalClock.c: 72: buzzer++;
  2315  018D  3001               	movlw	1
  2316  018E  00C3               	movwf	??_main^(0+128)
  2317  018F  0843               	movf	??_main^(0+128),w
  2318  0190  07D2               	addwf	_buzzer^(0+128),f
  2319  0191                     l661:	
  2320                           
  2321                           ;mainDigitalClock.c: 73: }
  2322                           ;mainDigitalClock.c: 74: if (buzzer == 5) {
  2323  0191  3005               	movlw	5
  2324  0192  0652               	xorwf	_buzzer^(0+128),w
  2325  0193  1D03               	btfss	3,2
  2326  0194  2998               	goto	l5788
  2327                           
  2328                           ;mainDigitalClock.c: 75: alarmActivator = 1;
  2329  0195  01D1               	clrf	_alarmActivator^(0+128)
  2330  0196  0AD1               	incf	_alarmActivator^(0+128),f
  2331                           
  2332                           ;mainDigitalClock.c: 76: snoozeActivator = 0;
  2333  0197  01D4               	clrf	_snoozeActivator^(0+128)
  2334  0198                     l5788:	
  2335  0198  3001               	movlw	1
  2336  0199  07C4               	addwf	main@i^(0+128),f
  2337  019A  1803               	skipnc
  2338  019B  0AC5               	incf	(main@i+1)^(0+128),f
  2339  019C  3000               	movlw	0
  2340  019D  07C5               	addwf	(main@i+1)^(0+128),f
  2341  019E  0845               	movf	(main@i+1)^(0+128),w
  2342  019F  3A80               	xorlw	128
  2343  01A0  00FF               	movwf	127
  2344  01A1  3080               	movlw	128
  2345  01A2  027F               	subwf	127,w
  2346  01A3  1D03               	skipz
  2347  01A4  29A7               	goto	u8375
  2348  01A5  3005               	movlw	5
  2349  01A6  0244               	subwf	main@i^(0+128),w
  2350  01A7                     u8375:	
  2351  01A7  1C03               	skipc
  2352  01A8  2859               	goto	l5724
  2353  01A9                     l5792:	
  2354                           
  2355                           ;mainDigitalClock.c: 77: }
  2356                           ;mainDigitalClock.c: 79: }
  2357                           ;mainDigitalClock.c: 81: for (i = 0; i < 5; i++) {
  2358  01A9  1683               	bsf	3,5	;RP0=1, select bank1
  2359  01AA  1303               	bcf	3,6	;RP1=0, select bank1
  2360  01AB  01C4               	clrf	main@i^(0+128)
  2361  01AC  01C5               	clrf	(main@i+1)^(0+128)
  2362  01AD  0845               	movf	(main@i+1)^(0+128),w
  2363  01AE  3A80               	xorlw	128
  2364  01AF  00FF               	movwf	127
  2365  01B0  3080               	movlw	128
  2366  01B1  027F               	subwf	127,w
  2367  01B2  1D03               	skipz
  2368  01B3  29B6               	goto	u8385
  2369  01B4  3005               	movlw	5
  2370  01B5  0244               	subwf	main@i^(0+128),w
  2371  01B6                     u8385:	
  2372  01B6  1803               	btfsc	3,0
  2373  01B7  2AEA               	goto	l5864
  2374  01B8                     l5798:	
  2375                           
  2376                           ;mainDigitalClock.c: 82: LCD_cursor(6, 0);
  2377  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  2378  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  2379  01BA  01A9               	clrf	LCD_cursor@y
  2380  01BB  3006               	movlw	6
  2381  01BC  160A  158A  24E9  120A  118A  	fcall	_LCD_cursor
  2382                           
  2383                           ;mainDigitalClock.c: 83: updateTimeDisplayed(time);
  2384  01C1  1683               	bsf	3,5	;RP0=1, select bank1
  2385  01C2  1303               	bcf	3,6	;RP1=0, select bank1
  2386  01C3  084D               	movf	(_time+3)^(0+128),w
  2387  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  2388  01C5  1303               	bcf	3,6	;RP1=0, select bank0
  2389  01C6  00B2               	movwf	updateTimeDisplayed@elapsed_time+3
  2390  01C7  1683               	bsf	3,5	;RP0=1, select bank1
  2391  01C8  1303               	bcf	3,6	;RP1=0, select bank1
  2392  01C9  084C               	movf	(_time+2)^(0+128),w
  2393  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  2394  01CB  1303               	bcf	3,6	;RP1=0, select bank0
  2395  01CC  00B1               	movwf	updateTimeDisplayed@elapsed_time+2
  2396  01CD  1683               	bsf	3,5	;RP0=1, select bank1
  2397  01CE  1303               	bcf	3,6	;RP1=0, select bank1
  2398  01CF  084B               	movf	(_time+1)^(0+128),w
  2399  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  2400  01D1  1303               	bcf	3,6	;RP1=0, select bank0
  2401  01D2  00B0               	movwf	updateTimeDisplayed@elapsed_time+1
  2402  01D3  1683               	bsf	3,5	;RP0=1, select bank1
  2403  01D4  1303               	bcf	3,6	;RP1=0, select bank1
  2404  01D5  084A               	movf	_time^(0+128),w
  2405  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  2406  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  2407  01D8  00AF               	movwf	updateTimeDisplayed@elapsed_time
  2408  01D9  120A  118A  26AA  120A  118A  	fcall	_updateTimeDisplayed
  2409                           
  2410                           ;mainDigitalClock.c: 84: LCD_cursor(0, 1);
  2411  01DE  1283               	bcf	3,5	;RP0=0, select bank0
  2412  01DF  1303               	bcf	3,6	;RP1=0, select bank0
  2413  01E0  01A9               	clrf	LCD_cursor@y
  2414  01E1  0AA9               	incf	LCD_cursor@y,f
  2415  01E2  3000               	movlw	0
  2416  01E3  160A  158A  24E9  120A  118A  	fcall	_LCD_cursor
  2417                           
  2418                           ;mainDigitalClock.c: 85: LCD_putsc("RH:   ");
  2419  01E8  304C               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  2420  01E9  160A  158A  25EE  120A  118A  	fcall	_LCD_putsc
  2421                           
  2422                           ;mainDigitalClock.c: 86: LCD_cursor(6, 1);
  2423  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  2424  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  2425  01F0  01A9               	clrf	LCD_cursor@y
  2426  01F1  0AA9               	incf	LCD_cursor@y,f
  2427  01F2  3006               	movlw	6
  2428  01F3  160A  158A  24E9  120A  118A  	fcall	_LCD_cursor
  2429                           
  2430                           ;mainDigitalClock.c: 87: humidityReader();
  2431  01F8  160A  118A  24C1  120A  118A  	fcall	_humidityReader
  2432                           
  2433                           ;mainDigitalClock.c: 88: TMR1Delay(1);
  2434  01FD  3001               	movlw	1
  2435  01FE  160A  158A  25A1  120A  118A  	fcall	_TMR1Delay
  2436                           
  2437                           ;mainDigitalClock.c: 89: time++;
  2438  0203  3001               	movlw	1
  2439  0204  1683               	bsf	3,5	;RP0=1, select bank1
  2440  0205  1303               	bcf	3,6	;RP1=0, select bank1
  2441  0206  07CA               	addwf	_time^(0+128),f
  2442  0207  3000               	movlw	0
  2443  0208  1803               	skipnc
  2444  0209  3001               	movlw	1
  2445  020A  07CB               	addwf	(_time+1)^(0+128),f
  2446  020B  3000               	movlw	0
  2447  020C  1803               	skipnc
  2448  020D  3001               	movlw	1
  2449  020E  07CC               	addwf	(_time+2)^(0+128),f
  2450  020F  3000               	movlw	0
  2451  0210  1803               	skipnc
  2452  0211  3001               	movlw	1
  2453  0212  07CD               	addwf	(_time+3)^(0+128),f
  2454                           
  2455                           ;mainDigitalClock.c: 90: if (time == 86400) {
  2456  0213  3080               	movlw	128
  2457  0214  064A               	xorwf	_time^(0+128),w
  2458  0215  3051               	movlw	81
  2459  0216  1903               	skipnz
  2460  0217  064B               	xorwf	(_time+1)^(0+128),w
  2461  0218  1D03               	skipz
  2462  0219  2A26               	goto	l5812
  2463  021A  034C               	decf	(_time+2)^(0+128),w
  2464  021B  044D               	iorwf	(_time+3)^(0+128),w
  2465  021C  1D03               	btfss	3,2
  2466  021D  2A26               	goto	l5812
  2467                           
  2468                           ;mainDigitalClock.c: 92: time = 0;
  2469  021E  3000               	movlw	0
  2470  021F  00CD               	movwf	(_time+3)^(0+128)
  2471  0220  3000               	movlw	0
  2472  0221  00CC               	movwf	(_time+2)^(0+128)
  2473  0222  3000               	movlw	0
  2474  0223  00CB               	movwf	(_time+1)^(0+128)
  2475  0224  3000               	movlw	0
  2476  0225  00CA               	movwf	_time^(0+128)
  2477  0226                     l5812:	
  2478                           
  2479                           ;mainDigitalClock.c: 93: }
  2480                           ;mainDigitalClock.c: 94: if (RD2 == 1) {
  2481  0226  1283               	bcf	3,5	;RP0=0, select bank0
  2482  0227  1303               	bcf	3,6	;RP1=0, select bank0
  2483  0228  1908               	btfsc	8,2	;volatile
  2484  0229  2A88               	goto	l5830
  2485  022A  2AA3               	goto	l5840
  2486  022B                     l5816:	
  2487                           ;mainDigitalClock.c: 95: while (selectMode != 3) {
  2488                           
  2489                           
  2490                           ;mainDigitalClock.c: 96: selectMode = screenConfigurationMode();
  2491  022B  120A  158A  228F  120A  118A  	fcall	_screenConfigurationMode
  2492  0230  1283               	bcf	3,5	;RP0=0, select bank0
  2493  0231  1303               	bcf	3,6	;RP1=0, select bank0
  2494  0232  0830               	movf	?_screenConfigurationMode,w
  2495  0233  1683               	bsf	3,5	;RP0=1, select bank1
  2496  0234  1303               	bcf	3,6	;RP1=0, select bank1
  2497  0235  00C3               	movwf	??_main^(0+128)
  2498  0236  0843               	movf	??_main^(0+128),w
  2499  0237  00D3               	movwf	_selectMode^(0+128)
  2500                           
  2501                           ;mainDigitalClock.c: 97: if (selectMode == 0) {
  2502  0238  0853               	movf	_selectMode^(0+128),w
  2503  0239  1D03               	btfss	3,2
  2504  023A  2A59               	goto	l5822
  2505                           
  2506                           ;mainDigitalClock.c: 98: time = setTimeDisplayer();
  2507  023B  120A  118A  2421  120A  118A  	fcall	_setTimeDisplayer
  2508  0240  1283               	bcf	3,5	;RP0=0, select bank0
  2509  0241  1303               	bcf	3,6	;RP1=0, select bank0
  2510  0242  0836               	movf	?_setTimeDisplayer+3,w
  2511  0243  1683               	bsf	3,5	;RP0=1, select bank1
  2512  0244  1303               	bcf	3,6	;RP1=0, select bank1
  2513  0245  00CD               	movwf	(_time+3)^(0+128)
  2514  0246  1283               	bcf	3,5	;RP0=0, select bank0
  2515  0247  1303               	bcf	3,6	;RP1=0, select bank0
  2516  0248  0835               	movf	?_setTimeDisplayer+2,w
  2517  0249  1683               	bsf	3,5	;RP0=1, select bank1
  2518  024A  1303               	bcf	3,6	;RP1=0, select bank1
  2519  024B  00CC               	movwf	(_time+2)^(0+128)
  2520  024C  1283               	bcf	3,5	;RP0=0, select bank0
  2521  024D  1303               	bcf	3,6	;RP1=0, select bank0
  2522  024E  0834               	movf	?_setTimeDisplayer+1,w
  2523  024F  1683               	bsf	3,5	;RP0=1, select bank1
  2524  0250  1303               	bcf	3,6	;RP1=0, select bank1
  2525  0251  00CB               	movwf	(_time+1)^(0+128)
  2526  0252  1283               	bcf	3,5	;RP0=0, select bank0
  2527  0253  1303               	bcf	3,6	;RP1=0, select bank0
  2528  0254  0833               	movf	?_setTimeDisplayer,w
  2529  0255  1683               	bsf	3,5	;RP0=1, select bank1
  2530  0256  1303               	bcf	3,6	;RP1=0, select bank1
  2531  0257  00CA               	movwf	_time^(0+128)
  2532                           
  2533                           ;mainDigitalClock.c: 100: } else if (selectMode == 1) {
  2534  0258  2A88               	goto	l5830
  2535  0259                     l5822:	
  2536  0259  0353               	decf	_selectMode^(0+128),w
  2537  025A  1D03               	btfss	3,2
  2538  025B  2A7A               	goto	l5826
  2539                           
  2540                           ;mainDigitalClock.c: 101: alarmTime = setAlarm();
  2541  025C  120A  158A  257E  120A  118A  	fcall	_setAlarm
  2542  0261  1283               	bcf	3,5	;RP0=0, select bank0
  2543  0262  1303               	bcf	3,6	;RP1=0, select bank0
  2544  0263  0836               	movf	?_setAlarm+3,w
  2545  0264  1683               	bsf	3,5	;RP0=1, select bank1
  2546  0265  1303               	bcf	3,6	;RP1=0, select bank1
  2547  0266  00C9               	movwf	(_alarmTime+3)^(0+128)
  2548  0267  1283               	bcf	3,5	;RP0=0, select bank0
  2549  0268  1303               	bcf	3,6	;RP1=0, select bank0
  2550  0269  0835               	movf	?_setAlarm+2,w
  2551  026A  1683               	bsf	3,5	;RP0=1, select bank1
  2552  026B  1303               	bcf	3,6	;RP1=0, select bank1
  2553  026C  00C8               	movwf	(_alarmTime+2)^(0+128)
  2554  026D  1283               	bcf	3,5	;RP0=0, select bank0
  2555  026E  1303               	bcf	3,6	;RP1=0, select bank0
  2556  026F  0834               	movf	?_setAlarm+1,w
  2557  0270  1683               	bsf	3,5	;RP0=1, select bank1
  2558  0271  1303               	bcf	3,6	;RP1=0, select bank1
  2559  0272  00C7               	movwf	(_alarmTime+1)^(0+128)
  2560  0273  1283               	bcf	3,5	;RP0=0, select bank0
  2561  0274  1303               	bcf	3,6	;RP1=0, select bank0
  2562  0275  0833               	movf	?_setAlarm,w
  2563  0276  1683               	bsf	3,5	;RP0=1, select bank1
  2564  0277  1303               	bcf	3,6	;RP1=0, select bank1
  2565  0278  00C6               	movwf	_alarmTime^(0+128)
  2566                           
  2567                           ;mainDigitalClock.c: 102: } else if (selectMode == 2) {
  2568  0279  2A88               	goto	l5830
  2569  027A                     l5826:	
  2570  027A  3002               	movlw	2
  2571  027B  0653               	xorwf	_selectMode^(0+128),w
  2572  027C  1D03               	btfss	3,2
  2573  027D  2A88               	goto	l5830
  2574                           
  2575                           ;mainDigitalClock.c: 103: temperature = setTemperatureUnit();
  2576  027E  160A  118A  270E  120A  118A  	fcall	_setTemperatureUnit
  2577  0283  1683               	bsf	3,5	;RP0=1, select bank1
  2578  0284  1303               	bcf	3,6	;RP1=0, select bank1
  2579  0285  00C3               	movwf	??_main^(0+128)
  2580  0286  0843               	movf	??_main^(0+128),w
  2581  0287  00D5               	movwf	_temperature^(0+128)
  2582  0288                     l5830:	
  2583  0288  3003               	movlw	3
  2584  0289  1683               	bsf	3,5	;RP0=1, select bank1
  2585  028A  1303               	bcf	3,6	;RP1=0, select bank1
  2586  028B  0653               	xorwf	_selectMode^(0+128),w
  2587  028C  1D03               	btfss	3,2
  2588  028D  2A2B               	goto	l5816
  2589                           
  2590                           ;mainDigitalClock.c: 104: }
  2591                           ;mainDigitalClock.c: 106: }
  2592                           ;mainDigitalClock.c: 107: selectMode = 0;
  2593  028E  01D3               	clrf	_selectMode^(0+128)
  2594                           
  2595                           ;mainDigitalClock.c: 108: LCD_clear();
  2596  028F  160A  158A  2648  120A  118A  	fcall	_LCD_clear
  2597                           
  2598                           ;mainDigitalClock.c: 109: LCD_cursor(0, 0);
  2599  0294  1283               	bcf	3,5	;RP0=0, select bank0
  2600  0295  1303               	bcf	3,6	;RP1=0, select bank0
  2601  0296  01A9               	clrf	LCD_cursor@y
  2602  0297  3000               	movlw	0
  2603  0298  160A  158A  24E9  120A  118A  	fcall	_LCD_cursor
  2604                           
  2605                           ;mainDigitalClock.c: 110: LCD_putsc("time : ");
  2606  029D  3034               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  2607  029E  160A  158A  25EE  120A  118A  	fcall	_LCD_putsc
  2608  02A3                     l5840:	
  2609                           
  2610                           ;mainDigitalClock.c: 111: }
  2611                           ;mainDigitalClock.c: 112: if (alarmTime == time) {
  2612  02A3  1683               	bsf	3,5	;RP0=1, select bank1
  2613  02A4  1303               	bcf	3,6	;RP1=0, select bank1
  2614  02A5  084D               	movf	(_time+3)^(0+128),w
  2615  02A6  0649               	xorwf	(_alarmTime+3)^(0+128),w
  2616  02A7  1D03               	skipz
  2617  02A8  2AB3               	goto	u8455
  2618  02A9  084C               	movf	(_time+2)^(0+128),w
  2619  02AA  0648               	xorwf	(_alarmTime+2)^(0+128),w
  2620  02AB  1D03               	skipz
  2621  02AC  2AB3               	goto	u8455
  2622  02AD  084B               	movf	(_time+1)^(0+128),w
  2623  02AE  0647               	xorwf	(_alarmTime+1)^(0+128),w
  2624  02AF  1D03               	skipz
  2625  02B0  2AB3               	goto	u8455
  2626  02B1  084A               	movf	_time^(0+128),w
  2627  02B2  0646               	xorwf	_alarmTime^(0+128),w
  2628  02B3                     u8455:	
  2629  02B3  1D03               	skipz
  2630  02B4  2AB7               	goto	l675
  2631                           
  2632                           ;mainDigitalClock.c: 113: alarmActivator = 1;
  2633  02B5  01D1               	clrf	_alarmActivator^(0+128)
  2634  02B6  0AD1               	incf	_alarmActivator^(0+128),f
  2635  02B7                     l675:	
  2636                           
  2637                           ;mainDigitalClock.c: 115: }
  2638                           ;mainDigitalClock.c: 116: if (RD4 == 1 && alarmActivator == 1) {
  2639  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  2640  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  2641  02B9  1E08               	btfss	8,4	;volatile
  2642  02BA  2AC9               	goto	l5852
  2643  02BB  1683               	bsf	3,5	;RP0=1, select bank1
  2644  02BC  1303               	bcf	3,6	;RP1=0, select bank1
  2645  02BD  0351               	decf	_alarmActivator^(0+128),w
  2646  02BE  1D03               	btfss	3,2
  2647  02BF  2AC9               	goto	l5852
  2648                           
  2649                           ;mainDigitalClock.c: 117: RD7 = 0;
  2650  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  2651  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  2652  02C2  1388               	bcf	8,7	;volatile
  2653                           
  2654                           ;mainDigitalClock.c: 118: alarmActivator = 0;
  2655  02C3  1683               	bsf	3,5	;RP0=1, select bank1
  2656  02C4  1303               	bcf	3,6	;RP1=0, select bank1
  2657  02C5  01D1               	clrf	_alarmActivator^(0+128)
  2658                           
  2659                           ;mainDigitalClock.c: 119: snoozeActivator = 1;
  2660  02C6  01D4               	clrf	_snoozeActivator^(0+128)
  2661  02C7  0AD4               	incf	_snoozeActivator^(0+128),f
  2662                           
  2663                           ;mainDigitalClock.c: 120: buzzer = 0;
  2664  02C8  01D2               	clrf	_buzzer^(0+128)
  2665  02C9                     l5852:	
  2666                           
  2667                           ;mainDigitalClock.c: 121: }
  2668                           ;mainDigitalClock.c: 122: if (snoozeActivator == 1) {
  2669  02C9  1683               	bsf	3,5	;RP0=1, select bank1
  2670  02CA  1303               	bcf	3,6	;RP1=0, select bank1
  2671  02CB  0354               	decf	_snoozeActivator^(0+128),w
  2672  02CC  1D03               	btfss	3,2
  2673  02CD  2AD2               	goto	l677
  2674                           
  2675                           ;mainDigitalClock.c: 123: buzzer++;
  2676  02CE  3001               	movlw	1
  2677  02CF  00C3               	movwf	??_main^(0+128)
  2678  02D0  0843               	movf	??_main^(0+128),w
  2679  02D1  07D2               	addwf	_buzzer^(0+128),f
  2680  02D2                     l677:	
  2681                           
  2682                           ;mainDigitalClock.c: 124: }
  2683                           ;mainDigitalClock.c: 125: if (buzzer == 5) {
  2684  02D2  3005               	movlw	5
  2685  02D3  0652               	xorwf	_buzzer^(0+128),w
  2686  02D4  1D03               	btfss	3,2
  2687  02D5  2AD9               	goto	l5860
  2688                           
  2689                           ;mainDigitalClock.c: 126: alarmActivator = 1;
  2690  02D6  01D1               	clrf	_alarmActivator^(0+128)
  2691  02D7  0AD1               	incf	_alarmActivator^(0+128),f
  2692                           
  2693                           ;mainDigitalClock.c: 127: snoozeActivator = 0;
  2694  02D8  01D4               	clrf	_snoozeActivator^(0+128)
  2695  02D9                     l5860:	
  2696  02D9  3001               	movlw	1
  2697  02DA  07C4               	addwf	main@i^(0+128),f
  2698  02DB  1803               	skipnc
  2699  02DC  0AC5               	incf	(main@i+1)^(0+128),f
  2700  02DD  3000               	movlw	0
  2701  02DE  07C5               	addwf	(main@i+1)^(0+128),f
  2702  02DF  0845               	movf	(main@i+1)^(0+128),w
  2703  02E0  3A80               	xorlw	128
  2704  02E1  00FF               	movwf	127
  2705  02E2  3080               	movlw	128
  2706  02E3  027F               	subwf	127,w
  2707  02E4  1D03               	skipz
  2708  02E5  2AE8               	goto	u8505
  2709  02E6  3005               	movlw	5
  2710  02E7  0244               	subwf	main@i^(0+128),w
  2711  02E8                     u8505:	
  2712  02E8  1C03               	skipc
  2713  02E9  29B8               	goto	l5798
  2714  02EA                     l5864:	
  2715                           
  2716                           ;mainDigitalClock.c: 128: }
  2717                           ;mainDigitalClock.c: 130: }
  2718                           ;mainDigitalClock.c: 131: for (i = 0; i < 5; i++) {
  2719  02EA  1683               	bsf	3,5	;RP0=1, select bank1
  2720  02EB  1303               	bcf	3,6	;RP1=0, select bank1
  2721  02EC  01C4               	clrf	main@i^(0+128)
  2722  02ED  01C5               	clrf	(main@i+1)^(0+128)
  2723  02EE                     L1:	
  2724  02EE  0845               	movf	(main@i+1)^(0+128),w
  2725  02EF  3A80               	xorlw	128
  2726  02F0  00FF               	movwf	127
  2727  02F1  3080               	movlw	128
  2728  02F2  027F               	subwf	127,w
  2729  02F3  1D03               	skipz
  2730  02F4  2AF7               	goto	u8515
  2731  02F5  3005               	movlw	5
  2732  02F6  0244               	subwf	main@i^(0+128),w
  2733  02F7                     u8515:	
  2734  02F7  1803               	btfsc	3,0
  2735  02F8  283B               	goto	l5714
  2736                           
  2737                           ;mainDigitalClock.c: 132: LCD_cursor(6, 0);
  2738  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  2739  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  2740  02FB  01A9               	clrf	LCD_cursor@y
  2741  02FC  3006               	movlw	6
  2742  02FD  160A  158A  24E9  120A  118A  	fcall	_LCD_cursor
  2743                           
  2744                           ;mainDigitalClock.c: 133: updateTimeDisplayed(time);
  2745  0302  1683               	bsf	3,5	;RP0=1, select bank1
  2746  0303  1303               	bcf	3,6	;RP1=0, select bank1
  2747  0304  084D               	movf	(_time+3)^(0+128),w
  2748  0305  1283               	bcf	3,5	;RP0=0, select bank0
  2749  0306  1303               	bcf	3,6	;RP1=0, select bank0
  2750  0307  00B2               	movwf	updateTimeDisplayed@elapsed_time+3
  2751  0308  1683               	bsf	3,5	;RP0=1, select bank1
  2752  0309  1303               	bcf	3,6	;RP1=0, select bank1
  2753  030A  084C               	movf	(_time+2)^(0+128),w
  2754  030B  1283               	bcf	3,5	;RP0=0, select bank0
  2755  030C  1303               	bcf	3,6	;RP1=0, select bank0
  2756  030D  00B1               	movwf	updateTimeDisplayed@elapsed_time+2
  2757  030E  1683               	bsf	3,5	;RP0=1, select bank1
  2758  030F  1303               	bcf	3,6	;RP1=0, select bank1
  2759  0310  084B               	movf	(_time+1)^(0+128),w
  2760  0311  1283               	bcf	3,5	;RP0=0, select bank0
  2761  0312  1303               	bcf	3,6	;RP1=0, select bank0
  2762  0313  00B0               	movwf	updateTimeDisplayed@elapsed_time+1
  2763  0314  1683               	bsf	3,5	;RP0=1, select bank1
  2764  0315  1303               	bcf	3,6	;RP1=0, select bank1
  2765  0316  084A               	movf	_time^(0+128),w
  2766  0317  1283               	bcf	3,5	;RP0=0, select bank0
  2767  0318  1303               	bcf	3,6	;RP1=0, select bank0
  2768  0319  00AF               	movwf	updateTimeDisplayed@elapsed_time
  2769  031A  120A  118A  26AA  120A  118A  	fcall	_updateTimeDisplayed
  2770                           
  2771                           ;mainDigitalClock.c: 134: LCD_cursor(0, 1);
  2772  031F  1283               	bcf	3,5	;RP0=0, select bank0
  2773  0320  1303               	bcf	3,6	;RP1=0, select bank0
  2774  0321  01A9               	clrf	LCD_cursor@y
  2775  0322  0AA9               	incf	LCD_cursor@y,f
  2776  0323  3000               	movlw	0
  2777  0324  160A  158A  24E9  120A  118A  	fcall	_LCD_cursor
  2778                           
  2779                           ;mainDigitalClock.c: 135: LCD_putsc("temp : ");
  2780  0329  303C               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  2781  032A  160A  158A  25EE  120A  118A  	fcall	_LCD_putsc
  2782                           
  2783                           ;mainDigitalClock.c: 136: LCD_cursor(5, 1);
  2784  032F  1283               	bcf	3,5	;RP0=0, select bank0
  2785  0330  1303               	bcf	3,6	;RP1=0, select bank0
  2786  0331  01A9               	clrf	LCD_cursor@y
  2787  0332  0AA9               	incf	LCD_cursor@y,f
  2788  0333  3005               	movlw	5
  2789  0334  160A  158A  24E9  120A  118A  	fcall	_LCD_cursor
  2790                           
  2791                           ;mainDigitalClock.c: 137: temperatureReader();
  2792  0339  120A  158A  207E  120A  118A  	fcall	_temperatureReader
  2793                           
  2794                           ;mainDigitalClock.c: 138: TMR1Delay(1);
  2795  033E  3001               	movlw	1
  2796  033F  160A  158A  25A1  120A  118A  	fcall	_TMR1Delay
  2797                           
  2798                           ;mainDigitalClock.c: 139: time++;
  2799  0344  3001               	movlw	1
  2800  0345  1683               	bsf	3,5	;RP0=1, select bank1
  2801  0346  1303               	bcf	3,6	;RP1=0, select bank1
  2802  0347  07CA               	addwf	_time^(0+128),f
  2803  0348  3000               	movlw	0
  2804  0349  1803               	skipnc
  2805  034A  3001               	movlw	1
  2806  034B  07CB               	addwf	(_time+1)^(0+128),f
  2807  034C  3000               	movlw	0
  2808  034D  1803               	skipnc
  2809  034E  3001               	movlw	1
  2810  034F  07CC               	addwf	(_time+2)^(0+128),f
  2811  0350  3000               	movlw	0
  2812  0351  1803               	skipnc
  2813  0352  3001               	movlw	1
  2814  0353  07CD               	addwf	(_time+3)^(0+128),f
  2815                           
  2816                           ;mainDigitalClock.c: 140: if (time == 86400) {
  2817  0354  3080               	movlw	128
  2818  0355  064A               	xorwf	_time^(0+128),w
  2819  0356  3051               	movlw	81
  2820  0357  1903               	skipnz
  2821  0358  064B               	xorwf	(_time+1)^(0+128),w
  2822  0359  1D03               	skipz
  2823  035A  2B67               	goto	l5884
  2824  035B  034C               	decf	(_time+2)^(0+128),w
  2825  035C  044D               	iorwf	(_time+3)^(0+128),w
  2826  035D  1D03               	btfss	3,2
  2827  035E  2B67               	goto	l5884
  2828                           
  2829                           ;mainDigitalClock.c: 142: time = 0;
  2830  035F  3000               	movlw	0
  2831  0360  00CD               	movwf	(_time+3)^(0+128)
  2832  0361  3000               	movlw	0
  2833  0362  00CC               	movwf	(_time+2)^(0+128)
  2834  0363  3000               	movlw	0
  2835  0364  00CB               	movwf	(_time+1)^(0+128)
  2836  0365  3000               	movlw	0
  2837  0366  00CA               	movwf	_time^(0+128)
  2838  0367                     l5884:	
  2839                           
  2840                           ;mainDigitalClock.c: 143: }
  2841                           ;mainDigitalClock.c: 144: if (RD2 == 1) {
  2842  0367  1283               	bcf	3,5	;RP0=0, select bank0
  2843  0368  1303               	bcf	3,6	;RP1=0, select bank0
  2844  0369  1908               	btfsc	8,2	;volatile
  2845  036A  2BC9               	goto	l5902
  2846  036B  2BE4               	goto	l5912
  2847  036C                     l5888:	
  2848                           ;mainDigitalClock.c: 145: while (selectMode != 3) {
  2849                           
  2850                           
  2851                           ;mainDigitalClock.c: 146: selectMode = screenConfigurationMode();
  2852  036C  120A  158A  228F  120A  118A  	fcall	_screenConfigurationMode
  2853  0371  1283               	bcf	3,5	;RP0=0, select bank0
  2854  0372  1303               	bcf	3,6	;RP1=0, select bank0
  2855  0373  0830               	movf	?_screenConfigurationMode,w
  2856  0374  1683               	bsf	3,5	;RP0=1, select bank1
  2857  0375  1303               	bcf	3,6	;RP1=0, select bank1
  2858  0376  00C3               	movwf	??_main^(0+128)
  2859  0377  0843               	movf	??_main^(0+128),w
  2860  0378  00D3               	movwf	_selectMode^(0+128)
  2861                           
  2862                           ;mainDigitalClock.c: 147: if (selectMode == 0) {
  2863  0379  0853               	movf	_selectMode^(0+128),w
  2864  037A  1D03               	btfss	3,2
  2865  037B  2B9A               	goto	l5894
  2866                           
  2867                           ;mainDigitalClock.c: 148: time = setTimeDisplayer();
  2868  037C  120A  118A  2421  120A  118A  	fcall	_setTimeDisplayer
  2869  0381  1283               	bcf	3,5	;RP0=0, select bank0
  2870  0382  1303               	bcf	3,6	;RP1=0, select bank0
  2871  0383  0836               	movf	?_setTimeDisplayer+3,w
  2872  0384  1683               	bsf	3,5	;RP0=1, select bank1
  2873  0385  1303               	bcf	3,6	;RP1=0, select bank1
  2874  0386  00CD               	movwf	(_time+3)^(0+128)
  2875  0387  1283               	bcf	3,5	;RP0=0, select bank0
  2876  0388  1303               	bcf	3,6	;RP1=0, select bank0
  2877  0389  0835               	movf	?_setTimeDisplayer+2,w
  2878  038A  1683               	bsf	3,5	;RP0=1, select bank1
  2879  038B  1303               	bcf	3,6	;RP1=0, select bank1
  2880  038C  00CC               	movwf	(_time+2)^(0+128)
  2881  038D  1283               	bcf	3,5	;RP0=0, select bank0
  2882  038E  1303               	bcf	3,6	;RP1=0, select bank0
  2883  038F  0834               	movf	?_setTimeDisplayer+1,w
  2884  0390  1683               	bsf	3,5	;RP0=1, select bank1
  2885  0391  1303               	bcf	3,6	;RP1=0, select bank1
  2886  0392  00CB               	movwf	(_time+1)^(0+128)
  2887  0393  1283               	bcf	3,5	;RP0=0, select bank0
  2888  0394  1303               	bcf	3,6	;RP1=0, select bank0
  2889  0395  0833               	movf	?_setTimeDisplayer,w
  2890  0396  1683               	bsf	3,5	;RP0=1, select bank1
  2891  0397  1303               	bcf	3,6	;RP1=0, select bank1
  2892  0398  00CA               	movwf	_time^(0+128)
  2893                           
  2894                           ;mainDigitalClock.c: 150: } else if (selectMode == 1) {
  2895  0399  2BC9               	goto	l5902
  2896  039A                     l5894:	
  2897  039A  0353               	decf	_selectMode^(0+128),w
  2898  039B  1D03               	btfss	3,2
  2899  039C  2BBB               	goto	l5898
  2900                           
  2901                           ;mainDigitalClock.c: 151: alarmTime = setAlarm();
  2902  039D  120A  158A  257E  120A  118A  	fcall	_setAlarm
  2903  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  2904  03A3  1303               	bcf	3,6	;RP1=0, select bank0
  2905  03A4  0836               	movf	?_setAlarm+3,w
  2906  03A5  1683               	bsf	3,5	;RP0=1, select bank1
  2907  03A6  1303               	bcf	3,6	;RP1=0, select bank1
  2908  03A7  00C9               	movwf	(_alarmTime+3)^(0+128)
  2909  03A8  1283               	bcf	3,5	;RP0=0, select bank0
  2910  03A9  1303               	bcf	3,6	;RP1=0, select bank0
  2911  03AA  0835               	movf	?_setAlarm+2,w
  2912  03AB  1683               	bsf	3,5	;RP0=1, select bank1
  2913  03AC  1303               	bcf	3,6	;RP1=0, select bank1
  2914  03AD  00C8               	movwf	(_alarmTime+2)^(0+128)
  2915  03AE  1283               	bcf	3,5	;RP0=0, select bank0
  2916  03AF  1303               	bcf	3,6	;RP1=0, select bank0
  2917  03B0  0834               	movf	?_setAlarm+1,w
  2918  03B1  1683               	bsf	3,5	;RP0=1, select bank1
  2919  03B2  1303               	bcf	3,6	;RP1=0, select bank1
  2920  03B3  00C7               	movwf	(_alarmTime+1)^(0+128)
  2921  03B4  1283               	bcf	3,5	;RP0=0, select bank0
  2922  03B5  1303               	bcf	3,6	;RP1=0, select bank0
  2923  03B6  0833               	movf	?_setAlarm,w
  2924  03B7  1683               	bsf	3,5	;RP0=1, select bank1
  2925  03B8  1303               	bcf	3,6	;RP1=0, select bank1
  2926  03B9  00C6               	movwf	_alarmTime^(0+128)
  2927                           
  2928                           ;mainDigitalClock.c: 152: } else if (selectMode == 2) {
  2929  03BA  2BC9               	goto	l5902
  2930  03BB                     l5898:	
  2931  03BB  3002               	movlw	2
  2932  03BC  0653               	xorwf	_selectMode^(0+128),w
  2933  03BD  1D03               	btfss	3,2
  2934  03BE  2BC9               	goto	l5902
  2935                           
  2936                           ;mainDigitalClock.c: 153: temperature = setTemperatureUnit();
  2937  03BF  160A  118A  270E  120A  118A  	fcall	_setTemperatureUnit
  2938  03C4  1683               	bsf	3,5	;RP0=1, select bank1
  2939  03C5  1303               	bcf	3,6	;RP1=0, select bank1
  2940  03C6  00C3               	movwf	??_main^(0+128)
  2941  03C7  0843               	movf	??_main^(0+128),w
  2942  03C8  00D5               	movwf	_temperature^(0+128)
  2943  03C9                     l5902:	
  2944  03C9  3003               	movlw	3
  2945  03CA  1683               	bsf	3,5	;RP0=1, select bank1
  2946  03CB  1303               	bcf	3,6	;RP1=0, select bank1
  2947  03CC  0653               	xorwf	_selectMode^(0+128),w
  2948  03CD  1D03               	btfss	3,2
  2949  03CE  2B6C               	goto	l5888
  2950                           
  2951                           ;mainDigitalClock.c: 154: }
  2952                           ;mainDigitalClock.c: 156: }
  2953                           ;mainDigitalClock.c: 157: selectMode = 0;
  2954  03CF  01D3               	clrf	_selectMode^(0+128)
  2955                           
  2956                           ;mainDigitalClock.c: 158: LCD_clear();
  2957  03D0  160A  158A  2648  120A  118A  	fcall	_LCD_clear
  2958                           
  2959                           ;mainDigitalClock.c: 159: LCD_cursor(0, 0);
  2960  03D5  1283               	bcf	3,5	;RP0=0, select bank0
  2961  03D6  1303               	bcf	3,6	;RP1=0, select bank0
  2962  03D7  01A9               	clrf	LCD_cursor@y
  2963  03D8  3000               	movlw	0
  2964  03D9  160A  158A  24E9  120A  118A  	fcall	_LCD_cursor
  2965                           
  2966                           ;mainDigitalClock.c: 160: LCD_putsc("time : ");
  2967  03DE  3034               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  2968  03DF  160A  158A  25EE  120A  118A  	fcall	_LCD_putsc
  2969  03E4                     l5912:	
  2970                           
  2971                           ;mainDigitalClock.c: 161: }
  2972                           ;mainDigitalClock.c: 162: if (alarmTime == time) {
  2973  03E4  1683               	bsf	3,5	;RP0=1, select bank1
  2974  03E5  1303               	bcf	3,6	;RP1=0, select bank1
  2975  03E6  084D               	movf	(_time+3)^(0+128),w
  2976  03E7  0649               	xorwf	(_alarmTime+3)^(0+128),w
  2977  03E8  1D03               	skipz
  2978  03E9  2BF4               	goto	u8585
  2979  03EA  084C               	movf	(_time+2)^(0+128),w
  2980  03EB  0648               	xorwf	(_alarmTime+2)^(0+128),w
  2981  03EC  1D03               	skipz
  2982  03ED  2BF4               	goto	u8585
  2983  03EE  084B               	movf	(_time+1)^(0+128),w
  2984  03EF  0647               	xorwf	(_alarmTime+1)^(0+128),w
  2985  03F0  1D03               	skipz
  2986  03F1  2BF4               	goto	u8585
  2987  03F2  084A               	movf	_time^(0+128),w
  2988  03F3  0646               	xorwf	_alarmTime^(0+128),w
  2989  03F4                     u8585:	
  2990  03F4  1D03               	skipz
  2991  03F5  2BF8               	goto	l691
  2992                           
  2993                           ;mainDigitalClock.c: 163: alarmActivator = 1;
  2994  03F6  01D1               	clrf	_alarmActivator^(0+128)
  2995  03F7  0AD1               	incf	_alarmActivator^(0+128),f
  2996  03F8                     l691:	
  2997                           
  2998                           ;mainDigitalClock.c: 165: }
  2999                           ;mainDigitalClock.c: 167: if (RD4 == 1 && alarmActivator == 1) {
  3000  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  3001  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  3002  03FA  1E08               	btfss	8,4	;volatile
  3003  03FB  2C0A               	goto	l5924
  3004  03FC  1683               	bsf	3,5	;RP0=1, select bank1
  3005  03FD  1303               	bcf	3,6	;RP1=0, select bank1
  3006  03FE  0351               	decf	_alarmActivator^(0+128),w
  3007  03FF  1D03               	btfss	3,2
  3008  0400  2C0A               	goto	l5924
  3009                           
  3010                           ;mainDigitalClock.c: 168: RD7 = 0;
  3011  0401  1283               	bcf	3,5	;RP0=0, select bank0
  3012  0402  1303               	bcf	3,6	;RP1=0, select bank0
  3013  0403  1388               	bcf	8,7	;volatile
  3014                           
  3015                           ;mainDigitalClock.c: 169: alarmActivator = 0;
  3016  0404  1683               	bsf	3,5	;RP0=1, select bank1
  3017  0405  1303               	bcf	3,6	;RP1=0, select bank1
  3018  0406  01D1               	clrf	_alarmActivator^(0+128)
  3019                           
  3020                           ;mainDigitalClock.c: 170: snoozeActivator = 1;
  3021  0407  01D4               	clrf	_snoozeActivator^(0+128)
  3022  0408  0AD4               	incf	_snoozeActivator^(0+128),f
  3023                           
  3024                           ;mainDigitalClock.c: 171: buzzer = 0;
  3025  0409  01D2               	clrf	_buzzer^(0+128)
  3026  040A                     l5924:	
  3027                           
  3028                           ;mainDigitalClock.c: 172: }
  3029                           ;mainDigitalClock.c: 173: if (snoozeActivator == 1) {
  3030  040A  1683               	bsf	3,5	;RP0=1, select bank1
  3031  040B  1303               	bcf	3,6	;RP1=0, select bank1
  3032  040C  0354               	decf	_snoozeActivator^(0+128),w
  3033  040D  1D03               	btfss	3,2
  3034  040E  2C13               	goto	l693
  3035                           
  3036                           ;mainDigitalClock.c: 174: buzzer++;
  3037  040F  3001               	movlw	1
  3038  0410  00C3               	movwf	??_main^(0+128)
  3039  0411  0843               	movf	??_main^(0+128),w
  3040  0412  07D2               	addwf	_buzzer^(0+128),f
  3041  0413                     l693:	
  3042                           
  3043                           ;mainDigitalClock.c: 175: }
  3044                           ;mainDigitalClock.c: 176: if (buzzer == 5) {
  3045  0413  3005               	movlw	5
  3046  0414  0652               	xorwf	_buzzer^(0+128),w
  3047  0415  1D03               	btfss	3,2
  3048  0416  2C1A               	goto	l5932
  3049                           
  3050                           ;mainDigitalClock.c: 178: alarmActivator = 1;
  3051  0417  01D1               	clrf	_alarmActivator^(0+128)
  3052  0418  0AD1               	incf	_alarmActivator^(0+128),f
  3053                           
  3054                           ;mainDigitalClock.c: 179: snoozeActivator = 0;
  3055  0419  01D4               	clrf	_snoozeActivator^(0+128)
  3056  041A                     l5932:	
  3057  041A  3001               	movlw	1
  3058  041B  07C4               	addwf	main@i^(0+128),f
  3059  041C  1803               	skipnc
  3060  041D  0AC5               	incf	(main@i+1)^(0+128),f
  3061  041E  3000               	movlw	0
  3062  041F  07C5               	addwf	(main@i+1)^(0+128),f
  3063  0420  2AEE               	goto	L1
  3064  0421                     __end_of_main:	
  3065                           
  3066                           	psect	text1
  3067  06AA                     __ptext1:	
  3068 ;; *************** function _updateTimeDisplayed *****************
  3069 ;; Defined at:
  3070 ;;		line 12 in file "timeUpdate.c"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;  elapsed_time    4   15[BANK0 ] long 
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;  remainder       2   33[BANK0 ] unsigned int 
  3075 ;;  minutes         2   31[BANK0 ] unsigned int 
  3076 ;;  hours           2   29[BANK0 ] unsigned int 
  3077 ;;  seconds         2   27[BANK0 ] unsigned int 
  3078 ;;  frontHourDig    1   26[BANK0 ] unsigned char 
  3079 ;;  backHourDigi    1   25[BANK0 ] unsigned char 
  3080 ;;  frontMinuteD    1   24[BANK0 ] unsigned char 
  3081 ;;  backMinuteDi    1   23[BANK0 ] unsigned char 
  3082 ;;  frontSecondD    1   22[BANK0 ] unsigned char 
  3083 ;;  backSecondDi    1   21[BANK0 ] unsigned char 
  3084 ;; Return value:  Size  Location     Type
  3085 ;;                  1    wreg      void 
  3086 ;; Registers used:
  3087 ;;		wreg, status,2, status,0, pclath, cstack
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 0/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3093 ;;      Params:         0       4       0       0       0
  3094 ;;      Locals:         0      14       0       0       0
  3095 ;;      Temps:          0       2       0       0       0
  3096 ;;      Totals:         0      20       0       0       0
  3097 ;;Total ram usage:       20 bytes
  3098 ;; Hardware stack levels used:    1
  3099 ;; Hardware stack levels required when called:    3
  3100 ;; This function calls:
  3101 ;;		_LCD_putch
  3102 ;;		___aldiv
  3103 ;;		___lwdiv
  3104 ;;		___lwmod
  3105 ;;		___wmul
  3106 ;; This function is called by:
  3107 ;;		_main
  3108 ;; This function uses a non-reentrant model
  3109 ;;
  3110                           
  3111                           
  3112                           ;psect for function _updateTimeDisplayed
  3113  06AA                     _updateTimeDisplayed:	
  3114                           
  3115                           ;timeUpdate.c: 14: unsigned char backSecondDigit;
  3116                           ;timeUpdate.c: 15: unsigned char frontSecondDigit;
  3117                           ;timeUpdate.c: 16: unsigned char backMinuteDigit;
  3118                           ;timeUpdate.c: 17: unsigned char frontMinuteDigit;
  3119                           ;timeUpdate.c: 18: unsigned char backHourDigit;
  3120                           ;timeUpdate.c: 19: unsigned char frontHourDigit;
  3121                           ;timeUpdate.c: 22: unsigned int hours = elapsed_time / 3600;
  3122                           
  3123                           ;incstack = 0
  3124                           ; Regs used in _updateTimeDisplayed: [wreg+status,2+status,0+pclath+cstack]
  3125  06AA  3000               	movlw	0
  3126  06AB  1283               	bcf	3,5	;RP0=0, select bank0
  3127  06AC  1303               	bcf	3,6	;RP1=0, select bank0
  3128  06AD  00A3               	movwf	___aldiv@divisor+3
  3129  06AE  3000               	movlw	0
  3130  06AF  00A2               	movwf	___aldiv@divisor+2
  3131  06B0  300E               	movlw	14
  3132  06B1  00A1               	movwf	___aldiv@divisor+1
  3133  06B2  3010               	movlw	16
  3134  06B3  00A0               	movwf	___aldiv@divisor
  3135  06B4  0832               	movf	updateTimeDisplayed@elapsed_time+3,w
  3136  06B5  00A7               	movwf	___aldiv@dividend+3
  3137  06B6  0831               	movf	updateTimeDisplayed@elapsed_time+2,w
  3138  06B7  00A6               	movwf	___aldiv@dividend+2
  3139  06B8  0830               	movf	updateTimeDisplayed@elapsed_time+1,w
  3140  06B9  00A5               	movwf	___aldiv@dividend+1
  3141  06BA  082F               	movf	updateTimeDisplayed@elapsed_time,w
  3142  06BB  00A4               	movwf	___aldiv@dividend
  3143  06BC  160A  118A  21A7  120A  118A  	fcall	___aldiv
  3144  06C1  1283               	bcf	3,5	;RP0=0, select bank0
  3145  06C2  1303               	bcf	3,6	;RP1=0, select bank0
  3146  06C3  0821               	movf	?___aldiv+1,w
  3147  06C4  00BE               	movwf	updateTimeDisplayed@hours+1
  3148  06C5  0820               	movf	?___aldiv,w
  3149  06C6  00BD               	movwf	updateTimeDisplayed@hours
  3150                           
  3151                           ;timeUpdate.c: 23: unsigned int remainder = elapsed_time - hours * 3600;
  3152  06C7  083E               	movf	updateTimeDisplayed@hours+1,w
  3153  06C8  00A1               	movwf	___wmul@multiplier+1
  3154  06C9  083D               	movf	updateTimeDisplayed@hours,w
  3155  06CA  00A0               	movwf	___wmul@multiplier
  3156  06CB  3010               	movlw	16
  3157  06CC  00A2               	movwf	___wmul@multiplicand
  3158  06CD  300E               	movlw	14
  3159  06CE  00A3               	movwf	___wmul@multiplicand+1
  3160  06CF  160A  158A  257E  120A  118A  	fcall	___wmul
  3161  06D4  1283               	bcf	3,5	;RP0=0, select bank0
  3162  06D5  1303               	bcf	3,6	;RP1=0, select bank0
  3163  06D6  0920               	comf	?___wmul,w
  3164  06D7  00B3               	movwf	??_updateTimeDisplayed
  3165  06D8  0921               	comf	?___wmul+1,w
  3166  06D9  00B4               	movwf	??_updateTimeDisplayed+1
  3167  06DA  0AB3               	incf	??_updateTimeDisplayed,f
  3168  06DB  1903               	skipnz
  3169  06DC  0AB4               	incf	??_updateTimeDisplayed+1,f
  3170  06DD  082F               	movf	updateTimeDisplayed@elapsed_time,w
  3171  06DE  0733               	addwf	??_updateTimeDisplayed,w
  3172  06DF  00C1               	movwf	updateTimeDisplayed@remainder
  3173  06E0  0830               	movf	updateTimeDisplayed@elapsed_time+1,w
  3174  06E1  1803               	skipnc
  3175  06E2  0A30               	incf	updateTimeDisplayed@elapsed_time+1,w
  3176  06E3  0734               	addwf	??_updateTimeDisplayed+1,w
  3177  06E4  00C2               	movwf	updateTimeDisplayed@remainder+1
  3178                           
  3179                           ;timeUpdate.c: 24: unsigned int minutes = remainder / 60;
  3180  06E5  303C               	movlw	60
  3181  06E6  00A0               	movwf	___lwdiv@divisor
  3182  06E7  3000               	movlw	0
  3183  06E8  00A1               	movwf	___lwdiv@divisor+1
  3184  06E9  0842               	movf	updateTimeDisplayed@remainder+1,w
  3185  06EA  00A3               	movwf	___lwdiv@dividend+1
  3186  06EB  0841               	movf	updateTimeDisplayed@remainder,w
  3187  06EC  00A2               	movwf	___lwdiv@dividend
  3188  06ED  160A  158A  2682  120A  118A  	fcall	___lwdiv
  3189  06F2  1283               	bcf	3,5	;RP0=0, select bank0
  3190  06F3  1303               	bcf	3,6	;RP1=0, select bank0
  3191  06F4  0821               	movf	?___lwdiv+1,w
  3192  06F5  00C0               	movwf	updateTimeDisplayed@minutes+1
  3193  06F6  0820               	movf	?___lwdiv,w
  3194  06F7  00BF               	movwf	updateTimeDisplayed@minutes
  3195                           
  3196                           ;timeUpdate.c: 25: remainder = remainder - minutes * 60;
  3197  06F8  0840               	movf	updateTimeDisplayed@minutes+1,w
  3198  06F9  00A1               	movwf	___wmul@multiplier+1
  3199  06FA  083F               	movf	updateTimeDisplayed@minutes,w
  3200  06FB  00A0               	movwf	___wmul@multiplier
  3201  06FC  303C               	movlw	60
  3202  06FD  00A2               	movwf	___wmul@multiplicand
  3203  06FE  3000               	movlw	0
  3204  06FF  00A3               	movwf	___wmul@multiplicand+1
  3205  0700  160A  158A  257E  120A  118A  	fcall	___wmul
  3206  0705  1283               	bcf	3,5	;RP0=0, select bank0
  3207  0706  1303               	bcf	3,6	;RP1=0, select bank0
  3208  0707  0920               	comf	?___wmul,w
  3209  0708  00B3               	movwf	??_updateTimeDisplayed
  3210  0709  0921               	comf	?___wmul+1,w
  3211  070A  00B4               	movwf	??_updateTimeDisplayed+1
  3212  070B  0AB3               	incf	??_updateTimeDisplayed,f
  3213  070C  1903               	skipnz
  3214  070D  0AB4               	incf	??_updateTimeDisplayed+1,f
  3215  070E  0841               	movf	updateTimeDisplayed@remainder,w
  3216  070F  0733               	addwf	??_updateTimeDisplayed,w
  3217  0710  00C1               	movwf	updateTimeDisplayed@remainder
  3218  0711  0842               	movf	updateTimeDisplayed@remainder+1,w
  3219  0712  1803               	skipnc
  3220  0713  0A42               	incf	updateTimeDisplayed@remainder+1,w
  3221  0714  0734               	addwf	??_updateTimeDisplayed+1,w
  3222  0715  00C2               	movwf	updateTimeDisplayed@remainder+1
  3223                           
  3224                           ;timeUpdate.c: 26: unsigned int seconds = remainder;
  3225  0716  0842               	movf	updateTimeDisplayed@remainder+1,w
  3226  0717  00BC               	movwf	updateTimeDisplayed@seconds+1
  3227  0718  0841               	movf	updateTimeDisplayed@remainder,w
  3228  0719  00BB               	movwf	updateTimeDisplayed@seconds
  3229                           
  3230                           ;timeUpdate.c: 29: frontHourDigit = hours / 10;
  3231  071A  300A               	movlw	10
  3232  071B  00A0               	movwf	___lwdiv@divisor
  3233  071C  3000               	movlw	0
  3234  071D  00A1               	movwf	___lwdiv@divisor+1
  3235  071E  083E               	movf	updateTimeDisplayed@hours+1,w
  3236  071F  00A3               	movwf	___lwdiv@dividend+1
  3237  0720  083D               	movf	updateTimeDisplayed@hours,w
  3238  0721  00A2               	movwf	___lwdiv@dividend
  3239  0722  160A  158A  2682  120A  118A  	fcall	___lwdiv
  3240  0727  1283               	bcf	3,5	;RP0=0, select bank0
  3241  0728  1303               	bcf	3,6	;RP1=0, select bank0
  3242  0729  0820               	movf	?___lwdiv,w
  3243  072A  00B3               	movwf	??_updateTimeDisplayed
  3244  072B  0833               	movf	??_updateTimeDisplayed,w
  3245  072C  00BA               	movwf	updateTimeDisplayed@frontHourDigit
  3246                           
  3247                           ;timeUpdate.c: 30: backHourDigit = hours % 10;
  3248  072D  300A               	movlw	10
  3249  072E  00A0               	movwf	___lwmod@divisor
  3250  072F  3000               	movlw	0
  3251  0730  00A1               	movwf	___lwmod@divisor+1
  3252  0731  083E               	movf	updateTimeDisplayed@hours+1,w
  3253  0732  00A3               	movwf	___lwmod@dividend+1
  3254  0733  083D               	movf	updateTimeDisplayed@hours,w
  3255  0734  00A2               	movwf	___lwmod@dividend
  3256  0735  120A  118A  27CB  120A  118A  	fcall	___lwmod
  3257  073A  1283               	bcf	3,5	;RP0=0, select bank0
  3258  073B  1303               	bcf	3,6	;RP1=0, select bank0
  3259  073C  0820               	movf	?___lwmod,w
  3260  073D  00B3               	movwf	??_updateTimeDisplayed
  3261  073E  0833               	movf	??_updateTimeDisplayed,w
  3262  073F  00B9               	movwf	updateTimeDisplayed@backHourDigit
  3263                           
  3264                           ;timeUpdate.c: 31: frontMinuteDigit = minutes / 10;
  3265  0740  300A               	movlw	10
  3266  0741  00A0               	movwf	___lwdiv@divisor
  3267  0742  3000               	movlw	0
  3268  0743  00A1               	movwf	___lwdiv@divisor+1
  3269  0744  0840               	movf	updateTimeDisplayed@minutes+1,w
  3270  0745  00A3               	movwf	___lwdiv@dividend+1
  3271  0746  083F               	movf	updateTimeDisplayed@minutes,w
  3272  0747  00A2               	movwf	___lwdiv@dividend
  3273  0748  160A  158A  2682  120A  118A  	fcall	___lwdiv
  3274  074D  1283               	bcf	3,5	;RP0=0, select bank0
  3275  074E  1303               	bcf	3,6	;RP1=0, select bank0
  3276  074F  0820               	movf	?___lwdiv,w
  3277  0750  00B3               	movwf	??_updateTimeDisplayed
  3278  0751  0833               	movf	??_updateTimeDisplayed,w
  3279  0752  00B8               	movwf	updateTimeDisplayed@frontMinuteDigit
  3280                           
  3281                           ;timeUpdate.c: 32: backMinuteDigit = minutes % 10;
  3282  0753  300A               	movlw	10
  3283  0754  00A0               	movwf	___lwmod@divisor
  3284  0755  3000               	movlw	0
  3285  0756  00A1               	movwf	___lwmod@divisor+1
  3286  0757  0840               	movf	updateTimeDisplayed@minutes+1,w
  3287  0758  00A3               	movwf	___lwmod@dividend+1
  3288  0759  083F               	movf	updateTimeDisplayed@minutes,w
  3289  075A  00A2               	movwf	___lwmod@dividend
  3290  075B  120A  118A  27CB  120A  118A  	fcall	___lwmod
  3291  0760  1283               	bcf	3,5	;RP0=0, select bank0
  3292  0761  1303               	bcf	3,6	;RP1=0, select bank0
  3293  0762  0820               	movf	?___lwmod,w
  3294  0763  00B3               	movwf	??_updateTimeDisplayed
  3295  0764  0833               	movf	??_updateTimeDisplayed,w
  3296  0765  00B7               	movwf	updateTimeDisplayed@backMinuteDigit
  3297                           
  3298                           ;timeUpdate.c: 33: frontSecondDigit = seconds / 10;
  3299  0766  300A               	movlw	10
  3300  0767  00A0               	movwf	___lwdiv@divisor
  3301  0768  3000               	movlw	0
  3302  0769  00A1               	movwf	___lwdiv@divisor+1
  3303  076A  083C               	movf	updateTimeDisplayed@seconds+1,w
  3304  076B  00A3               	movwf	___lwdiv@dividend+1
  3305  076C  083B               	movf	updateTimeDisplayed@seconds,w
  3306  076D  00A2               	movwf	___lwdiv@dividend
  3307  076E  160A  158A  2682  120A  118A  	fcall	___lwdiv
  3308  0773  1283               	bcf	3,5	;RP0=0, select bank0
  3309  0774  1303               	bcf	3,6	;RP1=0, select bank0
  3310  0775  0820               	movf	?___lwdiv,w
  3311  0776  00B3               	movwf	??_updateTimeDisplayed
  3312  0777  0833               	movf	??_updateTimeDisplayed,w
  3313  0778  00B6               	movwf	updateTimeDisplayed@frontSecondDigit
  3314                           
  3315                           ;timeUpdate.c: 34: backSecondDigit = seconds % 10;
  3316  0779  300A               	movlw	10
  3317  077A  00A0               	movwf	___lwmod@divisor
  3318  077B  3000               	movlw	0
  3319  077C  00A1               	movwf	___lwmod@divisor+1
  3320  077D  083C               	movf	updateTimeDisplayed@seconds+1,w
  3321  077E  00A3               	movwf	___lwmod@dividend+1
  3322  077F  083B               	movf	updateTimeDisplayed@seconds,w
  3323  0780  00A2               	movwf	___lwmod@dividend
  3324  0781  120A  118A  27CB  120A  118A  	fcall	___lwmod
  3325  0786  1283               	bcf	3,5	;RP0=0, select bank0
  3326  0787  1303               	bcf	3,6	;RP1=0, select bank0
  3327  0788  0820               	movf	?___lwmod,w
  3328  0789  00B3               	movwf	??_updateTimeDisplayed
  3329  078A  0833               	movf	??_updateTimeDisplayed,w
  3330  078B  00B5               	movwf	updateTimeDisplayed@backSecondDigit
  3331                           
  3332                           ;timeUpdate.c: 36: LCD_putch('0' + frontHourDigit);
  3333  078C  083A               	movf	updateTimeDisplayed@frontHourDigit,w
  3334  078D  3E30               	addlw	48
  3335  078E  160A  158A  2540  120A  118A  	fcall	_LCD_putch
  3336                           
  3337                           ;timeUpdate.c: 37: LCD_putch('0' + backHourDigit);
  3338  0793  1283               	bcf	3,5	;RP0=0, select bank0
  3339  0794  1303               	bcf	3,6	;RP1=0, select bank0
  3340  0795  0839               	movf	updateTimeDisplayed@backHourDigit,w
  3341  0796  3E30               	addlw	48
  3342  0797  160A  158A  2540  120A  118A  	fcall	_LCD_putch
  3343                           
  3344                           ;timeUpdate.c: 38: LCD_putch(':');
  3345  079C  303A               	movlw	58
  3346  079D  160A  158A  2540  120A  118A  	fcall	_LCD_putch
  3347                           
  3348                           ;timeUpdate.c: 39: LCD_putch('0' + frontMinuteDigit);
  3349  07A2  1283               	bcf	3,5	;RP0=0, select bank0
  3350  07A3  1303               	bcf	3,6	;RP1=0, select bank0
  3351  07A4  0838               	movf	updateTimeDisplayed@frontMinuteDigit,w
  3352  07A5  3E30               	addlw	48
  3353  07A6  160A  158A  2540  120A  118A  	fcall	_LCD_putch
  3354                           
  3355                           ;timeUpdate.c: 40: LCD_putch('0' + backMinuteDigit);
  3356  07AB  1283               	bcf	3,5	;RP0=0, select bank0
  3357  07AC  1303               	bcf	3,6	;RP1=0, select bank0
  3358  07AD  0837               	movf	updateTimeDisplayed@backMinuteDigit,w
  3359  07AE  3E30               	addlw	48
  3360  07AF  160A  158A  2540  120A  118A  	fcall	_LCD_putch
  3361                           
  3362                           ;timeUpdate.c: 41: LCD_putch(':');
  3363  07B4  303A               	movlw	58
  3364  07B5  160A  158A  2540  120A  118A  	fcall	_LCD_putch
  3365                           
  3366                           ;timeUpdate.c: 42: LCD_putch('0' + frontSecondDigit);
  3367  07BA  1283               	bcf	3,5	;RP0=0, select bank0
  3368  07BB  1303               	bcf	3,6	;RP1=0, select bank0
  3369  07BC  0836               	movf	updateTimeDisplayed@frontSecondDigit,w
  3370  07BD  3E30               	addlw	48
  3371  07BE  160A  158A  2540  120A  118A  	fcall	_LCD_putch
  3372                           
  3373                           ;timeUpdate.c: 43: LCD_putch('0' + backSecondDigit);
  3374  07C3  1283               	bcf	3,5	;RP0=0, select bank0
  3375  07C4  1303               	bcf	3,6	;RP1=0, select bank0
  3376  07C5  0835               	movf	updateTimeDisplayed@backSecondDigit,w
  3377  07C6  3E30               	addlw	48
  3378  07C7  160A  158A  2540   	fcall	_LCD_putch
  3379  07CA  0008               	return
  3380  07CB                     __end_of_updateTimeDisplayed:	
  3381                           
  3382                           	psect	text2
  3383  157A                     __ptext2:	
  3384 ;; *************** function _updateSetAlarm *****************
  3385 ;; Defined at:
  3386 ;;		line 17 in file "alarmUpdate.c"
  3387 ;; Parameters:    Size  Location     Type
  3388 ;;  elapsed_time    4   15[BANK0 ] long 
  3389 ;; Auto vars:     Size  Location     Type
  3390 ;;  hours           2   29[BANK0 ] unsigned int 
  3391 ;;  minutes         2   27[BANK0 ] unsigned int 
  3392 ;;  remainder       2   21[BANK0 ] unsigned int 
  3393 ;;  minVariable1    1   26[BANK0 ] unsigned char 
  3394 ;;  minVariable2    1   25[BANK0 ] unsigned char 
  3395 ;;  hoursVariabl    1   24[BANK0 ] unsigned char 
  3396 ;;  hoursVariabl    1   23[BANK0 ] unsigned char 
  3397 ;; Return value:  Size  Location     Type
  3398 ;;                  1    wreg      void 
  3399 ;; Registers used:
  3400 ;;		wreg, status,2, status,0, pclath, cstack
  3401 ;; Tracked objects:
  3402 ;;		On entry : 0/0
  3403 ;;		On exit  : 0/0
  3404 ;;		Unchanged: 0/0
  3405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3406 ;;      Params:         0       4       0       0       0
  3407 ;;      Locals:         0      10       0       0       0
  3408 ;;      Temps:          0       2       0       0       0
  3409 ;;      Totals:         0      16       0       0       0
  3410 ;;Total ram usage:       16 bytes
  3411 ;; Hardware stack levels used:    1
  3412 ;; Hardware stack levels required when called:    3
  3413 ;; This function calls:
  3414 ;;		_LCD_putch
  3415 ;;		___aldiv
  3416 ;;		___lwdiv
  3417 ;;		___lwmod
  3418 ;;		___wmul
  3419 ;; This function is called by:
  3420 ;;		_main
  3421 ;; This function uses a non-reentrant model
  3422 ;;
  3423                           
  3424                           
  3425                           ;psect for function _updateSetAlarm
  3426  157A                     _updateSetAlarm:	
  3427                           
  3428                           ;alarmUpdate.c: 19: unsigned char hoursVariable4;
  3429                           ;alarmUpdate.c: 20: unsigned char hoursVariable3;
  3430                           ;alarmUpdate.c: 21: unsigned char minVariable2;
  3431                           ;alarmUpdate.c: 22: unsigned char minVariable1;
  3432                           ;alarmUpdate.c: 24: unsigned int hours = elapsed_time / 3600;
  3433                           
  3434                           ;incstack = 0
  3435                           ; Regs used in _updateSetAlarm: [wreg+status,2+status,0+pclath+cstack]
  3436  157A  3000               	movlw	0
  3437  157B  1283               	bcf	3,5	;RP0=0, select bank0
  3438  157C  1303               	bcf	3,6	;RP1=0, select bank0
  3439  157D  00A3               	movwf	___aldiv@divisor+3
  3440  157E  3000               	movlw	0
  3441  157F  00A2               	movwf	___aldiv@divisor+2
  3442  1580  300E               	movlw	14
  3443  1581  00A1               	movwf	___aldiv@divisor+1
  3444  1582  3010               	movlw	16
  3445  1583  00A0               	movwf	___aldiv@divisor
  3446  1584  0832               	movf	updateSetAlarm@elapsed_time+3,w
  3447  1585  00A7               	movwf	___aldiv@dividend+3
  3448  1586  0831               	movf	updateSetAlarm@elapsed_time+2,w
  3449  1587  00A6               	movwf	___aldiv@dividend+2
  3450  1588  0830               	movf	updateSetAlarm@elapsed_time+1,w
  3451  1589  00A5               	movwf	___aldiv@dividend+1
  3452  158A  082F               	movf	updateSetAlarm@elapsed_time,w
  3453  158B  00A4               	movwf	___aldiv@dividend
  3454  158C  160A  118A  21A7  160A  118A  	fcall	___aldiv
  3455  1591  1283               	bcf	3,5	;RP0=0, select bank0
  3456  1592  1303               	bcf	3,6	;RP1=0, select bank0
  3457  1593  0821               	movf	?___aldiv+1,w
  3458  1594  00BE               	movwf	updateSetAlarm@hours+1
  3459  1595  0820               	movf	?___aldiv,w
  3460  1596  00BD               	movwf	updateSetAlarm@hours
  3461                           
  3462                           ;alarmUpdate.c: 25: unsigned int remainder = elapsed_time - hours * 3600;
  3463  1597  083E               	movf	updateSetAlarm@hours+1,w
  3464  1598  00A1               	movwf	___wmul@multiplier+1
  3465  1599  083D               	movf	updateSetAlarm@hours,w
  3466  159A  00A0               	movwf	___wmul@multiplier
  3467  159B  3010               	movlw	16
  3468  159C  00A2               	movwf	___wmul@multiplicand
  3469  159D  300E               	movlw	14
  3470  159E  00A3               	movwf	___wmul@multiplicand+1
  3471  159F  160A  158A  257E  160A  118A  	fcall	___wmul
  3472  15A4  1283               	bcf	3,5	;RP0=0, select bank0
  3473  15A5  1303               	bcf	3,6	;RP1=0, select bank0
  3474  15A6  0920               	comf	?___wmul,w
  3475  15A7  00B3               	movwf	??_updateSetAlarm
  3476  15A8  0921               	comf	?___wmul+1,w
  3477  15A9  00B4               	movwf	??_updateSetAlarm+1
  3478  15AA  0AB3               	incf	??_updateSetAlarm,f
  3479  15AB  1903               	skipnz
  3480  15AC  0AB4               	incf	??_updateSetAlarm+1,f
  3481  15AD  082F               	movf	updateSetAlarm@elapsed_time,w
  3482  15AE  0733               	addwf	??_updateSetAlarm,w
  3483  15AF  00B5               	movwf	updateSetAlarm@remainder
  3484  15B0  0830               	movf	updateSetAlarm@elapsed_time+1,w
  3485  15B1  1803               	skipnc
  3486  15B2  0A30               	incf	updateSetAlarm@elapsed_time+1,w
  3487  15B3  0734               	addwf	??_updateSetAlarm+1,w
  3488  15B4  00B6               	movwf	updateSetAlarm@remainder+1
  3489                           
  3490                           ;alarmUpdate.c: 26: unsigned int minutes = remainder / 60;
  3491  15B5  303C               	movlw	60
  3492  15B6  00A0               	movwf	___lwdiv@divisor
  3493  15B7  3000               	movlw	0
  3494  15B8  00A1               	movwf	___lwdiv@divisor+1
  3495  15B9  0836               	movf	updateSetAlarm@remainder+1,w
  3496  15BA  00A3               	movwf	___lwdiv@dividend+1
  3497  15BB  0835               	movf	updateSetAlarm@remainder,w
  3498  15BC  00A2               	movwf	___lwdiv@dividend
  3499  15BD  160A  158A  2682  160A  118A  	fcall	___lwdiv
  3500  15C2  1283               	bcf	3,5	;RP0=0, select bank0
  3501  15C3  1303               	bcf	3,6	;RP1=0, select bank0
  3502  15C4  0821               	movf	?___lwdiv+1,w
  3503  15C5  00BC               	movwf	updateSetAlarm@minutes+1
  3504  15C6  0820               	movf	?___lwdiv,w
  3505  15C7  00BB               	movwf	updateSetAlarm@minutes
  3506                           
  3507                           ;alarmUpdate.c: 29: minVariable1 = minutes % 10;
  3508  15C8  300A               	movlw	10
  3509  15C9  00A0               	movwf	___lwmod@divisor
  3510  15CA  3000               	movlw	0
  3511  15CB  00A1               	movwf	___lwmod@divisor+1
  3512  15CC  083C               	movf	updateSetAlarm@minutes+1,w
  3513  15CD  00A3               	movwf	___lwmod@dividend+1
  3514  15CE  083B               	movf	updateSetAlarm@minutes,w
  3515  15CF  00A2               	movwf	___lwmod@dividend
  3516  15D0  120A  118A  27CB  160A  118A  	fcall	___lwmod
  3517  15D5  1283               	bcf	3,5	;RP0=0, select bank0
  3518  15D6  1303               	bcf	3,6	;RP1=0, select bank0
  3519  15D7  0820               	movf	?___lwmod,w
  3520  15D8  00B3               	movwf	??_updateSetAlarm
  3521  15D9  0833               	movf	??_updateSetAlarm,w
  3522  15DA  00BA               	movwf	updateSetAlarm@minVariable1
  3523                           
  3524                           ;alarmUpdate.c: 30: minVariable2 = minutes / 10;
  3525  15DB  300A               	movlw	10
  3526  15DC  00A0               	movwf	___lwdiv@divisor
  3527  15DD  3000               	movlw	0
  3528  15DE  00A1               	movwf	___lwdiv@divisor+1
  3529  15DF  083C               	movf	updateSetAlarm@minutes+1,w
  3530  15E0  00A3               	movwf	___lwdiv@dividend+1
  3531  15E1  083B               	movf	updateSetAlarm@minutes,w
  3532  15E2  00A2               	movwf	___lwdiv@dividend
  3533  15E3  160A  158A  2682  160A  118A  	fcall	___lwdiv
  3534  15E8  1283               	bcf	3,5	;RP0=0, select bank0
  3535  15E9  1303               	bcf	3,6	;RP1=0, select bank0
  3536  15EA  0820               	movf	?___lwdiv,w
  3537  15EB  00B3               	movwf	??_updateSetAlarm
  3538  15EC  0833               	movf	??_updateSetAlarm,w
  3539  15ED  00B9               	movwf	updateSetAlarm@minVariable2
  3540                           
  3541                           ;alarmUpdate.c: 31: hoursVariable3 = hours % 10;
  3542  15EE  300A               	movlw	10
  3543  15EF  00A0               	movwf	___lwmod@divisor
  3544  15F0  3000               	movlw	0
  3545  15F1  00A1               	movwf	___lwmod@divisor+1
  3546  15F2  083E               	movf	updateSetAlarm@hours+1,w
  3547  15F3  00A3               	movwf	___lwmod@dividend+1
  3548  15F4  083D               	movf	updateSetAlarm@hours,w
  3549  15F5  00A2               	movwf	___lwmod@dividend
  3550  15F6  120A  118A  27CB  160A  118A  	fcall	___lwmod
  3551  15FB  1283               	bcf	3,5	;RP0=0, select bank0
  3552  15FC  1303               	bcf	3,6	;RP1=0, select bank0
  3553  15FD  0820               	movf	?___lwmod,w
  3554  15FE  00B3               	movwf	??_updateSetAlarm
  3555  15FF  0833               	movf	??_updateSetAlarm,w
  3556  1600  00B8               	movwf	updateSetAlarm@hoursVariable3
  3557                           
  3558                           ;alarmUpdate.c: 32: hoursVariable4 = hours / 10;
  3559  1601  300A               	movlw	10
  3560  1602  00A0               	movwf	___lwdiv@divisor
  3561  1603  3000               	movlw	0
  3562  1604  00A1               	movwf	___lwdiv@divisor+1
  3563  1605  083E               	movf	updateSetAlarm@hours+1,w
  3564  1606  00A3               	movwf	___lwdiv@dividend+1
  3565  1607  083D               	movf	updateSetAlarm@hours,w
  3566  1608  00A2               	movwf	___lwdiv@dividend
  3567  1609  160A  158A  2682  160A  118A  	fcall	___lwdiv
  3568  160E  1283               	bcf	3,5	;RP0=0, select bank0
  3569  160F  1303               	bcf	3,6	;RP1=0, select bank0
  3570  1610  0820               	movf	?___lwdiv,w
  3571  1611  00B3               	movwf	??_updateSetAlarm
  3572  1612  0833               	movf	??_updateSetAlarm,w
  3573  1613  00B7               	movwf	updateSetAlarm@hoursVariable4
  3574                           
  3575                           ;alarmUpdate.c: 35: LCD_putch('0' + hoursVariable4);
  3576  1614  0837               	movf	updateSetAlarm@hoursVariable4,w
  3577  1615  3E30               	addlw	48
  3578  1616  160A  158A  2540  160A  118A  	fcall	_LCD_putch
  3579                           
  3580                           ;alarmUpdate.c: 36: LCD_putch('0' + hoursVariable3);
  3581  161B  1283               	bcf	3,5	;RP0=0, select bank0
  3582  161C  1303               	bcf	3,6	;RP1=0, select bank0
  3583  161D  0838               	movf	updateSetAlarm@hoursVariable3,w
  3584  161E  3E30               	addlw	48
  3585  161F  160A  158A  2540  160A  118A  	fcall	_LCD_putch
  3586                           
  3587                           ;alarmUpdate.c: 37: LCD_putch(':');
  3588  1624  303A               	movlw	58
  3589  1625  160A  158A  2540  160A  118A  	fcall	_LCD_putch
  3590                           
  3591                           ;alarmUpdate.c: 38: LCD_putch('0' + minVariable2);
  3592  162A  1283               	bcf	3,5	;RP0=0, select bank0
  3593  162B  1303               	bcf	3,6	;RP1=0, select bank0
  3594  162C  0839               	movf	updateSetAlarm@minVariable2,w
  3595  162D  3E30               	addlw	48
  3596  162E  160A  158A  2540  160A  118A  	fcall	_LCD_putch
  3597                           
  3598                           ;alarmUpdate.c: 39: LCD_putch('0' + minVariable1);
  3599  1633  1283               	bcf	3,5	;RP0=0, select bank0
  3600  1634  1303               	bcf	3,6	;RP1=0, select bank0
  3601  1635  083A               	movf	updateSetAlarm@minVariable1,w
  3602  1636  3E30               	addlw	48
  3603  1637  160A  158A  2540   	fcall	_LCD_putch
  3604  163A  0008               	return
  3605  163B                     __end_of_updateSetAlarm:	
  3606                           
  3607                           	psect	text3
  3608  07CB                     __ptext3:	
  3609 ;; *************** function ___lwmod *****************
  3610 ;; Defined at:
  3611 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c"
  3612 ;; Parameters:    Size  Location     Type
  3613 ;;  divisor         2    0[BANK0 ] unsigned int 
  3614 ;;  dividend        2    2[BANK0 ] unsigned int 
  3615 ;; Auto vars:     Size  Location     Type
  3616 ;;  counter         1    5[BANK0 ] unsigned char 
  3617 ;; Return value:  Size  Location     Type
  3618 ;;                  2    0[BANK0 ] unsigned int 
  3619 ;; Registers used:
  3620 ;;		wreg, status,2, status,0
  3621 ;; Tracked objects:
  3622 ;;		On entry : 0/0
  3623 ;;		On exit  : 0/0
  3624 ;;		Unchanged: 0/0
  3625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3626 ;;      Params:         0       4       0       0       0
  3627 ;;      Locals:         0       1       0       0       0
  3628 ;;      Temps:          0       1       0       0       0
  3629 ;;      Totals:         0       6       0       0       0
  3630 ;;Total ram usage:        6 bytes
  3631 ;; Hardware stack levels used:    1
  3632 ;; Hardware stack levels required when called:    1
  3633 ;; This function calls:
  3634 ;;		Nothing
  3635 ;; This function is called by:
  3636 ;;		_updateTimeDisplayed
  3637 ;;		_updateSetAlarm
  3638 ;; This function uses a non-reentrant model
  3639 ;;
  3640                           
  3641                           
  3642                           ;psect for function ___lwmod
  3643  07CB                     ___lwmod:	
  3644                           
  3645                           ;incstack = 0
  3646                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3647  07CB  1283               	bcf	3,5	;RP0=0, select bank0
  3648  07CC  1303               	bcf	3,6	;RP1=0, select bank0
  3649  07CD  0820               	movf	___lwmod@divisor,w
  3650  07CE  0421               	iorwf	___lwmod@divisor+1,w
  3651  07CF  1903               	btfsc	3,2
  3652  07D0  2FFA               	goto	l5142
  3653  07D1  01A5               	clrf	___lwmod@counter
  3654  07D2  0AA5               	incf	___lwmod@counter,f
  3655  07D3                     l5132:	
  3656  07D3  1BA1               	btfsc	___lwmod@divisor+1,7
  3657  07D4  2FE1               	goto	l5134
  3658  07D5  3001               	movlw	1
  3659  07D6                     u7425:	
  3660  07D6  1003               	clrc
  3661  07D7  0DA0               	rlf	___lwmod@divisor,f
  3662  07D8  0DA1               	rlf	___lwmod@divisor+1,f
  3663  07D9  3EFF               	addlw	-1
  3664  07DA  1D03               	skipz
  3665  07DB  2FD6               	goto	u7425
  3666  07DC  3001               	movlw	1
  3667  07DD  00A4               	movwf	??___lwmod
  3668  07DE  0824               	movf	??___lwmod,w
  3669  07DF  07A5               	addwf	___lwmod@counter,f
  3670  07E0  2FD3               	goto	l5132
  3671  07E1                     l5134:	
  3672  07E1  0821               	movf	___lwmod@divisor+1,w
  3673  07E2  0223               	subwf	___lwmod@dividend+1,w
  3674  07E3  1D03               	skipz
  3675  07E4  2FE7               	goto	u7445
  3676  07E5  0820               	movf	___lwmod@divisor,w
  3677  07E6  0222               	subwf	___lwmod@dividend,w
  3678  07E7                     u7445:	
  3679  07E7  1C03               	skipc
  3680  07E8  2FEF               	goto	l5138
  3681  07E9  0820               	movf	___lwmod@divisor,w
  3682  07EA  02A2               	subwf	___lwmod@dividend,f
  3683  07EB  0821               	movf	___lwmod@divisor+1,w
  3684  07EC  1C03               	skipc
  3685  07ED  03A3               	decf	___lwmod@dividend+1,f
  3686  07EE  02A3               	subwf	___lwmod@dividend+1,f
  3687  07EF                     l5138:	
  3688  07EF  3001               	movlw	1
  3689  07F0                     u7455:	
  3690  07F0  1003               	clrc
  3691  07F1  0CA1               	rrf	___lwmod@divisor+1,f
  3692  07F2  0CA0               	rrf	___lwmod@divisor,f
  3693  07F3  3EFF               	addlw	-1
  3694  07F4  1D03               	skipz
  3695  07F5  2FF0               	goto	u7455
  3696  07F6  3001               	movlw	1
  3697  07F7  02A5               	subwf	___lwmod@counter,f
  3698  07F8  1D03               	btfss	3,2
  3699  07F9  2FE1               	goto	l5134
  3700  07FA                     l5142:	
  3701  07FA  0823               	movf	___lwmod@dividend+1,w
  3702  07FB  00A1               	movwf	?___lwmod+1
  3703  07FC  0822               	movf	___lwmod@dividend,w
  3704  07FD  00A0               	movwf	?___lwmod
  3705  07FE  0008               	return
  3706  07FF                     __end_of___lwmod:	
  3707                           
  3708                           	psect	text4
  3709  1E82                     __ptext4:	
  3710 ;; *************** function ___lwdiv *****************
  3711 ;; Defined at:
  3712 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  3713 ;; Parameters:    Size  Location     Type
  3714 ;;  divisor         2    0[BANK0 ] unsigned int 
  3715 ;;  dividend        2    2[BANK0 ] unsigned int 
  3716 ;; Auto vars:     Size  Location     Type
  3717 ;;  quotient        2    6[BANK0 ] unsigned int 
  3718 ;;  counter         1    5[BANK0 ] unsigned char 
  3719 ;; Return value:  Size  Location     Type
  3720 ;;                  2    0[BANK0 ] unsigned int 
  3721 ;; Registers used:
  3722 ;;		wreg, status,2, status,0
  3723 ;; Tracked objects:
  3724 ;;		On entry : 0/0
  3725 ;;		On exit  : 0/0
  3726 ;;		Unchanged: 0/0
  3727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3728 ;;      Params:         0       4       0       0       0
  3729 ;;      Locals:         0       3       0       0       0
  3730 ;;      Temps:          0       1       0       0       0
  3731 ;;      Totals:         0       8       0       0       0
  3732 ;;Total ram usage:        8 bytes
  3733 ;; Hardware stack levels used:    1
  3734 ;; Hardware stack levels required when called:    1
  3735 ;; This function calls:
  3736 ;;		Nothing
  3737 ;; This function is called by:
  3738 ;;		_updateTimeDisplayed
  3739 ;;		_updateSetAlarm
  3740 ;; This function uses a non-reentrant model
  3741 ;;
  3742                           
  3743                           
  3744                           ;psect for function ___lwdiv
  3745  1E82                     ___lwdiv:	
  3746                           
  3747                           ;incstack = 0
  3748                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3749  1E82  1283               	bcf	3,5	;RP0=0, select bank0
  3750  1E83  1303               	bcf	3,6	;RP1=0, select bank0
  3751  1E84  01A6               	clrf	___lwdiv@quotient
  3752  1E85  01A7               	clrf	___lwdiv@quotient+1
  3753  1E86  0820               	movf	___lwdiv@divisor,w
  3754  1E87  0421               	iorwf	___lwdiv@divisor+1,w
  3755  1E88  1903               	btfsc	3,2
  3756  1E89  2EBB               	goto	l5120
  3757  1E8A  01A5               	clrf	___lwdiv@counter
  3758  1E8B  0AA5               	incf	___lwdiv@counter,f
  3759  1E8C                     l5108:	
  3760  1E8C  1BA1               	btfsc	___lwdiv@divisor+1,7
  3761  1E8D  2E9A               	goto	l5110
  3762  1E8E  3001               	movlw	1
  3763  1E8F                     u7355:	
  3764  1E8F  1003               	clrc
  3765  1E90  0DA0               	rlf	___lwdiv@divisor,f
  3766  1E91  0DA1               	rlf	___lwdiv@divisor+1,f
  3767  1E92  3EFF               	addlw	-1
  3768  1E93  1D03               	skipz
  3769  1E94  2E8F               	goto	u7355
  3770  1E95  3001               	movlw	1
  3771  1E96  00A4               	movwf	??___lwdiv
  3772  1E97  0824               	movf	??___lwdiv,w
  3773  1E98  07A5               	addwf	___lwdiv@counter,f
  3774  1E99  2E8C               	goto	l5108
  3775  1E9A                     l5110:	
  3776  1E9A  3001               	movlw	1
  3777  1E9B                     u7375:	
  3778  1E9B  1003               	clrc
  3779  1E9C  0DA6               	rlf	___lwdiv@quotient,f
  3780  1E9D  0DA7               	rlf	___lwdiv@quotient+1,f
  3781  1E9E  3EFF               	addlw	-1
  3782  1E9F  1D03               	skipz
  3783  1EA0  2E9B               	goto	u7375
  3784  1EA1  0821               	movf	___lwdiv@divisor+1,w
  3785  1EA2  0223               	subwf	___lwdiv@dividend+1,w
  3786  1EA3  1D03               	skipz
  3787  1EA4  2EA7               	goto	u7385
  3788  1EA5  0820               	movf	___lwdiv@divisor,w
  3789  1EA6  0222               	subwf	___lwdiv@dividend,w
  3790  1EA7                     u7385:	
  3791  1EA7  1C03               	skipc
  3792  1EA8  2EB0               	goto	l5116
  3793  1EA9  0820               	movf	___lwdiv@divisor,w
  3794  1EAA  02A2               	subwf	___lwdiv@dividend,f
  3795  1EAB  0821               	movf	___lwdiv@divisor+1,w
  3796  1EAC  1C03               	skipc
  3797  1EAD  03A3               	decf	___lwdiv@dividend+1,f
  3798  1EAE  02A3               	subwf	___lwdiv@dividend+1,f
  3799  1EAF  1426               	bsf	___lwdiv@quotient,0
  3800  1EB0                     l5116:	
  3801  1EB0  3001               	movlw	1
  3802  1EB1                     u7395:	
  3803  1EB1  1003               	clrc
  3804  1EB2  0CA1               	rrf	___lwdiv@divisor+1,f
  3805  1EB3  0CA0               	rrf	___lwdiv@divisor,f
  3806  1EB4  3EFF               	addlw	-1
  3807  1EB5  1D03               	skipz
  3808  1EB6  2EB1               	goto	u7395
  3809  1EB7  3001               	movlw	1
  3810  1EB8  02A5               	subwf	___lwdiv@counter,f
  3811  1EB9  1D03               	btfss	3,2
  3812  1EBA  2E9A               	goto	l5110
  3813  1EBB                     l5120:	
  3814  1EBB  0827               	movf	___lwdiv@quotient+1,w
  3815  1EBC  00A1               	movwf	?___lwdiv+1
  3816  1EBD  0826               	movf	___lwdiv@quotient,w
  3817  1EBE  00A0               	movwf	?___lwdiv
  3818  1EBF  0008               	return
  3819  1EC0                     __end_of___lwdiv:	
  3820                           
  3821                           	psect	text5
  3822  11A7                     __ptext5:	
  3823 ;; *************** function ___aldiv *****************
  3824 ;; Defined at:
  3825 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
  3826 ;; Parameters:    Size  Location     Type
  3827 ;;  divisor         4    0[BANK0 ] long 
  3828 ;;  dividend        4    4[BANK0 ] long 
  3829 ;; Auto vars:     Size  Location     Type
  3830 ;;  quotient        4   11[BANK0 ] long 
  3831 ;;  sign            1   10[BANK0 ] unsigned char 
  3832 ;;  counter         1    9[BANK0 ] unsigned char 
  3833 ;; Return value:  Size  Location     Type
  3834 ;;                  4    0[BANK0 ] long 
  3835 ;; Registers used:
  3836 ;;		wreg, status,2, status,0
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3842 ;;      Params:         0       8       0       0       0
  3843 ;;      Locals:         0       6       0       0       0
  3844 ;;      Temps:          0       1       0       0       0
  3845 ;;      Totals:         0      15       0       0       0
  3846 ;;Total ram usage:       15 bytes
  3847 ;; Hardware stack levels used:    1
  3848 ;; Hardware stack levels required when called:    1
  3849 ;; This function calls:
  3850 ;;		Nothing
  3851 ;; This function is called by:
  3852 ;;		_updateTimeDisplayed
  3853 ;;		_updateSetAlarm
  3854 ;; This function uses a non-reentrant model
  3855 ;;
  3856                           
  3857                           
  3858                           ;psect for function ___aldiv
  3859  11A7                     ___aldiv:	
  3860                           
  3861                           ;incstack = 0
  3862                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  3863  11A7  1283               	bcf	3,5	;RP0=0, select bank0
  3864  11A8  1303               	bcf	3,6	;RP1=0, select bank0
  3865  11A9  01AA               	clrf	___aldiv@sign
  3866  11AA  1FA3               	btfss	___aldiv@divisor+3,7
  3867  11AB  29B9               	goto	l913
  3868  11AC  09A0               	comf	___aldiv@divisor,f
  3869  11AD  09A1               	comf	___aldiv@divisor+1,f
  3870  11AE  09A2               	comf	___aldiv@divisor+2,f
  3871  11AF  09A3               	comf	___aldiv@divisor+3,f
  3872  11B0  0AA0               	incf	___aldiv@divisor,f
  3873  11B1  1903               	skipnz
  3874  11B2  0AA1               	incf	___aldiv@divisor+1,f
  3875  11B3  1903               	skipnz
  3876  11B4  0AA2               	incf	___aldiv@divisor+2,f
  3877  11B5  1903               	skipnz
  3878  11B6  0AA3               	incf	___aldiv@divisor+3,f
  3879  11B7  01AA               	clrf	___aldiv@sign
  3880  11B8  0AAA               	incf	___aldiv@sign,f
  3881  11B9                     l913:	
  3882  11B9  1FA7               	btfss	___aldiv@dividend+3,7
  3883  11BA  29CA               	goto	l5026
  3884  11BB  09A4               	comf	___aldiv@dividend,f
  3885  11BC  09A5               	comf	___aldiv@dividend+1,f
  3886  11BD  09A6               	comf	___aldiv@dividend+2,f
  3887  11BE  09A7               	comf	___aldiv@dividend+3,f
  3888  11BF  0AA4               	incf	___aldiv@dividend,f
  3889  11C0  1903               	skipnz
  3890  11C1  0AA5               	incf	___aldiv@dividend+1,f
  3891  11C2  1903               	skipnz
  3892  11C3  0AA6               	incf	___aldiv@dividend+2,f
  3893  11C4  1903               	skipnz
  3894  11C5  0AA7               	incf	___aldiv@dividend+3,f
  3895  11C6  3001               	movlw	1
  3896  11C7  00A8               	movwf	??___aldiv
  3897  11C8  0828               	movf	??___aldiv,w
  3898  11C9  06AA               	xorwf	___aldiv@sign,f
  3899  11CA                     l5026:	
  3900  11CA  3000               	movlw	0
  3901  11CB  00AE               	movwf	___aldiv@quotient+3
  3902  11CC  3000               	movlw	0
  3903  11CD  00AD               	movwf	___aldiv@quotient+2
  3904  11CE  3000               	movlw	0
  3905  11CF  00AC               	movwf	___aldiv@quotient+1
  3906  11D0  3000               	movlw	0
  3907  11D1  00AB               	movwf	___aldiv@quotient
  3908  11D2  0823               	movf	___aldiv@divisor+3,w
  3909  11D3  0422               	iorwf	___aldiv@divisor+2,w
  3910  11D4  0421               	iorwf	___aldiv@divisor+1,w
  3911  11D5  0420               	iorwf	___aldiv@divisor,w
  3912  11D6  1903               	skipnz
  3913  11D7  2A1F               	goto	l5048
  3914  11D8  01A9               	clrf	___aldiv@counter
  3915  11D9  0AA9               	incf	___aldiv@counter,f
  3916  11DA                     l5034:	
  3917  11DA  1BA3               	btfsc	___aldiv@divisor+3,7
  3918  11DB  29EA               	goto	l5036
  3919  11DC  3001               	movlw	1
  3920  11DD  00A8               	movwf	??___aldiv
  3921  11DE                     u7195:	
  3922  11DE  1003               	clrc
  3923  11DF  0DA0               	rlf	___aldiv@divisor,f
  3924  11E0  0DA1               	rlf	___aldiv@divisor+1,f
  3925  11E1  0DA2               	rlf	___aldiv@divisor+2,f
  3926  11E2  0DA3               	rlf	___aldiv@divisor+3,f
  3927  11E3  0BA8               	decfsz	??___aldiv,f
  3928  11E4  29DE               	goto	u7195
  3929  11E5  3001               	movlw	1
  3930  11E6  00A8               	movwf	??___aldiv
  3931  11E7  0828               	movf	??___aldiv,w
  3932  11E8  07A9               	addwf	___aldiv@counter,f
  3933  11E9  29DA               	goto	l5034
  3934  11EA                     l5036:	
  3935  11EA  3001               	movlw	1
  3936  11EB  00A8               	movwf	??___aldiv
  3937  11EC                     u7215:	
  3938  11EC  1003               	clrc
  3939  11ED  0DAB               	rlf	___aldiv@quotient,f
  3940  11EE  0DAC               	rlf	___aldiv@quotient+1,f
  3941  11EF  0DAD               	rlf	___aldiv@quotient+2,f
  3942  11F0  0DAE               	rlf	___aldiv@quotient+3,f
  3943  11F1  0BA8               	decfsz	??___aldiv,f
  3944  11F2  29EC               	goto	u7215
  3945  11F3  0823               	movf	___aldiv@divisor+3,w
  3946  11F4  0227               	subwf	___aldiv@dividend+3,w
  3947  11F5  1D03               	skipz
  3948  11F6  2A01               	goto	u7225
  3949  11F7  0822               	movf	___aldiv@divisor+2,w
  3950  11F8  0226               	subwf	___aldiv@dividend+2,w
  3951  11F9  1D03               	skipz
  3952  11FA  2A01               	goto	u7225
  3953  11FB  0821               	movf	___aldiv@divisor+1,w
  3954  11FC  0225               	subwf	___aldiv@dividend+1,w
  3955  11FD  1D03               	skipz
  3956  11FE  2A01               	goto	u7225
  3957  11FF  0820               	movf	___aldiv@divisor,w
  3958  1200  0224               	subwf	___aldiv@dividend,w
  3959  1201                     u7225:	
  3960  1201  1C03               	skipc
  3961  1202  2A12               	goto	l5044
  3962  1203  0820               	movf	___aldiv@divisor,w
  3963  1204  02A4               	subwf	___aldiv@dividend,f
  3964  1205  0821               	movf	___aldiv@divisor+1,w
  3965  1206  1C03               	skipc
  3966  1207  0F21               	incfsz	___aldiv@divisor+1,w
  3967  1208  02A5               	subwf	___aldiv@dividend+1,f
  3968  1209  0822               	movf	___aldiv@divisor+2,w
  3969  120A  1C03               	skipc
  3970  120B  0F22               	incfsz	___aldiv@divisor+2,w
  3971  120C  02A6               	subwf	___aldiv@dividend+2,f
  3972  120D  0823               	movf	___aldiv@divisor+3,w
  3973  120E  1C03               	skipc
  3974  120F  0F23               	incfsz	___aldiv@divisor+3,w
  3975  1210  02A7               	subwf	___aldiv@dividend+3,f
  3976  1211  142B               	bsf	___aldiv@quotient,0
  3977  1212                     l5044:	
  3978  1212  3001               	movlw	1
  3979  1213                     u7235:	
  3980  1213  1003               	clrc
  3981  1214  0CA3               	rrf	___aldiv@divisor+3,f
  3982  1215  0CA2               	rrf	___aldiv@divisor+2,f
  3983  1216  0CA1               	rrf	___aldiv@divisor+1,f
  3984  1217  0CA0               	rrf	___aldiv@divisor,f
  3985  1218  3EFF               	addlw	-1
  3986  1219  1D03               	skipz
  3987  121A  2A13               	goto	u7235
  3988  121B  3001               	movlw	1
  3989  121C  02A9               	subwf	___aldiv@counter,f
  3990  121D  1D03               	btfss	3,2
  3991  121E  29EA               	goto	l5036
  3992  121F                     l5048:	
  3993  121F  082A               	movf	___aldiv@sign,w
  3994  1220  1903               	btfsc	3,2
  3995  1221  2A2D               	goto	l5052
  3996  1222  09AB               	comf	___aldiv@quotient,f
  3997  1223  09AC               	comf	___aldiv@quotient+1,f
  3998  1224  09AD               	comf	___aldiv@quotient+2,f
  3999  1225  09AE               	comf	___aldiv@quotient+3,f
  4000  1226  0AAB               	incf	___aldiv@quotient,f
  4001  1227  1903               	skipnz
  4002  1228  0AAC               	incf	___aldiv@quotient+1,f
  4003  1229  1903               	skipnz
  4004  122A  0AAD               	incf	___aldiv@quotient+2,f
  4005  122B  1903               	skipnz
  4006  122C  0AAE               	incf	___aldiv@quotient+3,f
  4007  122D                     l5052:	
  4008  122D  082E               	movf	___aldiv@quotient+3,w
  4009  122E  00A3               	movwf	?___aldiv+3
  4010  122F  082D               	movf	___aldiv@quotient+2,w
  4011  1230  00A2               	movwf	?___aldiv+2
  4012  1231  082C               	movf	___aldiv@quotient+1,w
  4013  1232  00A1               	movwf	?___aldiv+1
  4014  1233  082B               	movf	___aldiv@quotient,w
  4015  1234  00A0               	movwf	?___aldiv
  4016  1235  0008               	return
  4017  1236                     __end_of___aldiv:	
  4018                           
  4019                           	psect	text6
  4020  087E                     __ptext6:	
  4021 ;; *************** function _temperatureReader *****************
  4022 ;; Defined at:
  4023 ;;		line 12 in file "tempReader.c"
  4024 ;; Parameters:    Size  Location     Type
  4025 ;;		None
  4026 ;; Auto vars:     Size  Location     Type
  4027 ;;  TemperatureT    3   32[BANK1 ] float 
  4028 ;; Return value:  Size  Location     Type
  4029 ;;                  1    wreg      void 
  4030 ;; Registers used:
  4031 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4032 ;; Tracked objects:
  4033 ;;		On entry : 0/0
  4034 ;;		On exit  : 0/0
  4035 ;;		Unchanged: 0/0
  4036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4037 ;;      Params:         0       0       0       0       0
  4038 ;;      Locals:         0       0       3       0       0
  4039 ;;      Temps:          0       0       1       0       0
  4040 ;;      Totals:         0       0       4       0       0
  4041 ;;Total ram usage:        4 bytes
  4042 ;; Hardware stack levels used:    1
  4043 ;; Hardware stack levels required when called:    5
  4044 ;; This function calls:
  4045 ;;		_ADC_channel_select
  4046 ;;		_ADC_read
  4047 ;;		_LCD_display_float
  4048 ;;		_LCD_putch
  4049 ;;		_LCD_putsc
  4050 ;;		___ftadd
  4051 ;;		___ftdiv
  4052 ;;		___ftmul
  4053 ;;		___fttol
  4054 ;;		___lwtoft
  4055 ;; This function is called by:
  4056 ;;		_main
  4057 ;; This function uses a non-reentrant model
  4058 ;;
  4059                           
  4060                           
  4061                           ;psect for function _temperatureReader
  4062  087E                     _temperatureReader:	
  4063                           
  4064                           ;tempReader.c: 14: ADC_channel_select(0);
  4065                           
  4066                           ;incstack = 0
  4067                           ; Regs used in _temperatureReader: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4068  087E  3000               	movlw	0
  4069  087F  160A  158A  24DB  120A  158A  	fcall	_ADC_channel_select
  4070                           
  4071                           ;tempReader.c: 16: float TemperatureT = ((float) ADC_read() / 1023)*100;
  4072  0884  3000               	movlw	0
  4073  0885  1283               	bcf	3,5	;RP0=0, select bank0
  4074  0886  1303               	bcf	3,6	;RP1=0, select bank0
  4075  0887  00BC               	movwf	___ftmul@f1
  4076  0888  30C8               	movlw	200
  4077  0889  00BD               	movwf	___ftmul@f1+1
  4078  088A  3042               	movlw	66
  4079  088B  00BE               	movwf	___ftmul@f1+2
  4080  088C  30C0               	movlw	192
  4081  088D  00AC               	movwf	___ftdiv@f2
  4082  088E  307F               	movlw	127
  4083  088F  00AD               	movwf	___ftdiv@f2+1
  4084  0890  3044               	movlw	68
  4085  0891  00AE               	movwf	___ftdiv@f2+2
  4086  0892  160A  158A  2510  120A  158A  	fcall	_ADC_read
  4087  0897  1283               	bcf	3,5	;RP0=0, select bank0
  4088  0898  1303               	bcf	3,6	;RP1=0, select bank0
  4089  0899  0821               	movf	?_ADC_read+1,w
  4090  089A  00A9               	movwf	___lwtoft@c+1
  4091  089B  0820               	movf	?_ADC_read,w
  4092  089C  00A8               	movwf	___lwtoft@c
  4093  089D  160A  158A  2528  120A  158A  	fcall	___lwtoft
  4094  08A2  1283               	bcf	3,5	;RP0=0, select bank0
  4095  08A3  1303               	bcf	3,6	;RP1=0, select bank0
  4096  08A4  0828               	movf	?___lwtoft,w
  4097  08A5  00AF               	movwf	___ftdiv@f1
  4098  08A6  0829               	movf	?___lwtoft+1,w
  4099  08A7  00B0               	movwf	___ftdiv@f1+1
  4100  08A8  082A               	movf	?___lwtoft+2,w
  4101  08A9  00B1               	movwf	___ftdiv@f1+2
  4102  08AA  160A  118A  2409  120A  158A  	fcall	___ftdiv
  4103  08AF  1283               	bcf	3,5	;RP0=0, select bank0
  4104  08B0  1303               	bcf	3,6	;RP1=0, select bank0
  4105  08B1  082C               	movf	?___ftdiv,w
  4106  08B2  00BF               	movwf	___ftmul@f2
  4107  08B3  082D               	movf	?___ftdiv+1,w
  4108  08B4  00C0               	movwf	___ftmul@f2+1
  4109  08B5  082E               	movf	?___ftdiv+2,w
  4110  08B6  00C1               	movwf	___ftmul@f2+2
  4111  08B7  160A  118A  263B  120A  158A  	fcall	___ftmul
  4112  08BC  1283               	bcf	3,5	;RP0=0, select bank0
  4113  08BD  1303               	bcf	3,6	;RP1=0, select bank0
  4114  08BE  083C               	movf	?___ftmul,w
  4115  08BF  1683               	bsf	3,5	;RP0=1, select bank1
  4116  08C0  1303               	bcf	3,6	;RP1=0, select bank1
  4117  08C1  00C0               	movwf	temperatureReader@TemperatureT^(0+128)
  4118  08C2  1283               	bcf	3,5	;RP0=0, select bank0
  4119  08C3  1303               	bcf	3,6	;RP1=0, select bank0
  4120  08C4  083D               	movf	?___ftmul+1,w
  4121  08C5  1683               	bsf	3,5	;RP0=1, select bank1
  4122  08C6  1303               	bcf	3,6	;RP1=0, select bank1
  4123  08C7  00C1               	movwf	(temperatureReader@TemperatureT+1)^(0+128)
  4124  08C8  1283               	bcf	3,5	;RP0=0, select bank0
  4125  08C9  1303               	bcf	3,6	;RP1=0, select bank0
  4126  08CA  083E               	movf	?___ftmul+2,w
  4127  08CB  1683               	bsf	3,5	;RP0=1, select bank1
  4128  08CC  1303               	bcf	3,6	;RP1=0, select bank1
  4129  08CD  00C2               	movwf	(temperatureReader@TemperatureT+2)^(0+128)
  4130                           
  4131                           ;tempReader.c: 17: TemperatureT = ((TemperatureT * (50 - (-40)) / 100) - 40);
  4132  08CE  3000               	movlw	0
  4133  08CF  1283               	bcf	3,5	;RP0=0, select bank0
  4134  08D0  1303               	bcf	3,6	;RP1=0, select bank0
  4135  08D1  00CC               	movwf	___ftadd@f1
  4136  08D2  3020               	movlw	32
  4137  08D3  00CD               	movwf	___ftadd@f1+1
  4138  08D4  30C2               	movlw	194
  4139  08D5  00CE               	movwf	___ftadd@f1+2
  4140  08D6  3000               	movlw	0
  4141  08D7  00AC               	movwf	___ftdiv@f2
  4142  08D8  30C8               	movlw	200
  4143  08D9  00AD               	movwf	___ftdiv@f2+1
  4144  08DA  3042               	movlw	66
  4145  08DB  00AE               	movwf	___ftdiv@f2+2
  4146  08DC  3000               	movlw	0
  4147  08DD  00BC               	movwf	___ftmul@f1
  4148  08DE  30B4               	movlw	180
  4149  08DF  00BD               	movwf	___ftmul@f1+1
  4150  08E0  3042               	movlw	66
  4151  08E1  00BE               	movwf	___ftmul@f1+2
  4152  08E2  1683               	bsf	3,5	;RP0=1, select bank1
  4153  08E3  1303               	bcf	3,6	;RP1=0, select bank1
  4154  08E4  0840               	movf	temperatureReader@TemperatureT^(0+128),w
  4155  08E5  1283               	bcf	3,5	;RP0=0, select bank0
  4156  08E6  1303               	bcf	3,6	;RP1=0, select bank0
  4157  08E7  00BF               	movwf	___ftmul@f2
  4158  08E8  1683               	bsf	3,5	;RP0=1, select bank1
  4159  08E9  1303               	bcf	3,6	;RP1=0, select bank1
  4160  08EA  0841               	movf	(temperatureReader@TemperatureT+1)^(0+128),w
  4161  08EB  1283               	bcf	3,5	;RP0=0, select bank0
  4162  08EC  1303               	bcf	3,6	;RP1=0, select bank0
  4163  08ED  00C0               	movwf	___ftmul@f2+1
  4164  08EE  1683               	bsf	3,5	;RP0=1, select bank1
  4165  08EF  1303               	bcf	3,6	;RP1=0, select bank1
  4166  08F0  0842               	movf	(temperatureReader@TemperatureT+2)^(0+128),w
  4167  08F1  1283               	bcf	3,5	;RP0=0, select bank0
  4168  08F2  1303               	bcf	3,6	;RP1=0, select bank0
  4169  08F3  00C1               	movwf	___ftmul@f2+2
  4170  08F4  160A  118A  263B  120A  158A  	fcall	___ftmul
  4171  08F9  1283               	bcf	3,5	;RP0=0, select bank0
  4172  08FA  1303               	bcf	3,6	;RP1=0, select bank0
  4173  08FB  083C               	movf	?___ftmul,w
  4174  08FC  00AF               	movwf	___ftdiv@f1
  4175  08FD  083D               	movf	?___ftmul+1,w
  4176  08FE  00B0               	movwf	___ftdiv@f1+1
  4177  08FF  083E               	movf	?___ftmul+2,w
  4178  0900  00B1               	movwf	___ftdiv@f1+2
  4179  0901  160A  118A  2409  120A  158A  	fcall	___ftdiv
  4180  0906  1283               	bcf	3,5	;RP0=0, select bank0
  4181  0907  1303               	bcf	3,6	;RP1=0, select bank0
  4182  0908  082C               	movf	?___ftdiv,w
  4183  0909  00CF               	movwf	___ftadd@f2
  4184  090A  082D               	movf	?___ftdiv+1,w
  4185  090B  00D0               	movwf	___ftadd@f2+1
  4186  090C  082E               	movf	?___ftdiv+2,w
  4187  090D  00D1               	movwf	___ftadd@f2+2
  4188  090E  120A  158A  2186  120A  158A  	fcall	___ftadd
  4189  0913  1283               	bcf	3,5	;RP0=0, select bank0
  4190  0914  1303               	bcf	3,6	;RP1=0, select bank0
  4191  0915  084C               	movf	?___ftadd,w
  4192  0916  1683               	bsf	3,5	;RP0=1, select bank1
  4193  0917  1303               	bcf	3,6	;RP1=0, select bank1
  4194  0918  00C0               	movwf	temperatureReader@TemperatureT^(0+128)
  4195  0919  1283               	bcf	3,5	;RP0=0, select bank0
  4196  091A  1303               	bcf	3,6	;RP1=0, select bank0
  4197  091B  084D               	movf	?___ftadd+1,w
  4198  091C  1683               	bsf	3,5	;RP0=1, select bank1
  4199  091D  1303               	bcf	3,6	;RP1=0, select bank1
  4200  091E  00C1               	movwf	(temperatureReader@TemperatureT+1)^(0+128)
  4201  091F  1283               	bcf	3,5	;RP0=0, select bank0
  4202  0920  1303               	bcf	3,6	;RP1=0, select bank0
  4203  0921  084E               	movf	?___ftadd+2,w
  4204  0922  1683               	bsf	3,5	;RP0=1, select bank1
  4205  0923  1303               	bcf	3,6	;RP1=0, select bank1
  4206  0924  00C2               	movwf	(temperatureReader@TemperatureT+2)^(0+128)
  4207                           
  4208                           ;tempReader.c: 20: if (temperature == 'F')
  4209  0925  3046               	movlw	70
  4210  0926  0655               	xorwf	_temperature^(0+128),w
  4211  0927  1D03               	btfss	3,2
  4212  0928  296C               	goto	l5704
  4213                           
  4214                           ;tempReader.c: 21: temperature = (TemperatureT * 1.8) + 32;
  4215  0929  0840               	movf	temperatureReader@TemperatureT^(0+128),w
  4216  092A  1283               	bcf	3,5	;RP0=0, select bank0
  4217  092B  1303               	bcf	3,6	;RP1=0, select bank0
  4218  092C  00BF               	movwf	___ftmul@f2
  4219  092D  1683               	bsf	3,5	;RP0=1, select bank1
  4220  092E  1303               	bcf	3,6	;RP1=0, select bank1
  4221  092F  0841               	movf	(temperatureReader@TemperatureT+1)^(0+128),w
  4222  0930  1283               	bcf	3,5	;RP0=0, select bank0
  4223  0931  1303               	bcf	3,6	;RP1=0, select bank0
  4224  0932  00C0               	movwf	___ftmul@f2+1
  4225  0933  1683               	bsf	3,5	;RP0=1, select bank1
  4226  0934  1303               	bcf	3,6	;RP1=0, select bank1
  4227  0935  0842               	movf	(temperatureReader@TemperatureT+2)^(0+128),w
  4228  0936  1283               	bcf	3,5	;RP0=0, select bank0
  4229  0937  1303               	bcf	3,6	;RP1=0, select bank0
  4230  0938  00C1               	movwf	___ftmul@f2+2
  4231  0939  3066               	movlw	102
  4232  093A  00BC               	movwf	___ftmul@f1
  4233  093B  30E6               	movlw	230
  4234  093C  00BD               	movwf	___ftmul@f1+1
  4235  093D  303F               	movlw	63
  4236  093E  00BE               	movwf	___ftmul@f1+2
  4237  093F  160A  118A  263B  120A  158A  	fcall	___ftmul
  4238  0944  1283               	bcf	3,5	;RP0=0, select bank0
  4239  0945  1303               	bcf	3,6	;RP1=0, select bank0
  4240  0946  083C               	movf	?___ftmul,w
  4241  0947  00CF               	movwf	___ftadd@f2
  4242  0948  083D               	movf	?___ftmul+1,w
  4243  0949  00D0               	movwf	___ftadd@f2+1
  4244  094A  083E               	movf	?___ftmul+2,w
  4245  094B  00D1               	movwf	___ftadd@f2+2
  4246  094C  3000               	movlw	0
  4247  094D  00CC               	movwf	___ftadd@f1
  4248  094E  3000               	movlw	0
  4249  094F  00CD               	movwf	___ftadd@f1+1
  4250  0950  3042               	movlw	66
  4251  0951  00CE               	movwf	___ftadd@f1+2
  4252  0952  120A  158A  2186  120A  158A  	fcall	___ftadd
  4253  0957  1283               	bcf	3,5	;RP0=0, select bank0
  4254  0958  1303               	bcf	3,6	;RP1=0, select bank0
  4255  0959  084C               	movf	?___ftadd,w
  4256  095A  00D9               	movwf	___fttol@f1
  4257  095B  084D               	movf	?___ftadd+1,w
  4258  095C  00DA               	movwf	___fttol@f1+1
  4259  095D  084E               	movf	?___ftadd+2,w
  4260  095E  00DB               	movwf	___fttol@f1+2
  4261  095F  160A  118A  2119  120A  158A  	fcall	___fttol
  4262  0964  1283               	bcf	3,5	;RP0=0, select bank0
  4263  0965  1303               	bcf	3,6	;RP1=0, select bank0
  4264  0966  0859               	movf	?___fttol,w
  4265  0967  1683               	bsf	3,5	;RP0=1, select bank1
  4266  0968  1303               	bcf	3,6	;RP1=0, select bank1
  4267  0969  00BF               	movwf	??_temperatureReader^(0+128)
  4268  096A  083F               	movf	??_temperatureReader^(0+128),w
  4269  096B  00D5               	movwf	_temperature^(0+128)
  4270  096C                     l5704:	
  4271                           
  4272                           ;tempReader.c: 25: LCD_display_float(TemperatureT, 1);
  4273  096C  0840               	movf	temperatureReader@TemperatureT^(0+128),w
  4274  096D  00A0               	movwf	LCD_display_float@value^(0+128)
  4275  096E  0841               	movf	(temperatureReader@TemperatureT+1)^(0+128),w
  4276  096F  00A1               	movwf	(LCD_display_float@value+1)^(0+128)
  4277  0970  0842               	movf	(temperatureReader@TemperatureT+2)^(0+128),w
  4278  0971  00A2               	movwf	(LCD_display_float@value+2)^(0+128)
  4279  0972  01A3               	clrf	LCD_display_float@dplaces^(0+128)
  4280  0973  0AA3               	incf	LCD_display_float@dplaces^(0+128),f
  4281  0974  120A  158A  239A  120A  158A  	fcall	_LCD_display_float
  4282                           
  4283                           ;tempReader.c: 26: LCD_putsc("deg ");
  4284  0979  3066               	movlw	(low ((STR_19-__stringbase)| (0+32768)))& (0+255)
  4285  097A  160A  158A  25EE  120A  158A  	fcall	_LCD_putsc
  4286                           
  4287                           ;tempReader.c: 27: LCD_putch(temperature);
  4288  097F  1683               	bsf	3,5	;RP0=1, select bank1
  4289  0980  1303               	bcf	3,6	;RP1=0, select bank1
  4290  0981  0855               	movf	_temperature^(0+128),w
  4291  0982  160A  158A  2540   	fcall	_LCD_putch
  4292  0985  0008               	return
  4293  0986                     __end_of_temperatureReader:	
  4294                           
  4295                           	psect	text7
  4296  0421                     __ptext7:	
  4297 ;; *************** function _setTimeDisplayer *****************
  4298 ;; Defined at:
  4299 ;;		line 12 in file "timeSettings.c"
  4300 ;; Parameters:    Size  Location     Type
  4301 ;;		None
  4302 ;; Auto vars:     Size  Location     Type
  4303 ;;  variable_Val    2   39[BANK0 ] int 
  4304 ;;  push_Button     2   37[BANK0 ] int 
  4305 ;;  first_Hour_D    1   36[BANK0 ] unsigned char 
  4306 ;;  second_Hour_    1   35[BANK0 ] unsigned char 
  4307 ;;  second_Minut    1   34[BANK0 ] unsigned char 
  4308 ;;  first_Minute    1   33[BANK0 ] unsigned char 
  4309 ;; Return value:  Size  Location     Type
  4310 ;;                  4   19[BANK0 ] long 
  4311 ;; Registers used:
  4312 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4313 ;; Tracked objects:
  4314 ;;		On entry : 0/0
  4315 ;;		On exit  : 0/0
  4316 ;;		Unchanged: 0/0
  4317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4318 ;;      Params:         0       4       0       0       0
  4319 ;;      Locals:         0      10       0       0       0
  4320 ;;      Temps:          0       8       0       0       0
  4321 ;;      Totals:         0      22       0       0       0
  4322 ;;Total ram usage:       22 bytes
  4323 ;; Hardware stack levels used:    1
  4324 ;; Hardware stack levels required when called:    4
  4325 ;; This function calls:
  4326 ;;		_LCD_clear
  4327 ;;		_LCD_cursor
  4328 ;;		_LCD_cursor_off
  4329 ;;		_LCD_cursor_on
  4330 ;;		_LCD_putch
  4331 ;;		_LCD_putsc
  4332 ;;		___lmul
  4333 ;;		___wmul
  4334 ;; This function is called by:
  4335 ;;		_main
  4336 ;; This function uses a non-reentrant model
  4337 ;;
  4338                           
  4339                           
  4340                           ;psect for function _setTimeDisplayer
  4341  0421                     _setTimeDisplayer:	
  4342                           
  4343                           ;timeSettings.c: 14: unsigned char first_Minute_Digit;
  4344                           ;timeSettings.c: 15: unsigned char second_Minute_Digit;
  4345                           ;timeSettings.c: 16: unsigned char first_Hour_Digit;
  4346                           ;timeSettings.c: 17: unsigned char second_Hour_Digit;
  4347                           ;timeSettings.c: 18: int push_Button = 0;
  4348                           
  4349                           ;incstack = 0
  4350                           ; Regs used in _setTimeDisplayer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4351  0421  1283               	bcf	3,5	;RP0=0, select bank0
  4352  0422  1303               	bcf	3,6	;RP1=0, select bank0
  4353  0423  01C5               	clrf	setTimeDisplayer@push_Button
  4354  0424  01C6               	clrf	setTimeDisplayer@push_Button+1
  4355                           
  4356                           ;timeSettings.c: 19: int variable_Value = -1;
  4357  0425  30FF               	movlw	255
  4358  0426  00C7               	movwf	setTimeDisplayer@variable_Value
  4359  0427  30FF               	movlw	255
  4360  0428  00C8               	movwf	setTimeDisplayer@variable_Value+1
  4361                           
  4362                           ;timeSettings.c: 21: first_Minute_Digit = 0;
  4363  0429  01C1               	clrf	setTimeDisplayer@first_Minute_Digit
  4364                           
  4365                           ;timeSettings.c: 22: second_Minute_Digit = 0;
  4366  042A  01C2               	clrf	setTimeDisplayer@second_Minute_Digit
  4367                           
  4368                           ;timeSettings.c: 23: first_Hour_Digit = 0;
  4369  042B  01C4               	clrf	setTimeDisplayer@first_Hour_Digit
  4370                           
  4371                           ;timeSettings.c: 24: second_Hour_Digit = 0;
  4372  042C  01C3               	clrf	setTimeDisplayer@second_Hour_Digit
  4373                           
  4374                           ;timeSettings.c: 26: LCD_clear();
  4375  042D  160A  158A  2648  120A  118A  	fcall	_LCD_clear
  4376                           
  4377                           ;timeSettings.c: 27: LCD_putsc("set time");
  4378  0432  302B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  4379  0433  160A  158A  25EE  120A  118A  	fcall	_LCD_putsc
  4380                           
  4381                           ;timeSettings.c: 28: LCD_cursor(0, 1);
  4382  0438  1283               	bcf	3,5	;RP0=0, select bank0
  4383  0439  1303               	bcf	3,6	;RP1=0, select bank0
  4384  043A  01A9               	clrf	LCD_cursor@y
  4385  043B  0AA9               	incf	LCD_cursor@y,f
  4386  043C  3000               	movlw	0
  4387  043D  160A  158A  24E9  120A  118A  	fcall	_LCD_cursor
  4388                           
  4389                           ;timeSettings.c: 29: LCD_putsc("__:__");
  4390  0442  3060               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  4391  0443  160A  158A  25EE  120A  118A  	fcall	_LCD_putsc
  4392                           
  4393                           ;timeSettings.c: 30: LCD_cursor(push_Button, 1);
  4394  0448  1283               	bcf	3,5	;RP0=0, select bank0
  4395  0449  1303               	bcf	3,6	;RP1=0, select bank0
  4396  044A  01A9               	clrf	LCD_cursor@y
  4397  044B  0AA9               	incf	LCD_cursor@y,f
  4398  044C  0845               	movf	setTimeDisplayer@push_Button,w
  4399  044D  160A  158A  24E9  120A  118A  	fcall	_LCD_cursor
  4400                           
  4401                           ;timeSettings.c: 31: LCD_cursor_on();
  4402  0452  120A  158A  2076  120A  118A  	fcall	_LCD_cursor_on
  4403  0457                     l5276:	
  4404                           ;timeSettings.c: 32: while (1) {
  4405                           
  4406                           
  4407                           ;timeSettings.c: 33: _delay((unsigned long)((100)*(3276800/4000.0)));
  4408  0457  306B               	movlw	107
  4409  0458  1283               	bcf	3,5	;RP0=0, select bank0
  4410  0459  1303               	bcf	3,6	;RP1=0, select bank0
  4411  045A  00B8               	movwf	??_setTimeDisplayer+1
  4412  045B  3062               	movlw	98
  4413  045C  00B7               	movwf	??_setTimeDisplayer
  4414  045D                     u8647:	
  4415  045D  0BB7               	decfsz	??_setTimeDisplayer,f
  4416  045E  2C5D               	goto	u8647
  4417  045F  0BB8               	decfsz	??_setTimeDisplayer+1,f
  4418  0460  2C5D               	goto	u8647
  4419  0461  0000               	nop
  4420                           
  4421                           ;timeSettings.c: 36: if (RD0 == 1) {
  4422  0462  1283               	bcf	3,5	;RP0=0, select bank0
  4423  0463  1303               	bcf	3,6	;RP1=0, select bank0
  4424  0464  1C08               	btfss	8,0	;volatile
  4425  0465  2D16               	goto	l5330
  4426                           
  4427                           ;timeSettings.c: 37: LCD_cursor_off();
  4428  0466  160A  118A  2001  120A  118A  	fcall	_LCD_cursor_off
  4429                           
  4430                           ;timeSettings.c: 38: LCD_cursor(push_Button, 1);
  4431  046B  1283               	bcf	3,5	;RP0=0, select bank0
  4432  046C  1303               	bcf	3,6	;RP1=0, select bank0
  4433  046D  01A9               	clrf	LCD_cursor@y
  4434  046E  0AA9               	incf	LCD_cursor@y,f
  4435  046F  0845               	movf	setTimeDisplayer@push_Button,w
  4436  0470  160A  158A  24E9  120A  118A  	fcall	_LCD_cursor
  4437                           
  4438                           ;timeSettings.c: 40: variable_Value++;
  4439  0475  3001               	movlw	1
  4440  0476  1283               	bcf	3,5	;RP0=0, select bank0
  4441  0477  1303               	bcf	3,6	;RP1=0, select bank0
  4442  0478  07C7               	addwf	setTimeDisplayer@variable_Value,f
  4443  0479  1803               	skipnc
  4444  047A  0AC8               	incf	setTimeDisplayer@variable_Value+1,f
  4445  047B  3000               	movlw	0
  4446  047C  07C8               	addwf	setTimeDisplayer@variable_Value+1,f
  4447                           
  4448                           ;timeSettings.c: 42: if (push_Button == 0) {
  4449  047D  0845               	movf	setTimeDisplayer@push_Button,w
  4450  047E  0446               	iorwf	setTimeDisplayer@push_Button+1,w
  4451  047F  1D03               	btfss	3,2
  4452  0480  2C9D               	goto	l5294
  4453                           
  4454                           ;timeSettings.c: 43: if (variable_Value > 2)
  4455  0481  0848               	movf	setTimeDisplayer@variable_Value+1,w
  4456  0482  3A80               	xorlw	128
  4457  0483  00FF               	movwf	127
  4458  0484  3080               	movlw	128
  4459  0485  027F               	subwf	127,w
  4460  0486  1D03               	skipz
  4461  0487  2C8A               	goto	u7555
  4462  0488  3003               	movlw	3
  4463  0489  0247               	subwf	setTimeDisplayer@variable_Value,w
  4464  048A                     u7555:	
  4465  048A  1C03               	skipc
  4466  048B  2C90               	goto	l5290
  4467                           
  4468                           ;timeSettings.c: 44: variable_Value = 0;
  4469  048C  1283               	bcf	3,5	;RP0=0, select bank0
  4470  048D  1303               	bcf	3,6	;RP1=0, select bank0
  4471  048E  01C7               	clrf	setTimeDisplayer@variable_Value
  4472  048F  01C8               	clrf	setTimeDisplayer@variable_Value+1
  4473  0490                     l5290:	
  4474                           
  4475                           ;timeSettings.c: 45: first_Hour_Digit = variable_Value;
  4476  0490  1283               	bcf	3,5	;RP0=0, select bank0
  4477  0491  1303               	bcf	3,6	;RP1=0, select bank0
  4478  0492  0847               	movf	setTimeDisplayer@variable_Value,w
  4479  0493  00B7               	movwf	??_setTimeDisplayer
  4480  0494  0837               	movf	??_setTimeDisplayer,w
  4481  0495  00C4               	movwf	setTimeDisplayer@first_Hour_Digit
  4482                           
  4483                           ;timeSettings.c: 46: LCD_putch('0' + variable_Value);
  4484  0496  0847               	movf	setTimeDisplayer@variable_Value,w
  4485  0497  3E30               	addlw	48
  4486  0498  160A  158A  2540  120A  118A  	fcall	_LCD_putch
  4487  049D                     l5294:	
  4488                           
  4489                           ;timeSettings.c: 48: }
  4490                           ;timeSettings.c: 49: if (push_Button == 1) {
  4491  049D  1283               	bcf	3,5	;RP0=0, select bank0
  4492  049E  1303               	bcf	3,6	;RP1=0, select bank0
  4493  049F  0345               	decf	setTimeDisplayer@push_Button,w
  4494  04A0  0446               	iorwf	setTimeDisplayer@push_Button+1,w
  4495  04A1  1D03               	btfss	3,2
  4496  04A2  2CD0               	goto	l5310
  4497                           
  4498                           ;timeSettings.c: 50: if (first_Hour_Digit == 2 && variable_Value > 3)
  4499  04A3  3002               	movlw	2
  4500  04A4  0644               	xorwf	setTimeDisplayer@first_Hour_Digit,w
  4501  04A5  1D03               	btfss	3,2
  4502  04A6  2CB2               	goto	l5302
  4503  04A7  0848               	movf	setTimeDisplayer@variable_Value+1,w
  4504  04A8  3A80               	xorlw	128
  4505  04A9  00FF               	movwf	127
  4506  04AA  3080               	movlw	128
  4507  04AB  027F               	subwf	127,w
  4508  04AC  1D03               	skipz
  4509  04AD  2CB0               	goto	u7585
  4510  04AE  3004               	movlw	4
  4511  04AF  0247               	subwf	setTimeDisplayer@variable_Value,w
  4512  04B0                     u7585:	
  4513  04B0  1803               	btfsc	3,0
  4514  04B1  2CBF               	goto	l5304
  4515  04B2                     l5302:	
  4516                           ;timeSettings.c: 51: variable_Value = 0;
  4517                           
  4518                           
  4519                           ;timeSettings.c: 52: else if (variable_Value > 9)
  4520  04B2  1283               	bcf	3,5	;RP0=0, select bank0
  4521  04B3  1303               	bcf	3,6	;RP1=0, select bank0
  4522  04B4  0848               	movf	setTimeDisplayer@variable_Value+1,w
  4523  04B5  3A80               	xorlw	128
  4524  04B6  00FF               	movwf	127
  4525  04B7  3080               	movlw	128
  4526  04B8  027F               	subwf	127,w
  4527  04B9  1D03               	skipz
  4528  04BA  2CBD               	goto	u7595
  4529  04BB  300A               	movlw	10
  4530  04BC  0247               	subwf	setTimeDisplayer@variable_Value,w
  4531  04BD                     u7595:	
  4532  04BD  1C03               	skipc
  4533  04BE  2CC3               	goto	l5306
  4534  04BF                     l5304:	
  4535                           
  4536                           ;timeSettings.c: 53: variable_Value = 0;
  4537  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  4538  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  4539  04C1  01C7               	clrf	setTimeDisplayer@variable_Value
  4540  04C2  01C8               	clrf	setTimeDisplayer@variable_Value+1
  4541  04C3                     l5306:	
  4542                           
  4543                           ;timeSettings.c: 54: second_Hour_Digit = variable_Value;
  4544  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  4545  04C4  1303               	bcf	3,6	;RP1=0, select bank0
  4546  04C5  0847               	movf	setTimeDisplayer@variable_Value,w
  4547  04C6  00B7               	movwf	??_setTimeDisplayer
  4548  04C7  0837               	movf	??_setTimeDisplayer,w
  4549  04C8  00C3               	movwf	setTimeDisplayer@second_Hour_Digit
  4550                           
  4551                           ;timeSettings.c: 55: LCD_putch('0' + variable_Value);
  4552  04C9  0847               	movf	setTimeDisplayer@variable_Value,w
  4553  04CA  3E30               	addlw	48
  4554  04CB  160A  158A  2540  120A  118A  	fcall	_LCD_putch
  4555  04D0                     l5310:	
  4556                           
  4557                           ;timeSettings.c: 56: }
  4558                           ;timeSettings.c: 57: if (push_Button == 3) {
  4559  04D0  3003               	movlw	3
  4560  04D1  1283               	bcf	3,5	;RP0=0, select bank0
  4561  04D2  1303               	bcf	3,6	;RP1=0, select bank0
  4562  04D3  0645               	xorwf	setTimeDisplayer@push_Button,w
  4563  04D4  0446               	iorwf	setTimeDisplayer@push_Button+1,w
  4564  04D5  1D03               	btfss	3,2
  4565  04D6  2CF3               	goto	l5320
  4566                           
  4567                           ;timeSettings.c: 58: if (variable_Value > 5)
  4568  04D7  0848               	movf	setTimeDisplayer@variable_Value+1,w
  4569  04D8  3A80               	xorlw	128
  4570  04D9  00FF               	movwf	127
  4571  04DA  3080               	movlw	128
  4572  04DB  027F               	subwf	127,w
  4573  04DC  1D03               	skipz
  4574  04DD  2CE0               	goto	u7615
  4575  04DE  3006               	movlw	6
  4576  04DF  0247               	subwf	setTimeDisplayer@variable_Value,w
  4577  04E0                     u7615:	
  4578  04E0  1C03               	skipc
  4579  04E1  2CE6               	goto	l5316
  4580                           
  4581                           ;timeSettings.c: 59: variable_Value = 0;
  4582  04E2  1283               	bcf	3,5	;RP0=0, select bank0
  4583  04E3  1303               	bcf	3,6	;RP1=0, select bank0
  4584  04E4  01C7               	clrf	setTimeDisplayer@variable_Value
  4585  04E5  01C8               	clrf	setTimeDisplayer@variable_Value+1
  4586  04E6                     l5316:	
  4587                           
  4588                           ;timeSettings.c: 60: first_Minute_Digit = variable_Value;
  4589  04E6  1283               	bcf	3,5	;RP0=0, select bank0
  4590  04E7  1303               	bcf	3,6	;RP1=0, select bank0
  4591  04E8  0847               	movf	setTimeDisplayer@variable_Value,w
  4592  04E9  00B7               	movwf	??_setTimeDisplayer
  4593  04EA  0837               	movf	??_setTimeDisplayer,w
  4594  04EB  00C1               	movwf	setTimeDisplayer@first_Minute_Digit
  4595                           
  4596                           ;timeSettings.c: 61: LCD_putch('0' + variable_Value);
  4597  04EC  0847               	movf	setTimeDisplayer@variable_Value,w
  4598  04ED  3E30               	addlw	48
  4599  04EE  160A  158A  2540  120A  118A  	fcall	_LCD_putch
  4600  04F3                     l5320:	
  4601                           
  4602                           ;timeSettings.c: 62: }
  4603                           ;timeSettings.c: 63: if (push_Button == 4) {
  4604  04F3  3004               	movlw	4
  4605  04F4  1283               	bcf	3,5	;RP0=0, select bank0
  4606  04F5  1303               	bcf	3,6	;RP1=0, select bank0
  4607  04F6  0645               	xorwf	setTimeDisplayer@push_Button,w
  4608  04F7  0446               	iorwf	setTimeDisplayer@push_Button+1,w
  4609  04F8  1D03               	btfss	3,2
  4610  04F9  2D16               	goto	l5330
  4611                           
  4612                           ;timeSettings.c: 64: if (variable_Value > 9)
  4613  04FA  0848               	movf	setTimeDisplayer@variable_Value+1,w
  4614  04FB  3A80               	xorlw	128
  4615  04FC  00FF               	movwf	127
  4616  04FD  3080               	movlw	128
  4617  04FE  027F               	subwf	127,w
  4618  04FF  1D03               	skipz
  4619  0500  2D03               	goto	u7635
  4620  0501  300A               	movlw	10
  4621  0502  0247               	subwf	setTimeDisplayer@variable_Value,w
  4622  0503                     u7635:	
  4623  0503  1C03               	skipc
  4624  0504  2D09               	goto	l5326
  4625                           
  4626                           ;timeSettings.c: 65: variable_Value = 0;
  4627  0505  1283               	bcf	3,5	;RP0=0, select bank0
  4628  0506  1303               	bcf	3,6	;RP1=0, select bank0
  4629  0507  01C7               	clrf	setTimeDisplayer@variable_Value
  4630  0508  01C8               	clrf	setTimeDisplayer@variable_Value+1
  4631  0509                     l5326:	
  4632                           
  4633                           ;timeSettings.c: 66: second_Minute_Digit = variable_Value;
  4634  0509  1283               	bcf	3,5	;RP0=0, select bank0
  4635  050A  1303               	bcf	3,6	;RP1=0, select bank0
  4636  050B  0847               	movf	setTimeDisplayer@variable_Value,w
  4637  050C  00B7               	movwf	??_setTimeDisplayer
  4638  050D  0837               	movf	??_setTimeDisplayer,w
  4639  050E  00C2               	movwf	setTimeDisplayer@second_Minute_Digit
  4640                           
  4641                           ;timeSettings.c: 67: LCD_putch('0' + variable_Value);
  4642  050F  0847               	movf	setTimeDisplayer@variable_Value,w
  4643  0510  3E30               	addlw	48
  4644  0511  160A  158A  2540  120A  118A  	fcall	_LCD_putch
  4645  0516                     l5330:	
  4646                           
  4647                           ;timeSettings.c: 70: }
  4648                           ;timeSettings.c: 72: }
  4649                           ;timeSettings.c: 74: if (RD1 == 1) {
  4650  0516  1283               	bcf	3,5	;RP0=0, select bank0
  4651  0517  1303               	bcf	3,6	;RP1=0, select bank0
  4652  0518  1C88               	btfss	8,1	;volatile
  4653  0519  2DA1               	goto	l5376
  4654                           
  4655                           ;timeSettings.c: 75: LCD_cursor(push_Button, 1);
  4656  051A  01A9               	clrf	LCD_cursor@y
  4657  051B  0AA9               	incf	LCD_cursor@y,f
  4658  051C  0845               	movf	setTimeDisplayer@push_Button,w
  4659  051D  160A  158A  24E9  120A  118A  	fcall	_LCD_cursor
  4660                           
  4661                           ;timeSettings.c: 76: LCD_cursor_off();
  4662  0522  160A  118A  2001  120A  118A  	fcall	_LCD_cursor_off
  4663                           
  4664                           ;timeSettings.c: 77: variable_Value--;
  4665  0527  30FF               	movlw	255
  4666  0528  1283               	bcf	3,5	;RP0=0, select bank0
  4667  0529  1303               	bcf	3,6	;RP1=0, select bank0
  4668  052A  07C7               	addwf	setTimeDisplayer@variable_Value,f
  4669  052B  1803               	skipnc
  4670  052C  0AC8               	incf	setTimeDisplayer@variable_Value+1,f
  4671  052D  30FF               	movlw	255
  4672  052E  07C8               	addwf	setTimeDisplayer@variable_Value+1,f
  4673                           
  4674                           ;timeSettings.c: 79: if (push_Button == 0) {
  4675  052F  0845               	movf	setTimeDisplayer@push_Button,w
  4676  0530  0446               	iorwf	setTimeDisplayer@push_Button+1,w
  4677  0531  1D03               	btfss	3,2
  4678  0532  2D44               	goto	l5344
  4679                           
  4680                           ;timeSettings.c: 80: if (variable_Value < 0)
  4681  0533  1FC8               	btfss	setTimeDisplayer@variable_Value+1,7
  4682  0534  2D39               	goto	l377
  4683                           
  4684                           ;timeSettings.c: 81: variable_Value = 2;
  4685  0535  3002               	movlw	2
  4686  0536  00C7               	movwf	setTimeDisplayer@variable_Value
  4687  0537  3000               	movlw	0
  4688  0538  00C8               	movwf	setTimeDisplayer@variable_Value+1
  4689  0539                     l377:	
  4690                           
  4691                           ;timeSettings.c: 82: first_Hour_Digit = variable_Value;
  4692  0539  0847               	movf	setTimeDisplayer@variable_Value,w
  4693  053A  00B7               	movwf	??_setTimeDisplayer
  4694  053B  0837               	movf	??_setTimeDisplayer,w
  4695  053C  00C4               	movwf	setTimeDisplayer@first_Hour_Digit
  4696                           
  4697                           ;timeSettings.c: 83: LCD_putch('0' + variable_Value);
  4698  053D  0847               	movf	setTimeDisplayer@variable_Value,w
  4699  053E  3E30               	addlw	48
  4700  053F  160A  158A  2540  120A  118A  	fcall	_LCD_putch
  4701  0544                     l5344:	
  4702                           
  4703                           ;timeSettings.c: 84: }
  4704                           ;timeSettings.c: 85: if (push_Button == 1) {
  4705  0544  1283               	bcf	3,5	;RP0=0, select bank0
  4706  0545  1303               	bcf	3,6	;RP1=0, select bank0
  4707  0546  0345               	decf	setTimeDisplayer@push_Button,w
  4708  0547  0446               	iorwf	setTimeDisplayer@push_Button+1,w
  4709  0548  1D03               	btfss	3,2
  4710  0549  2D62               	goto	l5356
  4711                           
  4712                           ;timeSettings.c: 86: if (first_Hour_Digit == 2 && variable_Value < 0)
  4713  054A  3002               	movlw	2
  4714  054B  0644               	xorwf	setTimeDisplayer@first_Hour_Digit,w
  4715  054C  1903               	btfsc	3,2
  4716  054D  1FC8               	btfss	setTimeDisplayer@variable_Value+1,7
  4717  054E  2D51               	goto	l379
  4718                           
  4719                           ;timeSettings.c: 87: variable_Value = 3;
  4720  054F  3003               	movlw	3
  4721  0550  2D54               	goto	L2
  4722  0551                     l379:	
  4723                           
  4724                           ;timeSettings.c: 88: else if (variable_Value < 0)
  4725  0551  1FC8               	btfss	setTimeDisplayer@variable_Value+1,7
  4726  0552  2D57               	goto	l380
  4727                           
  4728                           ;timeSettings.c: 89: variable_Value = 9;
  4729  0553  3009               	movlw	9
  4730  0554                     L2:	
  4731  0554  00C7               	movwf	setTimeDisplayer@variable_Value
  4732  0555  3000               	movlw	0
  4733  0556  00C8               	movwf	setTimeDisplayer@variable_Value+1
  4734  0557                     l380:	
  4735                           
  4736                           ;timeSettings.c: 90: second_Hour_Digit = variable_Value;
  4737  0557  0847               	movf	setTimeDisplayer@variable_Value,w
  4738  0558  00B7               	movwf	??_setTimeDisplayer
  4739  0559  0837               	movf	??_setTimeDisplayer,w
  4740  055A  00C3               	movwf	setTimeDisplayer@second_Hour_Digit
  4741                           
  4742                           ;timeSettings.c: 91: LCD_putch('0' + variable_Value);
  4743  055B  0847               	movf	setTimeDisplayer@variable_Value,w
  4744  055C  3E30               	addlw	48
  4745  055D  160A  158A  2540  120A  118A  	fcall	_LCD_putch
  4746  0562                     l5356:	
  4747                           
  4748                           ;timeSettings.c: 92: }
  4749                           ;timeSettings.c: 93: if (push_Button == 3) {
  4750  0562  3003               	movlw	3
  4751  0563  1283               	bcf	3,5	;RP0=0, select bank0
  4752  0564  1303               	bcf	3,6	;RP1=0, select bank0
  4753  0565  0645               	xorwf	setTimeDisplayer@push_Button,w
  4754  0566  0446               	iorwf	setTimeDisplayer@push_Button+1,w
  4755  0567  1D03               	btfss	3,2
  4756  0568  2D7A               	goto	l5364
  4757                           
  4758                           ;timeSettings.c: 94: if (variable_Value < 0)
  4759  0569  1FC8               	btfss	setTimeDisplayer@variable_Value+1,7
  4760  056A  2D6F               	goto	l383
  4761                           
  4762                           ;timeSettings.c: 95: variable_Value = 5;
  4763  056B  3005               	movlw	5
  4764  056C  00C7               	movwf	setTimeDisplayer@variable_Value
  4765  056D  3000               	movlw	0
  4766  056E  00C8               	movwf	setTimeDisplayer@variable_Value+1
  4767  056F                     l383:	
  4768                           
  4769                           ;timeSettings.c: 96: first_Minute_Digit = variable_Value;
  4770  056F  0847               	movf	setTimeDisplayer@variable_Value,w
  4771  0570  00B7               	movwf	??_setTimeDisplayer
  4772  0571  0837               	movf	??_setTimeDisplayer,w
  4773  0572  00C1               	movwf	setTimeDisplayer@first_Minute_Digit
  4774                           
  4775                           ;timeSettings.c: 97: LCD_putch('0' + variable_Value);
  4776  0573  0847               	movf	setTimeDisplayer@variable_Value,w
  4777  0574  3E30               	addlw	48
  4778  0575  160A  158A  2540  120A  118A  	fcall	_LCD_putch
  4779  057A                     l5364:	
  4780                           
  4781                           ;timeSettings.c: 98: }
  4782                           ;timeSettings.c: 99: if (push_Button == 4) {
  4783  057A  3004               	movlw	4
  4784  057B  1283               	bcf	3,5	;RP0=0, select bank0
  4785  057C  1303               	bcf	3,6	;RP1=0, select bank0
  4786  057D  0645               	xorwf	setTimeDisplayer@push_Button,w
  4787  057E  0446               	iorwf	setTimeDisplayer@push_Button+1,w
  4788  057F  1D03               	btfss	3,2
  4789  0580  2DA1               	goto	l5376
  4790                           
  4791                           ;timeSettings.c: 100: if (variable_Value < 0)
  4792  0581  1FC8               	btfss	setTimeDisplayer@variable_Value+1,7
  4793  0582  2D87               	goto	l385
  4794                           
  4795                           ;timeSettings.c: 101: variable_Value = 9;
  4796  0583  3009               	movlw	9
  4797  0584  00C7               	movwf	setTimeDisplayer@variable_Value
  4798  0585  3000               	movlw	0
  4799  0586  00C8               	movwf	setTimeDisplayer@variable_Value+1
  4800  0587                     l385:	
  4801                           
  4802                           ;timeSettings.c: 102: second_Minute_Digit = variable_Value;
  4803  0587  0847               	movf	setTimeDisplayer@variable_Value,w
  4804  0588  00B7               	movwf	??_setTimeDisplayer
  4805  0589  0837               	movf	??_setTimeDisplayer,w
  4806  058A  00C2               	movwf	setTimeDisplayer@second_Minute_Digit
  4807                           
  4808                           ;timeSettings.c: 103: LCD_putch('0' + variable_Value);
  4809  058B  0847               	movf	setTimeDisplayer@variable_Value,w
  4810  058C  3E30               	addlw	48
  4811  058D  160A  158A  2540  120A  118A  	fcall	_LCD_putch
  4812                           
  4813                           ;timeSettings.c: 104: LCD_cursor(push_Button, 1);
  4814  0592  1283               	bcf	3,5	;RP0=0, select bank0
  4815  0593  1303               	bcf	3,6	;RP1=0, select bank0
  4816  0594  01A9               	clrf	LCD_cursor@y
  4817  0595  0AA9               	incf	LCD_cursor@y,f
  4818  0596  0845               	movf	setTimeDisplayer@push_Button,w
  4819  0597  160A  158A  24E9  120A  118A  	fcall	_LCD_cursor
  4820                           
  4821                           ;timeSettings.c: 105: LCD_cursor_on();
  4822  059C  120A  158A  2076  120A  118A  	fcall	_LCD_cursor_on
  4823  05A1                     l5376:	
  4824                           
  4825                           ;timeSettings.c: 106: }
  4826                           ;timeSettings.c: 108: }
  4827                           ;timeSettings.c: 109: if (RD2 == 1) {
  4828  05A1  1283               	bcf	3,5	;RP0=0, select bank0
  4829  05A2  1303               	bcf	3,6	;RP1=0, select bank0
  4830  05A3  1D08               	btfss	8,2	;volatile
  4831  05A4  2DDD               	goto	l5394
  4832                           
  4833                           ;timeSettings.c: 111: if (variable_Value>-1) {
  4834  05A5  1BC8               	btfsc	setTimeDisplayer@variable_Value+1,7
  4835  05A6  2DB1               	goto	l5382
  4836                           
  4837                           ;timeSettings.c: 112: push_Button++;
  4838  05A7  3001               	movlw	1
  4839  05A8  07C5               	addwf	setTimeDisplayer@push_Button,f
  4840  05A9  1803               	skipnc
  4841  05AA  0AC6               	incf	setTimeDisplayer@push_Button+1,f
  4842  05AB  3000               	movlw	0
  4843  05AC  07C6               	addwf	setTimeDisplayer@push_Button+1,f
  4844                           
  4845                           ;timeSettings.c: 113: variable_Value = -1;
  4846  05AD  30FF               	movlw	255
  4847  05AE  00C7               	movwf	setTimeDisplayer@variable_Value
  4848  05AF  30FF               	movlw	255
  4849  05B0  00C8               	movwf	setTimeDisplayer@variable_Value+1
  4850  05B1                     l5382:	
  4851                           
  4852                           ;timeSettings.c: 114: }
  4853                           ;timeSettings.c: 115: if (push_Button == 2)
  4854  05B1  3002               	movlw	2
  4855  05B2  0645               	xorwf	setTimeDisplayer@push_Button,w
  4856  05B3  0446               	iorwf	setTimeDisplayer@push_Button+1,w
  4857  05B4  1D03               	btfss	3,2
  4858  05B5  2DBD               	goto	l5386
  4859                           
  4860                           ;timeSettings.c: 116: push_Button++;
  4861  05B6  3001               	movlw	1
  4862  05B7  07C5               	addwf	setTimeDisplayer@push_Button,f
  4863  05B8  1803               	skipnc
  4864  05B9  0AC6               	incf	setTimeDisplayer@push_Button+1,f
  4865  05BA  3000               	movlw	0
  4866  05BB  07C6               	addwf	setTimeDisplayer@push_Button+1,f
  4867  05BC  2DCE               	goto	l5390
  4868  05BD                     l5386:	
  4869                           
  4870                           ;timeSettings.c: 117: else if (push_Button >= 5)
  4871  05BD  0846               	movf	setTimeDisplayer@push_Button+1,w
  4872  05BE  3A80               	xorlw	128
  4873  05BF  00FF               	movwf	127
  4874  05C0  3080               	movlw	128
  4875  05C1  027F               	subwf	127,w
  4876  05C2  1D03               	skipz
  4877  05C3  2DC6               	goto	u7785
  4878  05C4  3005               	movlw	5
  4879  05C5  0245               	subwf	setTimeDisplayer@push_Button,w
  4880  05C6                     u7785:	
  4881  05C6  1C03               	skipc
  4882  05C7  2DCE               	goto	l5390
  4883                           
  4884                           ;timeSettings.c: 118: push_Button = 5;
  4885  05C8  3005               	movlw	5
  4886  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  4887  05CA  1303               	bcf	3,6	;RP1=0, select bank0
  4888  05CB  00C5               	movwf	setTimeDisplayer@push_Button
  4889  05CC  3000               	movlw	0
  4890  05CD  00C6               	movwf	setTimeDisplayer@push_Button+1
  4891  05CE                     l5390:	
  4892                           
  4893                           ;timeSettings.c: 119: LCD_cursor(push_Button, 1);
  4894  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  4895  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  4896  05D0  01A9               	clrf	LCD_cursor@y
  4897  05D1  0AA9               	incf	LCD_cursor@y,f
  4898  05D2  0845               	movf	setTimeDisplayer@push_Button,w
  4899  05D3  160A  158A  24E9  120A  118A  	fcall	_LCD_cursor
  4900                           
  4901                           ;timeSettings.c: 120: LCD_cursor_on();
  4902  05D8  120A  158A  2076  120A  118A  	fcall	_LCD_cursor_on
  4903  05DD                     l5394:	
  4904                           
  4905                           ;timeSettings.c: 122: }
  4906                           ;timeSettings.c: 124: if (RD3 == 1) {
  4907  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  4908  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  4909  05DF  1D88               	btfss	8,3	;volatile
  4910  05E0  2E17               	goto	l5412
  4911                           
  4912                           ;timeSettings.c: 126: if (variable_Value>-1) {
  4913  05E1  1BC8               	btfsc	setTimeDisplayer@variable_Value+1,7
  4914  05E2  2DED               	goto	l5400
  4915                           
  4916                           ;timeSettings.c: 127: push_Button--;
  4917  05E3  30FF               	movlw	255
  4918  05E4  07C5               	addwf	setTimeDisplayer@push_Button,f
  4919  05E5  1803               	skipnc
  4920  05E6  0AC6               	incf	setTimeDisplayer@push_Button+1,f
  4921  05E7  30FF               	movlw	255
  4922  05E8  07C6               	addwf	setTimeDisplayer@push_Button+1,f
  4923                           
  4924                           ;timeSettings.c: 128: variable_Value = -1;
  4925  05E9  30FF               	movlw	255
  4926  05EA  00C7               	movwf	setTimeDisplayer@variable_Value
  4927  05EB  30FF               	movlw	255
  4928  05EC  00C8               	movwf	setTimeDisplayer@variable_Value+1
  4929  05ED                     l5400:	
  4930                           
  4931                           ;timeSettings.c: 129: }
  4932                           ;timeSettings.c: 130: if (push_Button == 2)
  4933  05ED  3002               	movlw	2
  4934  05EE  0645               	xorwf	setTimeDisplayer@push_Button,w
  4935  05EF  0446               	iorwf	setTimeDisplayer@push_Button+1,w
  4936  05F0  1D03               	btfss	3,2
  4937  05F1  2DF9               	goto	l5404
  4938                           
  4939                           ;timeSettings.c: 131: push_Button--;
  4940  05F2  30FF               	movlw	255
  4941  05F3  07C5               	addwf	setTimeDisplayer@push_Button,f
  4942  05F4  1803               	skipnc
  4943  05F5  0AC6               	incf	setTimeDisplayer@push_Button+1,f
  4944  05F6  30FF               	movlw	255
  4945  05F7  07C6               	addwf	setTimeDisplayer@push_Button+1,f
  4946  05F8  2E08               	goto	l5408
  4947  05F9                     l5404:	
  4948                           
  4949                           ;timeSettings.c: 132: else if (push_Button <= 0)
  4950  05F9  0846               	movf	setTimeDisplayer@push_Button+1,w
  4951  05FA  3A80               	xorlw	128
  4952  05FB  00FF               	movwf	127
  4953  05FC  3080               	movlw	128
  4954  05FD  027F               	subwf	127,w
  4955  05FE  1D03               	skipz
  4956  05FF  2E02               	goto	u7825
  4957  0600  3001               	movlw	1
  4958  0601  0245               	subwf	setTimeDisplayer@push_Button,w
  4959  0602                     u7825:	
  4960  0602  1803               	skipnc
  4961  0603  2E08               	goto	l5408
  4962                           
  4963                           ;timeSettings.c: 133: push_Button = 0;
  4964  0604  1283               	bcf	3,5	;RP0=0, select bank0
  4965  0605  1303               	bcf	3,6	;RP1=0, select bank0
  4966  0606  01C5               	clrf	setTimeDisplayer@push_Button
  4967  0607  01C6               	clrf	setTimeDisplayer@push_Button+1
  4968  0608                     l5408:	
  4969                           
  4970                           ;timeSettings.c: 134: LCD_cursor(push_Button, 1);
  4971  0608  1283               	bcf	3,5	;RP0=0, select bank0
  4972  0609  1303               	bcf	3,6	;RP1=0, select bank0
  4973  060A  01A9               	clrf	LCD_cursor@y
  4974  060B  0AA9               	incf	LCD_cursor@y,f
  4975  060C  0845               	movf	setTimeDisplayer@push_Button,w
  4976  060D  160A  158A  24E9  120A  118A  	fcall	_LCD_cursor
  4977                           
  4978                           ;timeSettings.c: 135: LCD_cursor_on();
  4979  0612  120A  158A  2076  120A  118A  	fcall	_LCD_cursor_on
  4980  0617                     l5412:	
  4981                           
  4982                           ;timeSettings.c: 137: }
  4983                           ;timeSettings.c: 139: if (push_Button >= 5) {
  4984  0617  1283               	bcf	3,5	;RP0=0, select bank0
  4985  0618  1303               	bcf	3,6	;RP1=0, select bank0
  4986  0619  0846               	movf	setTimeDisplayer@push_Button+1,w
  4987  061A  3A80               	xorlw	128
  4988  061B  00FF               	movwf	127
  4989  061C  3080               	movlw	128
  4990  061D  027F               	subwf	127,w
  4991  061E  1D03               	skipz
  4992  061F  2E22               	goto	u7835
  4993  0620  3005               	movlw	5
  4994  0621  0245               	subwf	setTimeDisplayer@push_Button,w
  4995  0622                     u7835:	
  4996  0622  1C03               	skipc
  4997  0623  2C57               	goto	l5276
  4998                           
  4999                           ;timeSettings.c: 140: LCD_cursor_off();
  5000  0624  160A  118A  2001  120A  118A  	fcall	_LCD_cursor_off
  5001                           
  5002                           ;timeSettings.c: 141: return (long) (first_Hour_Digit * 10 + second_Hour_Digit)
  5003                           ;timeSettings.c: 142: * 3600 + (first_Minute_Digit * 10 + second_Minute_Digit)*60;
  5004  0629  1283               	bcf	3,5	;RP0=0, select bank0
  5005  062A  1303               	bcf	3,6	;RP1=0, select bank0
  5006  062B  0841               	movf	setTimeDisplayer@first_Minute_Digit,w
  5007  062C  00B7               	movwf	??_setTimeDisplayer
  5008  062D  01B8               	clrf	??_setTimeDisplayer+1
  5009  062E  0837               	movf	??_setTimeDisplayer,w
  5010  062F  00A0               	movwf	___wmul@multiplier
  5011  0630  0838               	movf	??_setTimeDisplayer+1,w
  5012  0631  00A1               	movwf	___wmul@multiplier+1
  5013  0632  300A               	movlw	10
  5014  0633  00A2               	movwf	___wmul@multiplicand
  5015  0634  3000               	movlw	0
  5016  0635  00A3               	movwf	___wmul@multiplicand+1
  5017  0636  160A  158A  257E  120A  118A  	fcall	___wmul
  5018  063B  1283               	bcf	3,5	;RP0=0, select bank0
  5019  063C  1303               	bcf	3,6	;RP1=0, select bank0
  5020  063D  0842               	movf	setTimeDisplayer@second_Minute_Digit,w
  5021  063E  0720               	addwf	?___wmul,w
  5022  063F  00BF               	movwf	_setTimeDisplayer$1074
  5023  0640  3000               	movlw	0
  5024  0641  1803               	skipnc
  5025  0642  3001               	movlw	1
  5026  0643  0721               	addwf	?___wmul+1,w
  5027  0644  00C0               	movwf	_setTimeDisplayer$1074+1
  5028                           
  5029                           ;timeSettings.c: 141: return (long) (first_Hour_Digit * 10 + second_Hour_Digit)
  5030                           ;timeSettings.c: 142: * 3600 + (first_Minute_Digit * 10 + second_Minute_Digit)*60;
  5031  0645  0840               	movf	_setTimeDisplayer$1074+1,w
  5032  0646  00A1               	movwf	___wmul@multiplier+1
  5033  0647  083F               	movf	_setTimeDisplayer$1074,w
  5034  0648  00A0               	movwf	___wmul@multiplier
  5035  0649  303C               	movlw	60
  5036  064A  00A2               	movwf	___wmul@multiplicand
  5037  064B  3000               	movlw	0
  5038  064C  00A3               	movwf	___wmul@multiplicand+1
  5039  064D  160A  158A  257E  120A  118A  	fcall	___wmul
  5040  0652  1283               	bcf	3,5	;RP0=0, select bank0
  5041  0653  1303               	bcf	3,6	;RP1=0, select bank0
  5042  0654  0820               	movf	?___wmul,w
  5043  0655  00B7               	movwf	??_setTimeDisplayer
  5044  0656  0821               	movf	?___wmul+1,w
  5045  0657  00B8               	movwf	??_setTimeDisplayer+1
  5046  0658  3000               	movlw	0
  5047  0659  1BB8               	btfsc	??_setTimeDisplayer+1,7
  5048  065A  30FF               	movlw	255
  5049  065B  00B9               	movwf	??_setTimeDisplayer+2
  5050  065C  00BA               	movwf	??_setTimeDisplayer+3
  5051  065D  300A               	movlw	10
  5052  065E  00A2               	movwf	___wmul@multiplicand
  5053  065F  3000               	movlw	0
  5054  0660  00A3               	movwf	___wmul@multiplicand+1
  5055  0661  0844               	movf	setTimeDisplayer@first_Hour_Digit,w
  5056  0662  00BB               	movwf	??_setTimeDisplayer+4
  5057  0663  01BC               	clrf	??_setTimeDisplayer+5
  5058  0664  083B               	movf	??_setTimeDisplayer+4,w
  5059  0665  00A0               	movwf	___wmul@multiplier
  5060  0666  083C               	movf	??_setTimeDisplayer+5,w
  5061  0667  00A1               	movwf	___wmul@multiplier+1
  5062  0668  160A  158A  257E  120A  118A  	fcall	___wmul
  5063  066D  1283               	bcf	3,5	;RP0=0, select bank0
  5064  066E  1303               	bcf	3,6	;RP1=0, select bank0
  5065  066F  0843               	movf	setTimeDisplayer@second_Hour_Digit,w
  5066  0670  0720               	addwf	?___wmul,w
  5067  0671  00BD               	movwf	??_setTimeDisplayer+6
  5068  0672  3000               	movlw	0
  5069  0673  1803               	skipnc
  5070  0674  3001               	movlw	1
  5071  0675  0721               	addwf	?___wmul+1,w
  5072  0676  00BE               	movwf	??_setTimeDisplayer+7
  5073  0677  083D               	movf	??_setTimeDisplayer+6,w
  5074  0678  00A6               	movwf	___lmul@multiplier
  5075  0679  083E               	movf	??_setTimeDisplayer+7,w
  5076  067A  00A7               	movwf	___lmul@multiplier+1
  5077  067B  3000               	movlw	0
  5078  067C  1BA7               	btfsc	___lmul@multiplier+1,7
  5079  067D  30FF               	movlw	255
  5080  067E  00A8               	movwf	___lmul@multiplier+2
  5081  067F  00A9               	movwf	___lmul@multiplier+3
  5082  0680  3000               	movlw	0
  5083  0681  00AD               	movwf	___lmul@multiplicand+3
  5084  0682  3000               	movlw	0
  5085  0683  00AC               	movwf	___lmul@multiplicand+2
  5086  0684  300E               	movlw	14
  5087  0685  00AB               	movwf	___lmul@multiplicand+1
  5088  0686  3010               	movlw	16
  5089  0687  00AA               	movwf	___lmul@multiplicand
  5090  0688  160A  158A  26C0  120A  118A  	fcall	___lmul
  5091  068D  1283               	bcf	3,5	;RP0=0, select bank0
  5092  068E  1303               	bcf	3,6	;RP1=0, select bank0
  5093  068F  0826               	movf	?___lmul,w
  5094  0690  07B7               	addwf	??_setTimeDisplayer,f
  5095  0691  0827               	movf	?___lmul+1,w
  5096  0692  1803               	skipnc
  5097  0693  0F27               	incfsz	?___lmul+1,w
  5098  0694  2E96               	goto	u7840
  5099  0695  2E97               	goto	u7841
  5100  0696                     u7840:	
  5101  0696  07B8               	addwf	??_setTimeDisplayer+1,f
  5102  0697                     u7841:	
  5103  0697  0828               	movf	?___lmul+2,w
  5104  0698  1803               	skipnc
  5105  0699  0F28               	incfsz	?___lmul+2,w
  5106  069A  2E9C               	goto	u7842
  5107  069B  2E9D               	goto	u7843
  5108  069C                     u7842:	
  5109  069C  07B9               	addwf	??_setTimeDisplayer+2,f
  5110  069D                     u7843:	
  5111  069D  0829               	movf	?___lmul+3,w
  5112  069E  1803               	skipnc
  5113  069F  0A29               	incf	?___lmul+3,w
  5114  06A0  07BA               	addwf	??_setTimeDisplayer+3,f
  5115  06A1  083A               	movf	??_setTimeDisplayer+3,w
  5116  06A2  00B6               	movwf	?_setTimeDisplayer+3
  5117  06A3  0839               	movf	??_setTimeDisplayer+2,w
  5118  06A4  00B5               	movwf	?_setTimeDisplayer+2
  5119  06A5  0838               	movf	??_setTimeDisplayer+1,w
  5120  06A6  00B4               	movwf	?_setTimeDisplayer+1
  5121  06A7  0837               	movf	??_setTimeDisplayer,w
  5122  06A8  00B3               	movwf	?_setTimeDisplayer
  5123  06A9  0008               	return
  5124  06AA                     __end_of_setTimeDisplayer:	
  5125                           
  5126                           	psect	text8
  5127  170E                     __ptext8:	
  5128 ;; *************** function _setTemperatureUnit *****************
  5129 ;; Defined at:
  5130 ;;		line 12 in file "tempSettings.c"
  5131 ;; Parameters:    Size  Location     Type
  5132 ;;		None
  5133 ;; Auto vars:     Size  Location     Type
  5134 ;;  a               2   22[BANK0 ] unsigned int 
  5135 ;;  b               2   20[BANK0 ] unsigned int 
  5136 ;;  c               2   18[BANK0 ] unsigned int 
  5137 ;; Return value:  Size  Location     Type
  5138 ;;                  1    wreg      unsigned char 
  5139 ;; Registers used:
  5140 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5141 ;; Tracked objects:
  5142 ;;		On entry : 0/0
  5143 ;;		On exit  : 0/0
  5144 ;;		Unchanged: 0/0
  5145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5146 ;;      Params:         0       0       0       0       0
  5147 ;;      Locals:         0       6       0       0       0
  5148 ;;      Temps:          0       2       0       0       0
  5149 ;;      Totals:         0       8       0       0       0
  5150 ;;Total ram usage:        8 bytes
  5151 ;; Hardware stack levels used:    1
  5152 ;; Hardware stack levels required when called:    4
  5153 ;; This function calls:
  5154 ;;		_LCD_clear
  5155 ;;		_LCD_cursor
  5156 ;;		_LCD_putch
  5157 ;;		_LCD_putsc
  5158 ;; This function is called by:
  5159 ;;		_main
  5160 ;; This function uses a non-reentrant model
  5161 ;;
  5162                           
  5163                           
  5164                           ;psect for function _setTemperatureUnit
  5165  170E                     _setTemperatureUnit:	
  5166                           
  5167                           ;tempSettings.c: 13: unsigned int a = 0;
  5168                           
  5169                           ;incstack = 0
  5170                           ; Regs used in _setTemperatureUnit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5171  170E  1283               	bcf	3,5	;RP0=0, select bank0
  5172  170F  1303               	bcf	3,6	;RP1=0, select bank0
  5173  1710  01B6               	clrf	setTemperatureUnit@a
  5174  1711  01B7               	clrf	setTemperatureUnit@a+1
  5175                           
  5176                           ;tempSettings.c: 14: unsigned int b = 1;
  5177  1712  3001               	movlw	1
  5178  1713  00B4               	movwf	setTemperatureUnit@b
  5179  1714  3000               	movlw	0
  5180  1715  00B5               	movwf	setTemperatureUnit@b+1
  5181                           
  5182                           ;tempSettings.c: 15: unsigned int c = 0;
  5183  1716  01B2               	clrf	setTemperatureUnit@c
  5184  1717  01B3               	clrf	setTemperatureUnit@c+1
  5185                           
  5186                           ;tempSettings.c: 16: LCD_clear();
  5187  1718  160A  158A  2648  160A  118A  	fcall	_LCD_clear
  5188                           
  5189                           ;tempSettings.c: 17: LCD_cursor(0, 0);
  5190  171D  1283               	bcf	3,5	;RP0=0, select bank0
  5191  171E  1303               	bcf	3,6	;RP1=0, select bank0
  5192  171F  01A9               	clrf	LCD_cursor@y
  5193  1720  3000               	movlw	0
  5194  1721  160A  158A  24E9  160A  118A  	fcall	_LCD_cursor
  5195                           
  5196                           ;tempSettings.c: 18: LCD_putch('>');
  5197  1726  303E               	movlw	62
  5198  1727  160A  158A  2540  160A  118A  	fcall	_LCD_putch
  5199                           
  5200                           ;tempSettings.c: 19: LCD_cursor(2, 0);
  5201  172C  1283               	bcf	3,5	;RP0=0, select bank0
  5202  172D  1303               	bcf	3,6	;RP1=0, select bank0
  5203  172E  01A9               	clrf	LCD_cursor@y
  5204  172F  3002               	movlw	2
  5205  1730  160A  158A  24E9  160A  118A  	fcall	_LCD_cursor
  5206                           
  5207                           ;tempSettings.c: 20: LCD_putsc(temperatureMenu[0]);
  5208  1735  0875               	movf	_temperatureMenu,w
  5209  1736  160A  158A  25EE  160A  118A  	fcall	_LCD_putsc
  5210                           
  5211                           ;tempSettings.c: 21: LCD_cursor(2, 1);
  5212  173B  1283               	bcf	3,5	;RP0=0, select bank0
  5213  173C  1303               	bcf	3,6	;RP1=0, select bank0
  5214  173D  01A9               	clrf	LCD_cursor@y
  5215  173E  0AA9               	incf	LCD_cursor@y,f
  5216  173F  3002               	movlw	2
  5217  1740  160A  158A  24E9  160A  118A  	fcall	_LCD_cursor
  5218                           
  5219                           ;tempSettings.c: 22: LCD_putsc(temperatureMenu[1]);
  5220  1745  0876               	movf	_temperatureMenu+1,w
  5221  1746  160A  158A  25EE  160A  118A  	fcall	_LCD_putsc
  5222  174B                     l5602:	
  5223                           ;tempSettings.c: 24: while (1) {
  5224                           
  5225                           
  5226                           ;tempSettings.c: 25: _delay((unsigned long)((100)*(3276800/4000.0)));
  5227  174B  306B               	movlw	107
  5228  174C  1283               	bcf	3,5	;RP0=0, select bank0
  5229  174D  1303               	bcf	3,6	;RP1=0, select bank0
  5230  174E  00B1               	movwf	??_setTemperatureUnit+1
  5231  174F  3062               	movlw	98
  5232  1750  00B0               	movwf	??_setTemperatureUnit
  5233  1751                     u8657:	
  5234  1751  0BB0               	decfsz	??_setTemperatureUnit,f
  5235  1752  2F51               	goto	u8657
  5236  1753  0BB1               	decfsz	??_setTemperatureUnit+1,f
  5237  1754  2F51               	goto	u8657
  5238  1755  0000               	nop
  5239                           
  5240                           ;tempSettings.c: 28: if (RD0 == 1) {
  5241  1756  1283               	bcf	3,5	;RP0=0, select bank0
  5242  1757  1303               	bcf	3,6	;RP1=0, select bank0
  5243  1758  1C08               	btfss	8,0	;volatile
  5244  1759  2FAD               	goto	l5618
  5245                           
  5246                           ;tempSettings.c: 30: LCD_clear();
  5247  175A  160A  158A  2648  160A  118A  	fcall	_LCD_clear
  5248                           
  5249                           ;tempSettings.c: 31: LCD_cursor(0, 0);
  5250  175F  1283               	bcf	3,5	;RP0=0, select bank0
  5251  1760  1303               	bcf	3,6	;RP1=0, select bank0
  5252  1761  01A9               	clrf	LCD_cursor@y
  5253  1762  3000               	movlw	0
  5254  1763  160A  158A  24E9  160A  118A  	fcall	_LCD_cursor
  5255                           
  5256                           ;tempSettings.c: 32: LCD_putch('>');
  5257  1768  303E               	movlw	62
  5258  1769  160A  158A  2540  160A  118A  	fcall	_LCD_putch
  5259                           
  5260                           ;tempSettings.c: 33: LCD_cursor(2, 0);
  5261  176E  1283               	bcf	3,5	;RP0=0, select bank0
  5262  176F  1303               	bcf	3,6	;RP1=0, select bank0
  5263  1770  01A9               	clrf	LCD_cursor@y
  5264  1771  3002               	movlw	2
  5265  1772  160A  158A  24E9  160A  118A  	fcall	_LCD_cursor
  5266                           
  5267                           ;tempSettings.c: 34: LCD_putsc(temperatureMenu[a]);
  5268  1777  1283               	bcf	3,5	;RP0=0, select bank0
  5269  1778  1303               	bcf	3,6	;RP1=0, select bank0
  5270  1779  0836               	movf	setTemperatureUnit@a,w
  5271  177A  3E75               	addlw	(low (_temperatureMenu| 0))& (0+255)
  5272  177B  0084               	movwf	4
  5273  177C  0800               	movf	0,w
  5274  177D  160A  158A  25EE  160A  118A  	fcall	_LCD_putsc
  5275                           
  5276                           ;tempSettings.c: 35: LCD_cursor(2, 1);
  5277  1782  1283               	bcf	3,5	;RP0=0, select bank0
  5278  1783  1303               	bcf	3,6	;RP1=0, select bank0
  5279  1784  01A9               	clrf	LCD_cursor@y
  5280  1785  0AA9               	incf	LCD_cursor@y,f
  5281  1786  3002               	movlw	2
  5282  1787  160A  158A  24E9  160A  118A  	fcall	_LCD_cursor
  5283                           
  5284                           ;tempSettings.c: 36: LCD_putsc(temperatureMenu[b]);
  5285  178C  1283               	bcf	3,5	;RP0=0, select bank0
  5286  178D  1303               	bcf	3,6	;RP1=0, select bank0
  5287  178E  0834               	movf	setTemperatureUnit@b,w
  5288  178F  3E75               	addlw	(low (_temperatureMenu| 0))& (0+255)
  5289  1790  0084               	movwf	4
  5290  1791  0800               	movf	0,w
  5291  1792  160A  158A  25EE  160A  118A  	fcall	_LCD_putsc
  5292                           
  5293                           ;tempSettings.c: 37: c = a;
  5294  1797  1283               	bcf	3,5	;RP0=0, select bank0
  5295  1798  1303               	bcf	3,6	;RP1=0, select bank0
  5296  1799  0837               	movf	setTemperatureUnit@a+1,w
  5297  179A  00B3               	movwf	setTemperatureUnit@c+1
  5298  179B  0836               	movf	setTemperatureUnit@a,w
  5299  179C  00B2               	movwf	setTemperatureUnit@c
  5300                           
  5301                           ;tempSettings.c: 38: if (a > 0) {
  5302  179D  0836               	movf	setTemperatureUnit@a,w
  5303  179E  0437               	iorwf	setTemperatureUnit@a+1,w
  5304  179F  1903               	btfsc	3,2
  5305  17A0  2FAD               	goto	l5618
  5306                           
  5307                           ;tempSettings.c: 39: a--;
  5308  17A1  3001               	movlw	1
  5309  17A2  02B6               	subwf	setTemperatureUnit@a,f
  5310  17A3  3000               	movlw	0
  5311  17A4  1C03               	skipc
  5312  17A5  03B7               	decf	setTemperatureUnit@a+1,f
  5313  17A6  02B7               	subwf	setTemperatureUnit@a+1,f
  5314                           
  5315                           ;tempSettings.c: 40: b--;
  5316  17A7  3001               	movlw	1
  5317  17A8  02B4               	subwf	setTemperatureUnit@b,f
  5318  17A9  3000               	movlw	0
  5319  17AA  1C03               	skipc
  5320  17AB  03B5               	decf	setTemperatureUnit@b+1,f
  5321  17AC  02B5               	subwf	setTemperatureUnit@b+1,f
  5322  17AD                     l5618:	
  5323                           
  5324                           ;tempSettings.c: 41: }
  5325                           ;tempSettings.c: 43: }
  5326                           ;tempSettings.c: 45: if (RD1 == 1) {
  5327  17AD  1C88               	btfss	8,1	;volatile
  5328  17AE  2FF3               	goto	l5634
  5329                           
  5330                           ;tempSettings.c: 47: LCD_clear();
  5331  17AF  160A  158A  2648  160A  118A  	fcall	_LCD_clear
  5332                           
  5333                           ;tempSettings.c: 48: LCD_cursor(2, 0);
  5334  17B4  1283               	bcf	3,5	;RP0=0, select bank0
  5335  17B5  1303               	bcf	3,6	;RP1=0, select bank0
  5336  17B6  01A9               	clrf	LCD_cursor@y
  5337  17B7  3002               	movlw	2
  5338  17B8  160A  158A  24E9  160A  118A  	fcall	_LCD_cursor
  5339                           
  5340                           ;tempSettings.c: 49: LCD_putsc(temperatureMenu[a]);
  5341  17BD  1283               	bcf	3,5	;RP0=0, select bank0
  5342  17BE  1303               	bcf	3,6	;RP1=0, select bank0
  5343  17BF  0836               	movf	setTemperatureUnit@a,w
  5344  17C0  3E75               	addlw	(low (_temperatureMenu| 0))& (0+255)
  5345  17C1  0084               	movwf	4
  5346  17C2  0800               	movf	0,w
  5347  17C3  160A  158A  25EE  160A  118A  	fcall	_LCD_putsc
  5348                           
  5349                           ;tempSettings.c: 50: LCD_cursor(0, 1);
  5350  17C8  1283               	bcf	3,5	;RP0=0, select bank0
  5351  17C9  1303               	bcf	3,6	;RP1=0, select bank0
  5352  17CA  01A9               	clrf	LCD_cursor@y
  5353  17CB  0AA9               	incf	LCD_cursor@y,f
  5354  17CC  3000               	movlw	0
  5355  17CD  160A  158A  24E9  160A  118A  	fcall	_LCD_cursor
  5356                           
  5357                           ;tempSettings.c: 51: LCD_putch('>');
  5358  17D2  303E               	movlw	62
  5359  17D3  160A  158A  2540  160A  118A  	fcall	_LCD_putch
  5360                           
  5361                           ;tempSettings.c: 52: LCD_cursor(2, 1);
  5362  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  5363  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  5364  17DA  01A9               	clrf	LCD_cursor@y
  5365  17DB  0AA9               	incf	LCD_cursor@y,f
  5366  17DC  3002               	movlw	2
  5367  17DD  160A  158A  24E9  160A  118A  	fcall	_LCD_cursor
  5368                           
  5369                           ;tempSettings.c: 53: LCD_putsc(temperatureMenu[b]);
  5370  17E2  1283               	bcf	3,5	;RP0=0, select bank0
  5371  17E3  1303               	bcf	3,6	;RP1=0, select bank0
  5372  17E4  0834               	movf	setTemperatureUnit@b,w
  5373  17E5  3E75               	addlw	(low (_temperatureMenu| 0))& (0+255)
  5374  17E6  0084               	movwf	4
  5375  17E7  0800               	movf	0,w
  5376  17E8  160A  158A  25EE  160A  118A  	fcall	_LCD_putsc
  5377                           
  5378                           ;tempSettings.c: 54: c = b;
  5379  17ED  1283               	bcf	3,5	;RP0=0, select bank0
  5380  17EE  1303               	bcf	3,6	;RP1=0, select bank0
  5381  17EF  0835               	movf	setTemperatureUnit@b+1,w
  5382  17F0  00B3               	movwf	setTemperatureUnit@c+1
  5383  17F1  0834               	movf	setTemperatureUnit@b,w
  5384  17F2  00B2               	movwf	setTemperatureUnit@c
  5385  17F3                     l5634:	
  5386                           ;tempSettings.c: 57: b++;
  5387                           
  5388                           ;tempSettings.c: 56: a++;
  5389                           
  5390                           ;tempSettings.c: 55: if (a < 0) {
  5391                           
  5392                           
  5393                           ;tempSettings.c: 58: }
  5394                           ;tempSettings.c: 59: }
  5395                           ;tempSettings.c: 63: if (RD2 == 1) {
  5396  17F3  1D08               	btfss	8,2	;volatile
  5397  17F4  2FFD               	goto	l529
  5398                           
  5399                           ;tempSettings.c: 64: if (c == 0)
  5400  17F5  0832               	movf	setTemperatureUnit@c,w
  5401  17F6  0433               	iorwf	setTemperatureUnit@c+1,w
  5402  17F7  1D03               	btfss	3,2
  5403  17F8  2FFB               	goto	l5644
  5404                           
  5405                           ;tempSettings.c: 65: return 'C';
  5406  17F9  3043               	movlw	67
  5407  17FA  0008               	return
  5408  17FB                     l5644:	
  5409                           
  5410                           ;tempSettings.c: 66: else
  5411                           ;tempSettings.c: 67: return 'F';
  5412  17FB  3046               	movlw	70
  5413  17FC  0008               	return
  5414  17FD                     l529:	
  5415                           
  5416                           ;tempSettings.c: 69: }
  5417                           ;tempSettings.c: 71: if (RD3 == 1) {
  5418  17FD  1988               	btfsc	8,3	;volatile
  5419  17FE  0008               	return
  5420  17FF  2F4B               	goto	l5602
  5421  1800                     __end_of_setTemperatureUnit:	
  5422                           ;tempSettings.c: 72: break;
  5423                           
  5424                           
  5425                           	psect	text9
  5426  0D7E                     __ptext9:	
  5427 ;; *************** function _setAlarm *****************
  5428 ;; Defined at:
  5429 ;;		line 18 in file "alarmSettings.c"
  5430 ;; Parameters:    Size  Location     Type
  5431 ;;		None
  5432 ;; Auto vars:     Size  Location     Type
  5433 ;;  variable_Val    2   39[BANK0 ] int 
  5434 ;;  pushbutton      2   37[BANK0 ] int 
  5435 ;;  first_Hour_D    1   36[BANK0 ] unsigned char 
  5436 ;;  second_Hour_    1   35[BANK0 ] unsigned char 
  5437 ;;  second_Minut    1   34[BANK0 ] unsigned char 
  5438 ;;  first_Minute    1   33[BANK0 ] unsigned char 
  5439 ;; Return value:  Size  Location     Type
  5440 ;;                  4   19[BANK0 ] long 
  5441 ;; Registers used:
  5442 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5443 ;; Tracked objects:
  5444 ;;		On entry : 0/0
  5445 ;;		On exit  : 0/0
  5446 ;;		Unchanged: 0/0
  5447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5448 ;;      Params:         0       4       0       0       0
  5449 ;;      Locals:         0      10       0       0       0
  5450 ;;      Temps:          0       8       0       0       0
  5451 ;;      Totals:         0      22       0       0       0
  5452 ;;Total ram usage:       22 bytes
  5453 ;; Hardware stack levels used:    1
  5454 ;; Hardware stack levels required when called:    4
  5455 ;; This function calls:
  5456 ;;		_LCD_clear
  5457 ;;		_LCD_cursor
  5458 ;;		_LCD_cursor_off
  5459 ;;		_LCD_cursor_on
  5460 ;;		_LCD_putch
  5461 ;;		_LCD_putsc
  5462 ;;		___lmul
  5463 ;;		___wmul
  5464 ;; This function is called by:
  5465 ;;		_main
  5466 ;; This function uses a non-reentrant model
  5467 ;;
  5468                           
  5469                           
  5470                           ;psect for function _setAlarm
  5471  0D7E                     _setAlarm:	
  5472                           
  5473                           ;alarmSettings.c: 20: unsigned char first_Minute_Digit;
  5474                           ;alarmSettings.c: 21: unsigned char second_Minute_Digit;
  5475                           ;alarmSettings.c: 22: unsigned char first_Hour_Digit;
  5476                           ;alarmSettings.c: 23: unsigned char second_Hour_Digit;
  5477                           ;alarmSettings.c: 24: int pushbutton = 0;
  5478                           
  5479                           ;incstack = 0
  5480                           ; Regs used in _setAlarm: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5481  0D7E  1283               	bcf	3,5	;RP0=0, select bank0
  5482  0D7F  1303               	bcf	3,6	;RP1=0, select bank0
  5483  0D80  01C5               	clrf	setAlarm@pushbutton
  5484  0D81  01C6               	clrf	setAlarm@pushbutton+1
  5485                           
  5486                           ;alarmSettings.c: 25: int variable_Value = -1;
  5487  0D82  30FF               	movlw	255
  5488  0D83  00C7               	movwf	setAlarm@variable_Value
  5489  0D84  30FF               	movlw	255
  5490  0D85  00C8               	movwf	setAlarm@variable_Value+1
  5491                           
  5492                           ;alarmSettings.c: 28: first_Minute_Digit = 0;
  5493  0D86  01C1               	clrf	setAlarm@first_Minute_Digit
  5494                           
  5495                           ;alarmSettings.c: 29: second_Minute_Digit = 0;
  5496  0D87  01C2               	clrf	setAlarm@second_Minute_Digit
  5497                           
  5498                           ;alarmSettings.c: 30: first_Hour_Digit = 0;
  5499  0D88  01C4               	clrf	setAlarm@first_Hour_Digit
  5500                           
  5501                           ;alarmSettings.c: 31: second_Hour_Digit = 0;
  5502  0D89  01C3               	clrf	setAlarm@second_Hour_Digit
  5503                           
  5504                           ;alarmSettings.c: 33: LCD_clear();
  5505  0D8A  160A  158A  2648  120A  158A  	fcall	_LCD_clear
  5506                           
  5507                           ;alarmSettings.c: 34: LCD_putsc("set alarm");
  5508  0D8F  3021               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  5509  0D90  160A  158A  25EE  120A  158A  	fcall	_LCD_putsc
  5510                           
  5511                           ;alarmSettings.c: 35: LCD_cursor(0, 1);
  5512  0D95  1283               	bcf	3,5	;RP0=0, select bank0
  5513  0D96  1303               	bcf	3,6	;RP1=0, select bank0
  5514  0D97  01A9               	clrf	LCD_cursor@y
  5515  0D98  0AA9               	incf	LCD_cursor@y,f
  5516  0D99  3000               	movlw	0
  5517  0D9A  160A  158A  24E9  120A  158A  	fcall	_LCD_cursor
  5518                           
  5519                           ;alarmSettings.c: 36: LCD_putsc("__:__");
  5520  0D9F  3060               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  5521  0DA0  160A  158A  25EE  120A  158A  	fcall	_LCD_putsc
  5522                           
  5523                           ;alarmSettings.c: 37: LCD_cursor(pushbutton, 1);
  5524  0DA5  1283               	bcf	3,5	;RP0=0, select bank0
  5525  0DA6  1303               	bcf	3,6	;RP1=0, select bank0
  5526  0DA7  01A9               	clrf	LCD_cursor@y
  5527  0DA8  0AA9               	incf	LCD_cursor@y,f
  5528  0DA9  0845               	movf	setAlarm@pushbutton,w
  5529  0DAA  160A  158A  24E9  120A  158A  	fcall	_LCD_cursor
  5530                           
  5531                           ;alarmSettings.c: 38: LCD_cursor_on();
  5532  0DAF  120A  158A  2076  120A  158A  	fcall	_LCD_cursor_on
  5533  0DB4                     l5442:	
  5534                           ;alarmSettings.c: 39: while (1) {
  5535                           
  5536                           
  5537                           ;alarmSettings.c: 40: _delay((unsigned long)((220)*(3276800/4000.0)));
  5538  0DB4  30EB               	movlw	235
  5539  0DB5  1283               	bcf	3,5	;RP0=0, select bank0
  5540  0DB6  1303               	bcf	3,6	;RP1=0, select bank0
  5541  0DB7  00B8               	movwf	??_setAlarm+1
  5542  0DB8  300D               	movlw	13
  5543  0DB9  00B7               	movwf	??_setAlarm
  5544  0DBA                     u8667:	
  5545  0DBA  0BB7               	decfsz	??_setAlarm,f
  5546  0DBB  2DBA               	goto	u8667
  5547  0DBC  0BB8               	decfsz	??_setAlarm+1,f
  5548  0DBD  2DBA               	goto	u8667
  5549                           
  5550                           ;alarmSettings.c: 46: if (RD0 == 1) {
  5551  0DBE  1283               	bcf	3,5	;RP0=0, select bank0
  5552  0DBF  1303               	bcf	3,6	;RP1=0, select bank0
  5553  0DC0  1C08               	btfss	8,0	;volatile
  5554  0DC1  2E72               	goto	l5496
  5555                           
  5556                           ;alarmSettings.c: 47: LCD_cursor_off();
  5557  0DC2  160A  118A  2001  120A  158A  	fcall	_LCD_cursor_off
  5558                           
  5559                           ;alarmSettings.c: 48: LCD_cursor(pushbutton, 1);
  5560  0DC7  1283               	bcf	3,5	;RP0=0, select bank0
  5561  0DC8  1303               	bcf	3,6	;RP1=0, select bank0
  5562  0DC9  01A9               	clrf	LCD_cursor@y
  5563  0DCA  0AA9               	incf	LCD_cursor@y,f
  5564  0DCB  0845               	movf	setAlarm@pushbutton,w
  5565  0DCC  160A  158A  24E9  120A  158A  	fcall	_LCD_cursor
  5566                           
  5567                           ;alarmSettings.c: 50: variable_Value++;
  5568  0DD1  3001               	movlw	1
  5569  0DD2  1283               	bcf	3,5	;RP0=0, select bank0
  5570  0DD3  1303               	bcf	3,6	;RP1=0, select bank0
  5571  0DD4  07C7               	addwf	setAlarm@variable_Value,f
  5572  0DD5  1803               	skipnc
  5573  0DD6  0AC8               	incf	setAlarm@variable_Value+1,f
  5574  0DD7  3000               	movlw	0
  5575  0DD8  07C8               	addwf	setAlarm@variable_Value+1,f
  5576                           
  5577                           ;alarmSettings.c: 52: if (pushbutton == 0) {
  5578  0DD9  0845               	movf	setAlarm@pushbutton,w
  5579  0DDA  0446               	iorwf	setAlarm@pushbutton+1,w
  5580  0DDB  1D03               	btfss	3,2
  5581  0DDC  2DF9               	goto	l5460
  5582                           
  5583                           ;alarmSettings.c: 53: if (variable_Value > 2)
  5584  0DDD  0848               	movf	setAlarm@variable_Value+1,w
  5585  0DDE  3A80               	xorlw	128
  5586  0DDF  00FF               	movwf	127
  5587  0DE0  3080               	movlw	128
  5588  0DE1  027F               	subwf	127,w
  5589  0DE2  1D03               	skipz
  5590  0DE3  2DE6               	goto	u7875
  5591  0DE4  3003               	movlw	3
  5592  0DE5  0247               	subwf	setAlarm@variable_Value,w
  5593  0DE6                     u7875:	
  5594  0DE6  1C03               	skipc
  5595  0DE7  2DEC               	goto	l5456
  5596                           
  5597                           ;alarmSettings.c: 54: variable_Value = 0;
  5598  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  5599  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  5600  0DEA  01C7               	clrf	setAlarm@variable_Value
  5601  0DEB  01C8               	clrf	setAlarm@variable_Value+1
  5602  0DEC                     l5456:	
  5603                           
  5604                           ;alarmSettings.c: 55: first_Hour_Digit = variable_Value;
  5605  0DEC  1283               	bcf	3,5	;RP0=0, select bank0
  5606  0DED  1303               	bcf	3,6	;RP1=0, select bank0
  5607  0DEE  0847               	movf	setAlarm@variable_Value,w
  5608  0DEF  00B7               	movwf	??_setAlarm
  5609  0DF0  0837               	movf	??_setAlarm,w
  5610  0DF1  00C4               	movwf	setAlarm@first_Hour_Digit
  5611                           
  5612                           ;alarmSettings.c: 56: LCD_putch('0' + variable_Value);
  5613  0DF2  0847               	movf	setAlarm@variable_Value,w
  5614  0DF3  3E30               	addlw	48
  5615  0DF4  160A  158A  2540  120A  158A  	fcall	_LCD_putch
  5616  0DF9                     l5460:	
  5617                           
  5618                           ;alarmSettings.c: 58: }
  5619                           ;alarmSettings.c: 59: if (pushbutton == 1) {
  5620  0DF9  1283               	bcf	3,5	;RP0=0, select bank0
  5621  0DFA  1303               	bcf	3,6	;RP1=0, select bank0
  5622  0DFB  0345               	decf	setAlarm@pushbutton,w
  5623  0DFC  0446               	iorwf	setAlarm@pushbutton+1,w
  5624  0DFD  1D03               	btfss	3,2
  5625  0DFE  2E2C               	goto	l5476
  5626                           
  5627                           ;alarmSettings.c: 60: if (first_Hour_Digit == 2 && variable_Value > 3)
  5628  0DFF  3002               	movlw	2
  5629  0E00  0644               	xorwf	setAlarm@first_Hour_Digit,w
  5630  0E01  1D03               	btfss	3,2
  5631  0E02  2E0E               	goto	l5468
  5632  0E03  0848               	movf	setAlarm@variable_Value+1,w
  5633  0E04  3A80               	xorlw	128
  5634  0E05  00FF               	movwf	127
  5635  0E06  3080               	movlw	128
  5636  0E07  027F               	subwf	127,w
  5637  0E08  1D03               	skipz
  5638  0E09  2E0C               	goto	u7905
  5639  0E0A  3004               	movlw	4
  5640  0E0B  0247               	subwf	setAlarm@variable_Value,w
  5641  0E0C                     u7905:	
  5642  0E0C  1803               	btfsc	3,0
  5643  0E0D  2E1B               	goto	l5470
  5644  0E0E                     l5468:	
  5645                           ;alarmSettings.c: 61: variable_Value = 0;
  5646                           
  5647                           
  5648                           ;alarmSettings.c: 62: else if (variable_Value > 9)
  5649  0E0E  1283               	bcf	3,5	;RP0=0, select bank0
  5650  0E0F  1303               	bcf	3,6	;RP1=0, select bank0
  5651  0E10  0848               	movf	setAlarm@variable_Value+1,w
  5652  0E11  3A80               	xorlw	128
  5653  0E12  00FF               	movwf	127
  5654  0E13  3080               	movlw	128
  5655  0E14  027F               	subwf	127,w
  5656  0E15  1D03               	skipz
  5657  0E16  2E19               	goto	u7915
  5658  0E17  300A               	movlw	10
  5659  0E18  0247               	subwf	setAlarm@variable_Value,w
  5660  0E19                     u7915:	
  5661  0E19  1C03               	skipc
  5662  0E1A  2E1F               	goto	l5472
  5663  0E1B                     l5470:	
  5664                           
  5665                           ;alarmSettings.c: 63: variable_Value = 0;
  5666  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  5667  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  5668  0E1D  01C7               	clrf	setAlarm@variable_Value
  5669  0E1E  01C8               	clrf	setAlarm@variable_Value+1
  5670  0E1F                     l5472:	
  5671                           
  5672                           ;alarmSettings.c: 64: second_Hour_Digit = variable_Value;
  5673  0E1F  1283               	bcf	3,5	;RP0=0, select bank0
  5674  0E20  1303               	bcf	3,6	;RP1=0, select bank0
  5675  0E21  0847               	movf	setAlarm@variable_Value,w
  5676  0E22  00B7               	movwf	??_setAlarm
  5677  0E23  0837               	movf	??_setAlarm,w
  5678  0E24  00C3               	movwf	setAlarm@second_Hour_Digit
  5679                           
  5680                           ;alarmSettings.c: 65: LCD_putch('0' + variable_Value);
  5681  0E25  0847               	movf	setAlarm@variable_Value,w
  5682  0E26  3E30               	addlw	48
  5683  0E27  160A  158A  2540  120A  158A  	fcall	_LCD_putch
  5684  0E2C                     l5476:	
  5685                           
  5686                           ;alarmSettings.c: 66: }
  5687                           ;alarmSettings.c: 67: if (pushbutton == 3) {
  5688  0E2C  3003               	movlw	3
  5689  0E2D  1283               	bcf	3,5	;RP0=0, select bank0
  5690  0E2E  1303               	bcf	3,6	;RP1=0, select bank0
  5691  0E2F  0645               	xorwf	setAlarm@pushbutton,w
  5692  0E30  0446               	iorwf	setAlarm@pushbutton+1,w
  5693  0E31  1D03               	btfss	3,2
  5694  0E32  2E4F               	goto	l5486
  5695                           
  5696                           ;alarmSettings.c: 68: if (variable_Value > 5)
  5697  0E33  0848               	movf	setAlarm@variable_Value+1,w
  5698  0E34  3A80               	xorlw	128
  5699  0E35  00FF               	movwf	127
  5700  0E36  3080               	movlw	128
  5701  0E37  027F               	subwf	127,w
  5702  0E38  1D03               	skipz
  5703  0E39  2E3C               	goto	u7935
  5704  0E3A  3006               	movlw	6
  5705  0E3B  0247               	subwf	setAlarm@variable_Value,w
  5706  0E3C                     u7935:	
  5707  0E3C  1C03               	skipc
  5708  0E3D  2E42               	goto	l5482
  5709                           
  5710                           ;alarmSettings.c: 69: variable_Value = 0;
  5711  0E3E  1283               	bcf	3,5	;RP0=0, select bank0
  5712  0E3F  1303               	bcf	3,6	;RP1=0, select bank0
  5713  0E40  01C7               	clrf	setAlarm@variable_Value
  5714  0E41  01C8               	clrf	setAlarm@variable_Value+1
  5715  0E42                     l5482:	
  5716                           
  5717                           ;alarmSettings.c: 70: first_Minute_Digit = variable_Value;
  5718  0E42  1283               	bcf	3,5	;RP0=0, select bank0
  5719  0E43  1303               	bcf	3,6	;RP1=0, select bank0
  5720  0E44  0847               	movf	setAlarm@variable_Value,w
  5721  0E45  00B7               	movwf	??_setAlarm
  5722  0E46  0837               	movf	??_setAlarm,w
  5723  0E47  00C1               	movwf	setAlarm@first_Minute_Digit
  5724                           
  5725                           ;alarmSettings.c: 71: LCD_putch('0' + variable_Value);
  5726  0E48  0847               	movf	setAlarm@variable_Value,w
  5727  0E49  3E30               	addlw	48
  5728  0E4A  160A  158A  2540  120A  158A  	fcall	_LCD_putch
  5729  0E4F                     l5486:	
  5730                           
  5731                           ;alarmSettings.c: 72: }
  5732                           ;alarmSettings.c: 73: if (pushbutton == 4) {
  5733  0E4F  3004               	movlw	4
  5734  0E50  1283               	bcf	3,5	;RP0=0, select bank0
  5735  0E51  1303               	bcf	3,6	;RP1=0, select bank0
  5736  0E52  0645               	xorwf	setAlarm@pushbutton,w
  5737  0E53  0446               	iorwf	setAlarm@pushbutton+1,w
  5738  0E54  1D03               	btfss	3,2
  5739  0E55  2E72               	goto	l5496
  5740                           
  5741                           ;alarmSettings.c: 74: if (variable_Value > 9)
  5742  0E56  0848               	movf	setAlarm@variable_Value+1,w
  5743  0E57  3A80               	xorlw	128
  5744  0E58  00FF               	movwf	127
  5745  0E59  3080               	movlw	128
  5746  0E5A  027F               	subwf	127,w
  5747  0E5B  1D03               	skipz
  5748  0E5C  2E5F               	goto	u7955
  5749  0E5D  300A               	movlw	10
  5750  0E5E  0247               	subwf	setAlarm@variable_Value,w
  5751  0E5F                     u7955:	
  5752  0E5F  1C03               	skipc
  5753  0E60  2E65               	goto	l5492
  5754                           
  5755                           ;alarmSettings.c: 75: variable_Value = 0;
  5756  0E61  1283               	bcf	3,5	;RP0=0, select bank0
  5757  0E62  1303               	bcf	3,6	;RP1=0, select bank0
  5758  0E63  01C7               	clrf	setAlarm@variable_Value
  5759  0E64  01C8               	clrf	setAlarm@variable_Value+1
  5760  0E65                     l5492:	
  5761                           
  5762                           ;alarmSettings.c: 76: second_Minute_Digit = variable_Value;
  5763  0E65  1283               	bcf	3,5	;RP0=0, select bank0
  5764  0E66  1303               	bcf	3,6	;RP1=0, select bank0
  5765  0E67  0847               	movf	setAlarm@variable_Value,w
  5766  0E68  00B7               	movwf	??_setAlarm
  5767  0E69  0837               	movf	??_setAlarm,w
  5768  0E6A  00C2               	movwf	setAlarm@second_Minute_Digit
  5769                           
  5770                           ;alarmSettings.c: 77: LCD_putch('0' + variable_Value);
  5771  0E6B  0847               	movf	setAlarm@variable_Value,w
  5772  0E6C  3E30               	addlw	48
  5773  0E6D  160A  158A  2540  120A  158A  	fcall	_LCD_putch
  5774  0E72                     l5496:	
  5775                           
  5776                           ;alarmSettings.c: 80: }
  5777                           ;alarmSettings.c: 82: }
  5778                           ;alarmSettings.c: 89: if (RD1 == 1) {
  5779  0E72  1283               	bcf	3,5	;RP0=0, select bank0
  5780  0E73  1303               	bcf	3,6	;RP1=0, select bank0
  5781  0E74  1C88               	btfss	8,1	;volatile
  5782  0E75  2EFD               	goto	l5542
  5783                           
  5784                           ;alarmSettings.c: 90: LCD_cursor(pushbutton, 1);
  5785  0E76  01A9               	clrf	LCD_cursor@y
  5786  0E77  0AA9               	incf	LCD_cursor@y,f
  5787  0E78  0845               	movf	setAlarm@pushbutton,w
  5788  0E79  160A  158A  24E9  120A  158A  	fcall	_LCD_cursor
  5789                           
  5790                           ;alarmSettings.c: 91: LCD_cursor_off();
  5791  0E7E  160A  118A  2001  120A  158A  	fcall	_LCD_cursor_off
  5792                           
  5793                           ;alarmSettings.c: 92: variable_Value--;
  5794  0E83  30FF               	movlw	255
  5795  0E84  1283               	bcf	3,5	;RP0=0, select bank0
  5796  0E85  1303               	bcf	3,6	;RP1=0, select bank0
  5797  0E86  07C7               	addwf	setAlarm@variable_Value,f
  5798  0E87  1803               	skipnc
  5799  0E88  0AC8               	incf	setAlarm@variable_Value+1,f
  5800  0E89  30FF               	movlw	255
  5801  0E8A  07C8               	addwf	setAlarm@variable_Value+1,f
  5802                           
  5803                           ;alarmSettings.c: 94: if (pushbutton == 0) {
  5804  0E8B  0845               	movf	setAlarm@pushbutton,w
  5805  0E8C  0446               	iorwf	setAlarm@pushbutton+1,w
  5806  0E8D  1D03               	btfss	3,2
  5807  0E8E  2EA0               	goto	l5510
  5808                           
  5809                           ;alarmSettings.c: 95: if (variable_Value < 0)
  5810  0E8F  1FC8               	btfss	setAlarm@variable_Value+1,7
  5811  0E90  2E95               	goto	l460
  5812                           
  5813                           ;alarmSettings.c: 96: variable_Value = 2;
  5814  0E91  3002               	movlw	2
  5815  0E92  00C7               	movwf	setAlarm@variable_Value
  5816  0E93  3000               	movlw	0
  5817  0E94  00C8               	movwf	setAlarm@variable_Value+1
  5818  0E95                     l460:	
  5819                           
  5820                           ;alarmSettings.c: 97: first_Hour_Digit = variable_Value;
  5821  0E95  0847               	movf	setAlarm@variable_Value,w
  5822  0E96  00B7               	movwf	??_setAlarm
  5823  0E97  0837               	movf	??_setAlarm,w
  5824  0E98  00C4               	movwf	setAlarm@first_Hour_Digit
  5825                           
  5826                           ;alarmSettings.c: 98: LCD_putch('0' + variable_Value);
  5827  0E99  0847               	movf	setAlarm@variable_Value,w
  5828  0E9A  3E30               	addlw	48
  5829  0E9B  160A  158A  2540  120A  158A  	fcall	_LCD_putch
  5830  0EA0                     l5510:	
  5831                           
  5832                           ;alarmSettings.c: 99: }
  5833                           ;alarmSettings.c: 100: if (pushbutton == 1) {
  5834  0EA0  1283               	bcf	3,5	;RP0=0, select bank0
  5835  0EA1  1303               	bcf	3,6	;RP1=0, select bank0
  5836  0EA2  0345               	decf	setAlarm@pushbutton,w
  5837  0EA3  0446               	iorwf	setAlarm@pushbutton+1,w
  5838  0EA4  1D03               	btfss	3,2
  5839  0EA5  2EBE               	goto	l5522
  5840                           
  5841                           ;alarmSettings.c: 101: if (first_Hour_Digit == 2 && variable_Value < 0)
  5842  0EA6  3002               	movlw	2
  5843  0EA7  0644               	xorwf	setAlarm@first_Hour_Digit,w
  5844  0EA8  1903               	btfsc	3,2
  5845  0EA9  1FC8               	btfss	setAlarm@variable_Value+1,7
  5846  0EAA  2EAD               	goto	l462
  5847                           
  5848                           ;alarmSettings.c: 102: variable_Value = 3;
  5849  0EAB  3003               	movlw	3
  5850  0EAC  2EB0               	goto	L3
  5851  0EAD                     l462:	
  5852                           
  5853                           ;alarmSettings.c: 103: else if (variable_Value < 0)
  5854  0EAD  1FC8               	btfss	setAlarm@variable_Value+1,7
  5855  0EAE  2EB3               	goto	l463
  5856                           
  5857                           ;alarmSettings.c: 104: variable_Value = 9;
  5858  0EAF  3009               	movlw	9
  5859  0EB0                     L3:	
  5860  0EB0  00C7               	movwf	setAlarm@variable_Value
  5861  0EB1  3000               	movlw	0
  5862  0EB2  00C8               	movwf	setAlarm@variable_Value+1
  5863  0EB3                     l463:	
  5864                           
  5865                           ;alarmSettings.c: 105: second_Hour_Digit = variable_Value;
  5866  0EB3  0847               	movf	setAlarm@variable_Value,w
  5867  0EB4  00B7               	movwf	??_setAlarm
  5868  0EB5  0837               	movf	??_setAlarm,w
  5869  0EB6  00C3               	movwf	setAlarm@second_Hour_Digit
  5870                           
  5871                           ;alarmSettings.c: 106: LCD_putch('0' + variable_Value);
  5872  0EB7  0847               	movf	setAlarm@variable_Value,w
  5873  0EB8  3E30               	addlw	48
  5874  0EB9  160A  158A  2540  120A  158A  	fcall	_LCD_putch
  5875  0EBE                     l5522:	
  5876                           
  5877                           ;alarmSettings.c: 107: }
  5878                           ;alarmSettings.c: 108: if (pushbutton == 3) {
  5879  0EBE  3003               	movlw	3
  5880  0EBF  1283               	bcf	3,5	;RP0=0, select bank0
  5881  0EC0  1303               	bcf	3,6	;RP1=0, select bank0
  5882  0EC1  0645               	xorwf	setAlarm@pushbutton,w
  5883  0EC2  0446               	iorwf	setAlarm@pushbutton+1,w
  5884  0EC3  1D03               	btfss	3,2
  5885  0EC4  2ED6               	goto	l5530
  5886                           
  5887                           ;alarmSettings.c: 109: if (variable_Value < 0)
  5888  0EC5  1FC8               	btfss	setAlarm@variable_Value+1,7
  5889  0EC6  2ECB               	goto	l466
  5890                           
  5891                           ;alarmSettings.c: 110: variable_Value = 5;
  5892  0EC7  3005               	movlw	5
  5893  0EC8  00C7               	movwf	setAlarm@variable_Value
  5894  0EC9  3000               	movlw	0
  5895  0ECA  00C8               	movwf	setAlarm@variable_Value+1
  5896  0ECB                     l466:	
  5897                           
  5898                           ;alarmSettings.c: 111: first_Minute_Digit = variable_Value;
  5899  0ECB  0847               	movf	setAlarm@variable_Value,w
  5900  0ECC  00B7               	movwf	??_setAlarm
  5901  0ECD  0837               	movf	??_setAlarm,w
  5902  0ECE  00C1               	movwf	setAlarm@first_Minute_Digit
  5903                           
  5904                           ;alarmSettings.c: 112: LCD_putch('0' + variable_Value);
  5905  0ECF  0847               	movf	setAlarm@variable_Value,w
  5906  0ED0  3E30               	addlw	48
  5907  0ED1  160A  158A  2540  120A  158A  	fcall	_LCD_putch
  5908  0ED6                     l5530:	
  5909                           
  5910                           ;alarmSettings.c: 113: }
  5911                           ;alarmSettings.c: 114: if (pushbutton == 4) {
  5912  0ED6  3004               	movlw	4
  5913  0ED7  1283               	bcf	3,5	;RP0=0, select bank0
  5914  0ED8  1303               	bcf	3,6	;RP1=0, select bank0
  5915  0ED9  0645               	xorwf	setAlarm@pushbutton,w
  5916  0EDA  0446               	iorwf	setAlarm@pushbutton+1,w
  5917  0EDB  1D03               	btfss	3,2
  5918  0EDC  2EFD               	goto	l5542
  5919                           
  5920                           ;alarmSettings.c: 115: if (variable_Value < 0)
  5921  0EDD  1FC8               	btfss	setAlarm@variable_Value+1,7
  5922  0EDE  2EE3               	goto	l468
  5923                           
  5924                           ;alarmSettings.c: 116: variable_Value = 9;
  5925  0EDF  3009               	movlw	9
  5926  0EE0  00C7               	movwf	setAlarm@variable_Value
  5927  0EE1  3000               	movlw	0
  5928  0EE2  00C8               	movwf	setAlarm@variable_Value+1
  5929  0EE3                     l468:	
  5930                           
  5931                           ;alarmSettings.c: 117: second_Minute_Digit = variable_Value;
  5932  0EE3  0847               	movf	setAlarm@variable_Value,w
  5933  0EE4  00B7               	movwf	??_setAlarm
  5934  0EE5  0837               	movf	??_setAlarm,w
  5935  0EE6  00C2               	movwf	setAlarm@second_Minute_Digit
  5936                           
  5937                           ;alarmSettings.c: 118: LCD_putch('0' + variable_Value);
  5938  0EE7  0847               	movf	setAlarm@variable_Value,w
  5939  0EE8  3E30               	addlw	48
  5940  0EE9  160A  158A  2540  120A  158A  	fcall	_LCD_putch
  5941                           
  5942                           ;alarmSettings.c: 119: LCD_cursor(pushbutton, 1);
  5943  0EEE  1283               	bcf	3,5	;RP0=0, select bank0
  5944  0EEF  1303               	bcf	3,6	;RP1=0, select bank0
  5945  0EF0  01A9               	clrf	LCD_cursor@y
  5946  0EF1  0AA9               	incf	LCD_cursor@y,f
  5947  0EF2  0845               	movf	setAlarm@pushbutton,w
  5948  0EF3  160A  158A  24E9  120A  158A  	fcall	_LCD_cursor
  5949                           
  5950                           ;alarmSettings.c: 120: LCD_cursor_on();
  5951  0EF8  120A  158A  2076  120A  158A  	fcall	_LCD_cursor_on
  5952  0EFD                     l5542:	
  5953                           
  5954                           ;alarmSettings.c: 121: }
  5955                           ;alarmSettings.c: 123: }
  5956                           ;alarmSettings.c: 130: if (RD2 == 1) {
  5957  0EFD  1283               	bcf	3,5	;RP0=0, select bank0
  5958  0EFE  1303               	bcf	3,6	;RP1=0, select bank0
  5959  0EFF  1D08               	btfss	8,2	;volatile
  5960  0F00  2F39               	goto	l5560
  5961                           
  5962                           ;alarmSettings.c: 132: if (variable_Value>-1) {
  5963  0F01  1BC8               	btfsc	setAlarm@variable_Value+1,7
  5964  0F02  2F0D               	goto	l5548
  5965                           
  5966                           ;alarmSettings.c: 133: pushbutton++;
  5967  0F03  3001               	movlw	1
  5968  0F04  07C5               	addwf	setAlarm@pushbutton,f
  5969  0F05  1803               	skipnc
  5970  0F06  0AC6               	incf	setAlarm@pushbutton+1,f
  5971  0F07  3000               	movlw	0
  5972  0F08  07C6               	addwf	setAlarm@pushbutton+1,f
  5973                           
  5974                           ;alarmSettings.c: 134: variable_Value = -1;
  5975  0F09  30FF               	movlw	255
  5976  0F0A  00C7               	movwf	setAlarm@variable_Value
  5977  0F0B  30FF               	movlw	255
  5978  0F0C  00C8               	movwf	setAlarm@variable_Value+1
  5979  0F0D                     l5548:	
  5980                           
  5981                           ;alarmSettings.c: 135: }
  5982                           ;alarmSettings.c: 136: if (pushbutton == 2)
  5983  0F0D  3002               	movlw	2
  5984  0F0E  0645               	xorwf	setAlarm@pushbutton,w
  5985  0F0F  0446               	iorwf	setAlarm@pushbutton+1,w
  5986  0F10  1D03               	btfss	3,2
  5987  0F11  2F19               	goto	l5552
  5988                           
  5989                           ;alarmSettings.c: 137: pushbutton++;
  5990  0F12  3001               	movlw	1
  5991  0F13  07C5               	addwf	setAlarm@pushbutton,f
  5992  0F14  1803               	skipnc
  5993  0F15  0AC6               	incf	setAlarm@pushbutton+1,f
  5994  0F16  3000               	movlw	0
  5995  0F17  07C6               	addwf	setAlarm@pushbutton+1,f
  5996  0F18  2F2A               	goto	l5556
  5997  0F19                     l5552:	
  5998                           
  5999                           ;alarmSettings.c: 138: else if (pushbutton >= 5)
  6000  0F19  0846               	movf	setAlarm@pushbutton+1,w
  6001  0F1A  3A80               	xorlw	128
  6002  0F1B  00FF               	movwf	127
  6003  0F1C  3080               	movlw	128
  6004  0F1D  027F               	subwf	127,w
  6005  0F1E  1D03               	skipz
  6006  0F1F  2F22               	goto	u8105
  6007  0F20  3005               	movlw	5
  6008  0F21  0245               	subwf	setAlarm@pushbutton,w
  6009  0F22                     u8105:	
  6010  0F22  1C03               	skipc
  6011  0F23  2F2A               	goto	l5556
  6012                           
  6013                           ;alarmSettings.c: 139: pushbutton = 5;
  6014  0F24  3005               	movlw	5
  6015  0F25  1283               	bcf	3,5	;RP0=0, select bank0
  6016  0F26  1303               	bcf	3,6	;RP1=0, select bank0
  6017  0F27  00C5               	movwf	setAlarm@pushbutton
  6018  0F28  3000               	movlw	0
  6019  0F29  00C6               	movwf	setAlarm@pushbutton+1
  6020  0F2A                     l5556:	
  6021                           
  6022                           ;alarmSettings.c: 140: LCD_cursor(pushbutton, 1);
  6023  0F2A  1283               	bcf	3,5	;RP0=0, select bank0
  6024  0F2B  1303               	bcf	3,6	;RP1=0, select bank0
  6025  0F2C  01A9               	clrf	LCD_cursor@y
  6026  0F2D  0AA9               	incf	LCD_cursor@y,f
  6027  0F2E  0845               	movf	setAlarm@pushbutton,w
  6028  0F2F  160A  158A  24E9  120A  158A  	fcall	_LCD_cursor
  6029                           
  6030                           ;alarmSettings.c: 141: LCD_cursor_on();
  6031  0F34  120A  158A  2076  120A  158A  	fcall	_LCD_cursor_on
  6032  0F39                     l5560:	
  6033                           
  6034                           ;alarmSettings.c: 143: }
  6035                           ;alarmSettings.c: 149: if (RD3 == 1) {
  6036  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  6037  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  6038  0F3B  1D88               	btfss	8,3	;volatile
  6039  0F3C  2F6D               	goto	l5576
  6040                           
  6041                           ;alarmSettings.c: 150: pushbutton--;
  6042  0F3D  30FF               	movlw	255
  6043  0F3E  07C5               	addwf	setAlarm@pushbutton,f
  6044  0F3F  1803               	skipnc
  6045  0F40  0AC6               	incf	setAlarm@pushbutton+1,f
  6046  0F41  30FF               	movlw	255
  6047  0F42  07C6               	addwf	setAlarm@pushbutton+1,f
  6048                           
  6049                           ;alarmSettings.c: 152: if (pushbutton == 2)
  6050  0F43  3002               	movlw	2
  6051  0F44  0645               	xorwf	setAlarm@pushbutton,w
  6052  0F45  0446               	iorwf	setAlarm@pushbutton+1,w
  6053  0F46  1D03               	btfss	3,2
  6054  0F47  2F4F               	goto	l5568
  6055                           
  6056                           ;alarmSettings.c: 153: pushbutton--;
  6057  0F48  30FF               	movlw	255
  6058  0F49  07C5               	addwf	setAlarm@pushbutton,f
  6059  0F4A  1803               	skipnc
  6060  0F4B  0AC6               	incf	setAlarm@pushbutton+1,f
  6061  0F4C  30FF               	movlw	255
  6062  0F4D  07C6               	addwf	setAlarm@pushbutton+1,f
  6063  0F4E  2F5E               	goto	l5572
  6064  0F4F                     l5568:	
  6065                           
  6066                           ;alarmSettings.c: 154: else if (pushbutton <= 0)
  6067  0F4F  0846               	movf	setAlarm@pushbutton+1,w
  6068  0F50  3A80               	xorlw	128
  6069  0F51  00FF               	movwf	127
  6070  0F52  3080               	movlw	128
  6071  0F53  027F               	subwf	127,w
  6072  0F54  1D03               	skipz
  6073  0F55  2F58               	goto	u8135
  6074  0F56  3001               	movlw	1
  6075  0F57  0245               	subwf	setAlarm@pushbutton,w
  6076  0F58                     u8135:	
  6077  0F58  1803               	skipnc
  6078  0F59  2F5E               	goto	l5572
  6079                           
  6080                           ;alarmSettings.c: 155: pushbutton = 0;
  6081  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  6082  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  6083  0F5C  01C5               	clrf	setAlarm@pushbutton
  6084  0F5D  01C6               	clrf	setAlarm@pushbutton+1
  6085  0F5E                     l5572:	
  6086                           
  6087                           ;alarmSettings.c: 156: LCD_cursor(pushbutton, 1);
  6088  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  6089  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  6090  0F60  01A9               	clrf	LCD_cursor@y
  6091  0F61  0AA9               	incf	LCD_cursor@y,f
  6092  0F62  0845               	movf	setAlarm@pushbutton,w
  6093  0F63  160A  158A  24E9  120A  158A  	fcall	_LCD_cursor
  6094                           
  6095                           ;alarmSettings.c: 157: LCD_cursor_on();
  6096  0F68  120A  158A  2076  120A  158A  	fcall	_LCD_cursor_on
  6097  0F6D                     l5576:	
  6098                           
  6099                           ;alarmSettings.c: 159: }
  6100                           ;alarmSettings.c: 160: if (pushbutton >= 5) {
  6101  0F6D  1283               	bcf	3,5	;RP0=0, select bank0
  6102  0F6E  1303               	bcf	3,6	;RP1=0, select bank0
  6103  0F6F  0846               	movf	setAlarm@pushbutton+1,w
  6104  0F70  3A80               	xorlw	128
  6105  0F71  00FF               	movwf	127
  6106  0F72  3080               	movlw	128
  6107  0F73  027F               	subwf	127,w
  6108  0F74  1D03               	skipz
  6109  0F75  2F78               	goto	u8145
  6110  0F76  3005               	movlw	5
  6111  0F77  0245               	subwf	setAlarm@pushbutton,w
  6112  0F78                     u8145:	
  6113  0F78  1C03               	skipc
  6114  0F79  2DB4               	goto	l5442
  6115                           
  6116                           ;alarmSettings.c: 161: LCD_cursor_off();
  6117  0F7A  160A  118A  2001  120A  158A  	fcall	_LCD_cursor_off
  6118                           
  6119                           ;alarmSettings.c: 162: return (long) (first_Hour_Digit * 10 + second_Hour_Digit)
  6120                           ;alarmSettings.c: 163: *3600 + (first_Minute_Digit * 10 + second_Minute_Digit)*60;
  6121  0F7F  1283               	bcf	3,5	;RP0=0, select bank0
  6122  0F80  1303               	bcf	3,6	;RP1=0, select bank0
  6123  0F81  0841               	movf	setAlarm@first_Minute_Digit,w
  6124  0F82  00B7               	movwf	??_setAlarm
  6125  0F83  01B8               	clrf	??_setAlarm+1
  6126  0F84  0837               	movf	??_setAlarm,w
  6127  0F85  00A0               	movwf	___wmul@multiplier
  6128  0F86  0838               	movf	??_setAlarm+1,w
  6129  0F87  00A1               	movwf	___wmul@multiplier+1
  6130  0F88  300A               	movlw	10
  6131  0F89  00A2               	movwf	___wmul@multiplicand
  6132  0F8A  3000               	movlw	0
  6133  0F8B  00A3               	movwf	___wmul@multiplicand+1
  6134  0F8C  160A  158A  257E  120A  158A  	fcall	___wmul
  6135  0F91  1283               	bcf	3,5	;RP0=0, select bank0
  6136  0F92  1303               	bcf	3,6	;RP1=0, select bank0
  6137  0F93  0842               	movf	setAlarm@second_Minute_Digit,w
  6138  0F94  0720               	addwf	?___wmul,w
  6139  0F95  00BF               	movwf	_setAlarm$1075
  6140  0F96  3000               	movlw	0
  6141  0F97  1803               	skipnc
  6142  0F98  3001               	movlw	1
  6143  0F99  0721               	addwf	?___wmul+1,w
  6144  0F9A  00C0               	movwf	_setAlarm$1075+1
  6145                           
  6146                           ;alarmSettings.c: 162: return (long) (first_Hour_Digit * 10 + second_Hour_Digit)
  6147                           ;alarmSettings.c: 163: *3600 + (first_Minute_Digit * 10 + second_Minute_Digit)*60;
  6148  0F9B  0840               	movf	_setAlarm$1075+1,w
  6149  0F9C  00A1               	movwf	___wmul@multiplier+1
  6150  0F9D  083F               	movf	_setAlarm$1075,w
  6151  0F9E  00A0               	movwf	___wmul@multiplier
  6152  0F9F  303C               	movlw	60
  6153  0FA0  00A2               	movwf	___wmul@multiplicand
  6154  0FA1  3000               	movlw	0
  6155  0FA2  00A3               	movwf	___wmul@multiplicand+1
  6156  0FA3  160A  158A  257E  120A  158A  	fcall	___wmul
  6157  0FA8  1283               	bcf	3,5	;RP0=0, select bank0
  6158  0FA9  1303               	bcf	3,6	;RP1=0, select bank0
  6159  0FAA  0820               	movf	?___wmul,w
  6160  0FAB  00B7               	movwf	??_setAlarm
  6161  0FAC  0821               	movf	?___wmul+1,w
  6162  0FAD  00B8               	movwf	??_setAlarm+1
  6163  0FAE  3000               	movlw	0
  6164  0FAF  1BB8               	btfsc	??_setAlarm+1,7
  6165  0FB0  30FF               	movlw	255
  6166  0FB1  00B9               	movwf	??_setAlarm+2
  6167  0FB2  00BA               	movwf	??_setAlarm+3
  6168  0FB3  300A               	movlw	10
  6169  0FB4  00A2               	movwf	___wmul@multiplicand
  6170  0FB5  3000               	movlw	0
  6171  0FB6  00A3               	movwf	___wmul@multiplicand+1
  6172  0FB7  0844               	movf	setAlarm@first_Hour_Digit,w
  6173  0FB8  00BB               	movwf	??_setAlarm+4
  6174  0FB9  01BC               	clrf	??_setAlarm+5
  6175  0FBA  083B               	movf	??_setAlarm+4,w
  6176  0FBB  00A0               	movwf	___wmul@multiplier
  6177  0FBC  083C               	movf	??_setAlarm+5,w
  6178  0FBD  00A1               	movwf	___wmul@multiplier+1
  6179  0FBE  160A  158A  257E  120A  158A  	fcall	___wmul
  6180  0FC3  1283               	bcf	3,5	;RP0=0, select bank0
  6181  0FC4  1303               	bcf	3,6	;RP1=0, select bank0
  6182  0FC5  0843               	movf	setAlarm@second_Hour_Digit,w
  6183  0FC6  0720               	addwf	?___wmul,w
  6184  0FC7  00BD               	movwf	??_setAlarm+6
  6185  0FC8  3000               	movlw	0
  6186  0FC9  1803               	skipnc
  6187  0FCA  3001               	movlw	1
  6188  0FCB  0721               	addwf	?___wmul+1,w
  6189  0FCC  00BE               	movwf	??_setAlarm+7
  6190  0FCD  083D               	movf	??_setAlarm+6,w
  6191  0FCE  00A6               	movwf	___lmul@multiplier
  6192  0FCF  083E               	movf	??_setAlarm+7,w
  6193  0FD0  00A7               	movwf	___lmul@multiplier+1
  6194  0FD1  3000               	movlw	0
  6195  0FD2  1BA7               	btfsc	___lmul@multiplier+1,7
  6196  0FD3  30FF               	movlw	255
  6197  0FD4  00A8               	movwf	___lmul@multiplier+2
  6198  0FD5  00A9               	movwf	___lmul@multiplier+3
  6199  0FD6  3000               	movlw	0
  6200  0FD7  00AD               	movwf	___lmul@multiplicand+3
  6201  0FD8  3000               	movlw	0
  6202  0FD9  00AC               	movwf	___lmul@multiplicand+2
  6203  0FDA  300E               	movlw	14
  6204  0FDB  00AB               	movwf	___lmul@multiplicand+1
  6205  0FDC  3010               	movlw	16
  6206  0FDD  00AA               	movwf	___lmul@multiplicand
  6207  0FDE  160A  158A  26C0  120A  158A  	fcall	___lmul
  6208  0FE3  1283               	bcf	3,5	;RP0=0, select bank0
  6209  0FE4  1303               	bcf	3,6	;RP1=0, select bank0
  6210  0FE5  0826               	movf	?___lmul,w
  6211  0FE6  07B7               	addwf	??_setAlarm,f
  6212  0FE7  0827               	movf	?___lmul+1,w
  6213  0FE8  1803               	skipnc
  6214  0FE9  0F27               	incfsz	?___lmul+1,w
  6215  0FEA  2FEC               	goto	u8150
  6216  0FEB  2FED               	goto	u8151
  6217  0FEC                     u8150:	
  6218  0FEC  07B8               	addwf	??_setAlarm+1,f
  6219  0FED                     u8151:	
  6220  0FED  0828               	movf	?___lmul+2,w
  6221  0FEE  1803               	skipnc
  6222  0FEF  0F28               	incfsz	?___lmul+2,w
  6223  0FF0  2FF2               	goto	u8152
  6224  0FF1  2FF3               	goto	u8153
  6225  0FF2                     u8152:	
  6226  0FF2  07B9               	addwf	??_setAlarm+2,f
  6227  0FF3                     u8153:	
  6228  0FF3  0829               	movf	?___lmul+3,w
  6229  0FF4  1803               	skipnc
  6230  0FF5  0A29               	incf	?___lmul+3,w
  6231  0FF6  07BA               	addwf	??_setAlarm+3,f
  6232  0FF7  083A               	movf	??_setAlarm+3,w
  6233  0FF8  00B6               	movwf	?_setAlarm+3
  6234  0FF9  0839               	movf	??_setAlarm+2,w
  6235  0FFA  00B5               	movwf	?_setAlarm+2
  6236  0FFB  0838               	movf	??_setAlarm+1,w
  6237  0FFC  00B4               	movwf	?_setAlarm+1
  6238  0FFD  0837               	movf	??_setAlarm,w
  6239  0FFE  00B3               	movwf	?_setAlarm
  6240  0FFF  0008               	return
  6241  1000                     __end_of_setAlarm:	
  6242                           
  6243                           	psect	text10
  6244  1D7E                     __ptext10:	
  6245 ;; *************** function ___wmul *****************
  6246 ;; Defined at:
  6247 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  6248 ;; Parameters:    Size  Location     Type
  6249 ;;  multiplier      2    0[BANK0 ] unsigned int 
  6250 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  6251 ;; Auto vars:     Size  Location     Type
  6252 ;;  product         2    4[BANK0 ] unsigned int 
  6253 ;; Return value:  Size  Location     Type
  6254 ;;                  2    0[BANK0 ] unsigned int 
  6255 ;; Registers used:
  6256 ;;		wreg, status,2, status,0
  6257 ;; Tracked objects:
  6258 ;;		On entry : 0/0
  6259 ;;		On exit  : 0/0
  6260 ;;		Unchanged: 0/0
  6261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6262 ;;      Params:         0       4       0       0       0
  6263 ;;      Locals:         0       2       0       0       0
  6264 ;;      Temps:          0       0       0       0       0
  6265 ;;      Totals:         0       6       0       0       0
  6266 ;;Total ram usage:        6 bytes
  6267 ;; Hardware stack levels used:    1
  6268 ;; Hardware stack levels required when called:    1
  6269 ;; This function calls:
  6270 ;;		Nothing
  6271 ;; This function is called by:
  6272 ;;		_setTimeDisplayer
  6273 ;;		_setAlarm
  6274 ;;		_updateTimeDisplayed
  6275 ;;		_updateSetAlarm
  6276 ;; This function uses a non-reentrant model
  6277 ;;
  6278                           
  6279                           
  6280                           ;psect for function ___wmul
  6281  1D7E                     ___wmul:	
  6282                           
  6283                           ;incstack = 0
  6284                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6285  1D7E  1283               	bcf	3,5	;RP0=0, select bank0
  6286  1D7F  1303               	bcf	3,6	;RP1=0, select bank0
  6287  1D80  01A4               	clrf	___wmul@product
  6288  1D81  01A5               	clrf	___wmul@product+1
  6289  1D82                     l5004:	
  6290  1D82  1C20               	btfss	___wmul@multiplier,0
  6291  1D83  2D8A               	goto	l858
  6292  1D84  0822               	movf	___wmul@multiplicand,w
  6293  1D85  07A4               	addwf	___wmul@product,f
  6294  1D86  1803               	skipnc
  6295  1D87  0AA5               	incf	___wmul@product+1,f
  6296  1D88  0823               	movf	___wmul@multiplicand+1,w
  6297  1D89  07A5               	addwf	___wmul@product+1,f
  6298  1D8A                     l858:	
  6299  1D8A  3001               	movlw	1
  6300  1D8B                     u7135:	
  6301  1D8B  1003               	clrc
  6302  1D8C  0DA2               	rlf	___wmul@multiplicand,f
  6303  1D8D  0DA3               	rlf	___wmul@multiplicand+1,f
  6304  1D8E  3EFF               	addlw	-1
  6305  1D8F  1D03               	skipz
  6306  1D90  2D8B               	goto	u7135
  6307  1D91  3001               	movlw	1
  6308  1D92                     u7145:	
  6309  1D92  1003               	clrc
  6310  1D93  0CA1               	rrf	___wmul@multiplier+1,f
  6311  1D94  0CA0               	rrf	___wmul@multiplier,f
  6312  1D95  3EFF               	addlw	-1
  6313  1D96  1D03               	skipz
  6314  1D97  2D92               	goto	u7145
  6315  1D98  0820               	movf	___wmul@multiplier,w
  6316  1D99  0421               	iorwf	___wmul@multiplier+1,w
  6317  1D9A  1D03               	btfss	3,2
  6318  1D9B  2D82               	goto	l5004
  6319  1D9C  0825               	movf	___wmul@product+1,w
  6320  1D9D  00A1               	movwf	?___wmul+1
  6321  1D9E  0824               	movf	___wmul@product,w
  6322  1D9F  00A0               	movwf	?___wmul
  6323  1DA0  0008               	return
  6324  1DA1                     __end_of___wmul:	
  6325                           
  6326                           	psect	text11
  6327  1EC0                     __ptext11:	
  6328 ;; *************** function ___lmul *****************
  6329 ;; Defined at:
  6330 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul32.c"
  6331 ;; Parameters:    Size  Location     Type
  6332 ;;  multiplier      4    6[BANK0 ] unsigned long 
  6333 ;;  multiplicand    4   10[BANK0 ] unsigned long 
  6334 ;; Auto vars:     Size  Location     Type
  6335 ;;  product         4   15[BANK0 ] unsigned long 
  6336 ;; Return value:  Size  Location     Type
  6337 ;;                  4    6[BANK0 ] unsigned long 
  6338 ;; Registers used:
  6339 ;;		wreg, status,2, status,0
  6340 ;; Tracked objects:
  6341 ;;		On entry : 0/0
  6342 ;;		On exit  : 0/0
  6343 ;;		Unchanged: 0/0
  6344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6345 ;;      Params:         0       8       0       0       0
  6346 ;;      Locals:         0       4       0       0       0
  6347 ;;      Temps:          0       1       0       0       0
  6348 ;;      Totals:         0      13       0       0       0
  6349 ;;Total ram usage:       13 bytes
  6350 ;; Hardware stack levels used:    1
  6351 ;; Hardware stack levels required when called:    1
  6352 ;; This function calls:
  6353 ;;		Nothing
  6354 ;; This function is called by:
  6355 ;;		_setTimeDisplayer
  6356 ;;		_setAlarm
  6357 ;; This function uses a non-reentrant model
  6358 ;;
  6359                           
  6360                           
  6361                           ;psect for function ___lmul
  6362  1EC0                     ___lmul:	
  6363                           
  6364                           ;incstack = 0
  6365                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  6366  1EC0  3000               	movlw	0
  6367  1EC1  1283               	bcf	3,5	;RP0=0, select bank0
  6368  1EC2  1303               	bcf	3,6	;RP1=0, select bank0
  6369  1EC3  00B2               	movwf	___lmul@product+3
  6370  1EC4  3000               	movlw	0
  6371  1EC5  00B1               	movwf	___lmul@product+2
  6372  1EC6  3000               	movlw	0
  6373  1EC7  00B0               	movwf	___lmul@product+1
  6374  1EC8  3000               	movlw	0
  6375  1EC9  00AF               	movwf	___lmul@product
  6376  1ECA                     l3494:	
  6377  1ECA  1C26               	btfss	___lmul@multiplier,0
  6378  1ECB  2EE0               	goto	l3498
  6379  1ECC  082A               	movf	___lmul@multiplicand,w
  6380  1ECD  07AF               	addwf	___lmul@product,f
  6381  1ECE  082B               	movf	___lmul@multiplicand+1,w
  6382  1ECF  1103               	clrz
  6383  1ED0  1803               	skipnc
  6384  1ED1  3E01               	addlw	1
  6385  1ED2  1D03               	btfss	3,2
  6386  1ED3  07B0               	addwf	___lmul@product+1,f
  6387  1ED4  082C               	movf	___lmul@multiplicand+2,w
  6388  1ED5  1103               	clrz
  6389  1ED6  1803               	skipnc
  6390  1ED7  3E01               	addlw	1
  6391  1ED8  1D03               	btfss	3,2
  6392  1ED9  07B1               	addwf	___lmul@product+2,f
  6393  1EDA  082D               	movf	___lmul@multiplicand+3,w
  6394  1EDB  1103               	clrz
  6395  1EDC  1803               	skipnc
  6396  1EDD  3E01               	addlw	1
  6397  1EDE  1D03               	btfss	3,2
  6398  1EDF  07B2               	addwf	___lmul@product+3,f
  6399  1EE0                     l3498:	
  6400  1EE0  3001               	movlw	1
  6401  1EE1  00AE               	movwf	??___lmul
  6402  1EE2                     u4365:	
  6403  1EE2  1003               	clrc
  6404  1EE3  0DAA               	rlf	___lmul@multiplicand,f
  6405  1EE4  0DAB               	rlf	___lmul@multiplicand+1,f
  6406  1EE5  0DAC               	rlf	___lmul@multiplicand+2,f
  6407  1EE6  0DAD               	rlf	___lmul@multiplicand+3,f
  6408  1EE7  0BAE               	decfsz	??___lmul,f
  6409  1EE8  2EE2               	goto	u4365
  6410  1EE9  3001               	movlw	1
  6411  1EEA                     u4375:	
  6412  1EEA  1003               	clrc
  6413  1EEB  0CA9               	rrf	___lmul@multiplier+3,f
  6414  1EEC  0CA8               	rrf	___lmul@multiplier+2,f
  6415  1EED  0CA7               	rrf	___lmul@multiplier+1,f
  6416  1EEE  0CA6               	rrf	___lmul@multiplier,f
  6417  1EEF  3EFF               	addlw	-1
  6418  1EF0  1D03               	skipz
  6419  1EF1  2EEA               	goto	u4375
  6420  1EF2  0829               	movf	___lmul@multiplier+3,w
  6421  1EF3  0428               	iorwf	___lmul@multiplier+2,w
  6422  1EF4  0427               	iorwf	___lmul@multiplier+1,w
  6423  1EF5  0426               	iorwf	___lmul@multiplier,w
  6424  1EF6  1D03               	skipz
  6425  1EF7  2ECA               	goto	l3494
  6426  1EF8  0832               	movf	___lmul@product+3,w
  6427  1EF9  00A9               	movwf	?___lmul+3
  6428  1EFA  0831               	movf	___lmul@product+2,w
  6429  1EFB  00A8               	movwf	?___lmul+2
  6430  1EFC  0830               	movf	___lmul@product+1,w
  6431  1EFD  00A7               	movwf	?___lmul+1
  6432  1EFE  082F               	movf	___lmul@product,w
  6433  1EFF  00A6               	movwf	?___lmul
  6434  1F00  0008               	return
  6435  1F01                     __end_of___lmul:	
  6436                           
  6437                           	psect	text12
  6438  0876                     __ptext12:	
  6439 ;; *************** function _LCD_cursor_on *****************
  6440 ;; Defined at:
  6441 ;;		line 179 in file "LCDdrive.c"
  6442 ;; Parameters:    Size  Location     Type
  6443 ;;		None
  6444 ;; Auto vars:     Size  Location     Type
  6445 ;;		None
  6446 ;; Return value:  Size  Location     Type
  6447 ;;                  1    wreg      void 
  6448 ;; Registers used:
  6449 ;;		wreg, status,2, status,0, pclath, cstack
  6450 ;; Tracked objects:
  6451 ;;		On entry : 0/0
  6452 ;;		On exit  : 0/0
  6453 ;;		Unchanged: 0/0
  6454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6455 ;;      Params:         0       0       0       0       0
  6456 ;;      Locals:         0       0       0       0       0
  6457 ;;      Temps:          0       0       0       0       0
  6458 ;;      Totals:         0       0       0       0       0
  6459 ;;Total ram usage:        0 bytes
  6460 ;; Hardware stack levels used:    1
  6461 ;; Hardware stack levels required when called:    2
  6462 ;; This function calls:
  6463 ;;		_LCD_write
  6464 ;; This function is called by:
  6465 ;;		_setTimeDisplayer
  6466 ;;		_setAlarm
  6467 ;; This function uses a non-reentrant model
  6468 ;;
  6469                           
  6470                           
  6471                           ;psect for function _LCD_cursor_on
  6472  0876                     _LCD_cursor_on:	
  6473                           
  6474                           ;LCDdrive.c: 181: LCD_write(0x0f, 0);
  6475                           
  6476                           ;incstack = 0
  6477                           ; Regs used in _LCD_cursor_on: [wreg+status,2+status,0+pclath+cstack]
  6478  0876  1283               	bcf	3,5	;RP0=0, select bank0
  6479  0877  1303               	bcf	3,6	;RP1=0, select bank0
  6480  0878  01A0               	clrf	LCD_write@rs
  6481  0879  300F               	movlw	15
  6482  087A  160A  118A  22C9   	fcall	_LCD_write
  6483  087D  0008               	return
  6484  087E                     __end_of_LCD_cursor_on:	
  6485                           
  6486                           	psect	text13
  6487  1001                     __ptext13:	
  6488 ;; *************** function _LCD_cursor_off *****************
  6489 ;; Defined at:
  6490 ;;		line 184 in file "LCDdrive.c"
  6491 ;; Parameters:    Size  Location     Type
  6492 ;;		None
  6493 ;; Auto vars:     Size  Location     Type
  6494 ;;		None
  6495 ;; Return value:  Size  Location     Type
  6496 ;;                  1    wreg      void 
  6497 ;; Registers used:
  6498 ;;		wreg, status,2, status,0, pclath, cstack
  6499 ;; Tracked objects:
  6500 ;;		On entry : 0/0
  6501 ;;		On exit  : 0/0
  6502 ;;		Unchanged: 0/0
  6503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6504 ;;      Params:         0       0       0       0       0
  6505 ;;      Locals:         0       0       0       0       0
  6506 ;;      Temps:          0       0       0       0       0
  6507 ;;      Totals:         0       0       0       0       0
  6508 ;;Total ram usage:        0 bytes
  6509 ;; Hardware stack levels used:    1
  6510 ;; Hardware stack levels required when called:    2
  6511 ;; This function calls:
  6512 ;;		_LCD_write
  6513 ;; This function is called by:
  6514 ;;		_setTimeDisplayer
  6515 ;;		_setAlarm
  6516 ;; This function uses a non-reentrant model
  6517 ;;
  6518                           
  6519                           
  6520                           ;psect for function _LCD_cursor_off
  6521  1001                     _LCD_cursor_off:	
  6522                           
  6523                           ;LCDdrive.c: 186: LCD_write (0x0c, 0);
  6524                           
  6525                           ;incstack = 0
  6526                           ; Regs used in _LCD_cursor_off: [wreg+status,2+status,0+pclath+cstack]
  6527  1001  1283               	bcf	3,5	;RP0=0, select bank0
  6528  1002  1303               	bcf	3,6	;RP1=0, select bank0
  6529  1003  01A0               	clrf	LCD_write@rs
  6530  1004  300C               	movlw	12
  6531  1005  160A  118A  22C9   	fcall	_LCD_write
  6532  1008  0008               	return
  6533  1009                     __end_of_LCD_cursor_off:	
  6534                           
  6535                           	psect	text14
  6536  0A8F                     __ptext14:	
  6537 ;; *************** function _screenConfigurationMode *****************
  6538 ;; Defined at:
  6539 ;;		line 17 in file "screenConfigMode.c"
  6540 ;; Parameters:    Size  Location     Type
  6541 ;;		None
  6542 ;; Auto vars:     Size  Location     Type
  6543 ;;  a               2   24[BANK0 ] unsigned int 
  6544 ;;  b               2   22[BANK0 ] unsigned int 
  6545 ;;  c               2   20[BANK0 ] unsigned int 
  6546 ;; Return value:  Size  Location     Type
  6547 ;;                  2   16[BANK0 ] unsigned int 
  6548 ;; Registers used:
  6549 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6550 ;; Tracked objects:
  6551 ;;		On entry : 0/0
  6552 ;;		On exit  : 0/0
  6553 ;;		Unchanged: 0/0
  6554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6555 ;;      Params:         0       2       0       0       0
  6556 ;;      Locals:         0       6       0       0       0
  6557 ;;      Temps:          0       2       0       0       0
  6558 ;;      Totals:         0      10       0       0       0
  6559 ;;Total ram usage:       10 bytes
  6560 ;; Hardware stack levels used:    1
  6561 ;; Hardware stack levels required when called:    4
  6562 ;; This function calls:
  6563 ;;		_LCD_clear
  6564 ;;		_LCD_cursor
  6565 ;;		_LCD_putch
  6566 ;;		_LCD_putsc
  6567 ;; This function is called by:
  6568 ;;		_main
  6569 ;; This function uses a non-reentrant model
  6570 ;;
  6571                           
  6572                           
  6573                           ;psect for function _screenConfigurationMode
  6574  0A8F                     _screenConfigurationMode:	
  6575                           
  6576                           ;screenConfigMode.c: 18: unsigned int a = 0;
  6577                           
  6578                           ;incstack = 0
  6579                           ; Regs used in _screenConfigurationMode: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6580  0A8F  1283               	bcf	3,5	;RP0=0, select bank0
  6581  0A90  1303               	bcf	3,6	;RP1=0, select bank0
  6582  0A91  01B8               	clrf	screenConfigurationMode@a
  6583  0A92  01B9               	clrf	screenConfigurationMode@a+1
  6584                           
  6585                           ;screenConfigMode.c: 19: unsigned int b = 1;
  6586  0A93  3001               	movlw	1
  6587  0A94  00B6               	movwf	screenConfigurationMode@b
  6588  0A95  3000               	movlw	0
  6589  0A96  00B7               	movwf	screenConfigurationMode@b+1
  6590                           
  6591                           ;screenConfigMode.c: 20: unsigned int c = 0;
  6592  0A97  01B4               	clrf	screenConfigurationMode@c
  6593  0A98  01B5               	clrf	screenConfigurationMode@c+1
  6594                           
  6595                           ;screenConfigMode.c: 21: LCD_clear();
  6596  0A99  160A  158A  2648  120A  158A  	fcall	_LCD_clear
  6597                           
  6598                           ;screenConfigMode.c: 22: LCD_cursor(0, 0);
  6599  0A9E  1283               	bcf	3,5	;RP0=0, select bank0
  6600  0A9F  1303               	bcf	3,6	;RP1=0, select bank0
  6601  0AA0  01A9               	clrf	LCD_cursor@y
  6602  0AA1  3000               	movlw	0
  6603  0AA2  160A  158A  24E9  120A  158A  	fcall	_LCD_cursor
  6604                           
  6605                           ;screenConfigMode.c: 23: LCD_putch('>');
  6606  0AA7  303E               	movlw	62
  6607  0AA8  160A  158A  2540  120A  158A  	fcall	_LCD_putch
  6608                           
  6609                           ;screenConfigMode.c: 24: LCD_cursor(2, 0);
  6610  0AAD  1283               	bcf	3,5	;RP0=0, select bank0
  6611  0AAE  1303               	bcf	3,6	;RP1=0, select bank0
  6612  0AAF  01A9               	clrf	LCD_cursor@y
  6613  0AB0  3002               	movlw	2
  6614  0AB1  160A  158A  24E9  120A  158A  	fcall	_LCD_cursor
  6615                           
  6616                           ;screenConfigMode.c: 25: LCD_putsc(configuration_Options[0]);
  6617  0AB6  1683               	bsf	3,5	;RP0=1, select bank1
  6618  0AB7  1303               	bcf	3,6	;RP1=0, select bank1
  6619  0AB8  084E               	movf	_configuration_Options^(0+128),w
  6620  0AB9  160A  158A  25EE  120A  158A  	fcall	_LCD_putsc
  6621                           
  6622                           ;screenConfigMode.c: 26: LCD_cursor(2, 1);
  6623  0ABE  1283               	bcf	3,5	;RP0=0, select bank0
  6624  0ABF  1303               	bcf	3,6	;RP1=0, select bank0
  6625  0AC0  01A9               	clrf	LCD_cursor@y
  6626  0AC1  0AA9               	incf	LCD_cursor@y,f
  6627  0AC2  3002               	movlw	2
  6628  0AC3  160A  158A  24E9  120A  158A  	fcall	_LCD_cursor
  6629                           
  6630                           ;screenConfigMode.c: 27: LCD_putsc(configuration_Options[1]);
  6631  0AC8  1683               	bsf	3,5	;RP0=1, select bank1
  6632  0AC9  1303               	bcf	3,6	;RP1=0, select bank1
  6633  0ACA  084F               	movf	(low ((_configuration_Options| 0+1)))^(0+128),w
  6634  0ACB  160A  158A  25EE  120A  158A  	fcall	_LCD_putsc
  6635  0AD0                     l5208:	
  6636                           ;screenConfigMode.c: 29: while (1) {
  6637                           
  6638                           
  6639                           ;screenConfigMode.c: 30: _delay((unsigned long)((100)*(3276800/4000.0)));
  6640  0AD0  306B               	movlw	107
  6641  0AD1  1283               	bcf	3,5	;RP0=0, select bank0
  6642  0AD2  1303               	bcf	3,6	;RP1=0, select bank0
  6643  0AD3  00B3               	movwf	??_screenConfigurationMode+1
  6644  0AD4  3062               	movlw	98
  6645  0AD5  00B2               	movwf	??_screenConfigurationMode
  6646  0AD6                     u8677:	
  6647  0AD6  0BB2               	decfsz	??_screenConfigurationMode,f
  6648  0AD7  2AD6               	goto	u8677
  6649  0AD8  0BB3               	decfsz	??_screenConfigurationMode+1,f
  6650  0AD9  2AD6               	goto	u8677
  6651  0ADA  0000               	nop
  6652                           
  6653                           ;screenConfigMode.c: 31: if (RD0 == 1) {
  6654  0ADB  1283               	bcf	3,5	;RP0=0, select bank0
  6655  0ADC  1303               	bcf	3,6	;RP1=0, select bank0
  6656  0ADD  1C08               	btfss	8,0	;volatile
  6657  0ADE  2B34               	goto	l5224
  6658                           
  6659                           ;screenConfigMode.c: 33: LCD_clear();
  6660  0ADF  160A  158A  2648  120A  158A  	fcall	_LCD_clear
  6661                           
  6662                           ;screenConfigMode.c: 34: LCD_cursor(0, 0);
  6663  0AE4  1283               	bcf	3,5	;RP0=0, select bank0
  6664  0AE5  1303               	bcf	3,6	;RP1=0, select bank0
  6665  0AE6  01A9               	clrf	LCD_cursor@y
  6666  0AE7  3000               	movlw	0
  6667  0AE8  160A  158A  24E9  120A  158A  	fcall	_LCD_cursor
  6668                           
  6669                           ;screenConfigMode.c: 35: LCD_putch('>');
  6670  0AED  303E               	movlw	62
  6671  0AEE  160A  158A  2540  120A  158A  	fcall	_LCD_putch
  6672                           
  6673                           ;screenConfigMode.c: 36: LCD_cursor(2, 0);
  6674  0AF3  1283               	bcf	3,5	;RP0=0, select bank0
  6675  0AF4  1303               	bcf	3,6	;RP1=0, select bank0
  6676  0AF5  01A9               	clrf	LCD_cursor@y
  6677  0AF6  3002               	movlw	2
  6678  0AF7  160A  158A  24E9  120A  158A  	fcall	_LCD_cursor
  6679                           
  6680                           ;screenConfigMode.c: 37: LCD_putsc(configuration_Options[a]);
  6681  0AFC  1283               	bcf	3,5	;RP0=0, select bank0
  6682  0AFD  1303               	bcf	3,6	;RP1=0, select bank0
  6683  0AFE  0838               	movf	screenConfigurationMode@a,w
  6684  0AFF  3ECE               	addlw	(low (_configuration_Options| 0))& (0+255)
  6685  0B00  0084               	movwf	4
  6686  0B01  1383               	bcf	3,7	;select IRP bank1
  6687  0B02  0800               	movf	0,w
  6688  0B03  160A  158A  25EE  120A  158A  	fcall	_LCD_putsc
  6689                           
  6690                           ;screenConfigMode.c: 38: LCD_cursor(2, 1);
  6691  0B08  1283               	bcf	3,5	;RP0=0, select bank0
  6692  0B09  1303               	bcf	3,6	;RP1=0, select bank0
  6693  0B0A  01A9               	clrf	LCD_cursor@y
  6694  0B0B  0AA9               	incf	LCD_cursor@y,f
  6695  0B0C  3002               	movlw	2
  6696  0B0D  160A  158A  24E9  120A  158A  	fcall	_LCD_cursor
  6697                           
  6698                           ;screenConfigMode.c: 39: LCD_putsc(configuration_Options[b]);
  6699  0B12  1283               	bcf	3,5	;RP0=0, select bank0
  6700  0B13  1303               	bcf	3,6	;RP1=0, select bank0
  6701  0B14  0836               	movf	screenConfigurationMode@b,w
  6702  0B15  3ECE               	addlw	(low (_configuration_Options| 0))& (0+255)
  6703  0B16  0084               	movwf	4
  6704  0B17  1383               	bcf	3,7	;select IRP bank1
  6705  0B18  0800               	movf	0,w
  6706  0B19  160A  158A  25EE  120A  158A  	fcall	_LCD_putsc
  6707                           
  6708                           ;screenConfigMode.c: 40: c = a;
  6709  0B1E  1283               	bcf	3,5	;RP0=0, select bank0
  6710  0B1F  1303               	bcf	3,6	;RP1=0, select bank0
  6711  0B20  0839               	movf	screenConfigurationMode@a+1,w
  6712  0B21  00B5               	movwf	screenConfigurationMode@c+1
  6713  0B22  0838               	movf	screenConfigurationMode@a,w
  6714  0B23  00B4               	movwf	screenConfigurationMode@c
  6715                           
  6716                           ;screenConfigMode.c: 41: if (a > 0) {
  6717  0B24  0838               	movf	screenConfigurationMode@a,w
  6718  0B25  0439               	iorwf	screenConfigurationMode@a+1,w
  6719  0B26  1903               	btfsc	3,2
  6720  0B27  2B34               	goto	l5224
  6721                           
  6722                           ;screenConfigMode.c: 42: a--;
  6723  0B28  3001               	movlw	1
  6724  0B29  02B8               	subwf	screenConfigurationMode@a,f
  6725  0B2A  3000               	movlw	0
  6726  0B2B  1C03               	skipc
  6727  0B2C  03B9               	decf	screenConfigurationMode@a+1,f
  6728  0B2D  02B9               	subwf	screenConfigurationMode@a+1,f
  6729                           
  6730                           ;screenConfigMode.c: 43: b--;
  6731  0B2E  3001               	movlw	1
  6732  0B2F  02B6               	subwf	screenConfigurationMode@b,f
  6733  0B30  3000               	movlw	0
  6734  0B31  1C03               	skipc
  6735  0B32  03B7               	decf	screenConfigurationMode@b+1,f
  6736  0B33  02B7               	subwf	screenConfigurationMode@b+1,f
  6737  0B34                     l5224:	
  6738                           
  6739                           ;screenConfigMode.c: 44: }
  6740                           ;screenConfigMode.c: 46: }
  6741                           ;screenConfigMode.c: 48: if (RD1 == 1) {
  6742  0B34  1C88               	btfss	8,1	;volatile
  6743  0B35  2B8C               	goto	l5242
  6744                           
  6745                           ;screenConfigMode.c: 50: LCD_clear();
  6746  0B36  160A  158A  2648  120A  158A  	fcall	_LCD_clear
  6747                           
  6748                           ;screenConfigMode.c: 51: LCD_cursor(2, 0);
  6749  0B3B  1283               	bcf	3,5	;RP0=0, select bank0
  6750  0B3C  1303               	bcf	3,6	;RP1=0, select bank0
  6751  0B3D  01A9               	clrf	LCD_cursor@y
  6752  0B3E  3002               	movlw	2
  6753  0B3F  160A  158A  24E9  120A  158A  	fcall	_LCD_cursor
  6754                           
  6755                           ;screenConfigMode.c: 52: LCD_putsc(configuration_Options[a]);
  6756  0B44  1283               	bcf	3,5	;RP0=0, select bank0
  6757  0B45  1303               	bcf	3,6	;RP1=0, select bank0
  6758  0B46  0838               	movf	screenConfigurationMode@a,w
  6759  0B47  3ECE               	addlw	(low (_configuration_Options| 0))& (0+255)
  6760  0B48  0084               	movwf	4
  6761  0B49  1383               	bcf	3,7	;select IRP bank1
  6762  0B4A  0800               	movf	0,w
  6763  0B4B  160A  158A  25EE  120A  158A  	fcall	_LCD_putsc
  6764                           
  6765                           ;screenConfigMode.c: 53: LCD_cursor(0, 1);
  6766  0B50  1283               	bcf	3,5	;RP0=0, select bank0
  6767  0B51  1303               	bcf	3,6	;RP1=0, select bank0
  6768  0B52  01A9               	clrf	LCD_cursor@y
  6769  0B53  0AA9               	incf	LCD_cursor@y,f
  6770  0B54  3000               	movlw	0
  6771  0B55  160A  158A  24E9  120A  158A  	fcall	_LCD_cursor
  6772                           
  6773                           ;screenConfigMode.c: 54: LCD_putch('>');
  6774  0B5A  303E               	movlw	62
  6775  0B5B  160A  158A  2540  120A  158A  	fcall	_LCD_putch
  6776                           
  6777                           ;screenConfigMode.c: 55: LCD_cursor(2, 1);
  6778  0B60  1283               	bcf	3,5	;RP0=0, select bank0
  6779  0B61  1303               	bcf	3,6	;RP1=0, select bank0
  6780  0B62  01A9               	clrf	LCD_cursor@y
  6781  0B63  0AA9               	incf	LCD_cursor@y,f
  6782  0B64  3002               	movlw	2
  6783  0B65  160A  158A  24E9  120A  158A  	fcall	_LCD_cursor
  6784                           
  6785                           ;screenConfigMode.c: 56: LCD_putsc(configuration_Options[b]);
  6786  0B6A  1283               	bcf	3,5	;RP0=0, select bank0
  6787  0B6B  1303               	bcf	3,6	;RP1=0, select bank0
  6788  0B6C  0836               	movf	screenConfigurationMode@b,w
  6789  0B6D  3ECE               	addlw	(low (_configuration_Options| 0))& (0+255)
  6790  0B6E  0084               	movwf	4
  6791  0B6F  1383               	bcf	3,7	;select IRP bank1
  6792  0B70  0800               	movf	0,w
  6793  0B71  160A  158A  25EE  120A  158A  	fcall	_LCD_putsc
  6794                           
  6795                           ;screenConfigMode.c: 57: c = b;
  6796  0B76  1283               	bcf	3,5	;RP0=0, select bank0
  6797  0B77  1303               	bcf	3,6	;RP1=0, select bank0
  6798  0B78  0837               	movf	screenConfigurationMode@b+1,w
  6799  0B79  00B5               	movwf	screenConfigurationMode@c+1
  6800  0B7A  0836               	movf	screenConfigurationMode@b,w
  6801  0B7B  00B4               	movwf	screenConfigurationMode@c
  6802                           
  6803                           ;screenConfigMode.c: 58: if (a < 1) {
  6804  0B7C  0838               	movf	screenConfigurationMode@a,w
  6805  0B7D  0439               	iorwf	screenConfigurationMode@a+1,w
  6806  0B7E  1D03               	btfss	3,2
  6807  0B7F  2B8C               	goto	l5242
  6808                           
  6809                           ;screenConfigMode.c: 59: a++;
  6810  0B80  3001               	movlw	1
  6811  0B81  07B8               	addwf	screenConfigurationMode@a,f
  6812  0B82  1803               	skipnc
  6813  0B83  0AB9               	incf	screenConfigurationMode@a+1,f
  6814  0B84  3000               	movlw	0
  6815  0B85  07B9               	addwf	screenConfigurationMode@a+1,f
  6816                           
  6817                           ;screenConfigMode.c: 60: b++;
  6818  0B86  3001               	movlw	1
  6819  0B87  07B6               	addwf	screenConfigurationMode@b,f
  6820  0B88  1803               	skipnc
  6821  0B89  0AB7               	incf	screenConfigurationMode@b+1,f
  6822  0B8A  3000               	movlw	0
  6823  0B8B  07B7               	addwf	screenConfigurationMode@b+1,f
  6824  0B8C                     l5242:	
  6825                           
  6826                           ;screenConfigMode.c: 61: }
  6827                           ;screenConfigMode.c: 62: }
  6828                           ;screenConfigMode.c: 63: if (RD2 == 1) {
  6829  0B8C  1D08               	btfss	8,2	;volatile
  6830  0B8D  2B93               	goto	l312
  6831                           
  6832                           ;screenConfigMode.c: 64: return c;
  6833  0B8E  0835               	movf	screenConfigurationMode@c+1,w
  6834  0B8F  00B1               	movwf	?_screenConfigurationMode+1
  6835  0B90  0834               	movf	screenConfigurationMode@c,w
  6836  0B91  00B0               	movwf	?_screenConfigurationMode
  6837  0B92  0008               	return
  6838  0B93                     l312:	
  6839                           
  6840                           ;screenConfigMode.c: 65: }
  6841                           ;screenConfigMode.c: 66: if (RD3 == 1) {
  6842  0B93  1D88               	btfss	8,3	;volatile
  6843  0B94  2AD0               	goto	l5208
  6844                           
  6845                           ;screenConfigMode.c: 67: return 3;
  6846  0B95  3003               	movlw	3
  6847  0B96  00B0               	movwf	?_screenConfigurationMode
  6848  0B97  3000               	movlw	0
  6849  0B98  00B1               	movwf	?_screenConfigurationMode+1
  6850  0B99  0008               	return
  6851  0B9A                     __end_of_screenConfigurationMode:	
  6852                           
  6853                           	psect	text15
  6854  1CE9                     __ptext15:	
  6855 ;; *************** function _LCD_cursor *****************
  6856 ;; Defined at:
  6857 ;;		line 163 in file "LCDdrive.c"
  6858 ;; Parameters:    Size  Location     Type
  6859 ;;  x               1    wreg     unsigned char 
  6860 ;;  y               1    9[BANK0 ] unsigned char 
  6861 ;; Auto vars:     Size  Location     Type
  6862 ;;  x               1   11[BANK0 ] unsigned char 
  6863 ;; Return value:  Size  Location     Type
  6864 ;;                  1    wreg      void 
  6865 ;; Registers used:
  6866 ;;		wreg, status,2, status,0, pclath, cstack
  6867 ;; Tracked objects:
  6868 ;;		On entry : 0/0
  6869 ;;		On exit  : 0/0
  6870 ;;		Unchanged: 0/0
  6871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6872 ;;      Params:         0       1       0       0       0
  6873 ;;      Locals:         0       1       0       0       0
  6874 ;;      Temps:          0       1       0       0       0
  6875 ;;      Totals:         0       3       0       0       0
  6876 ;;Total ram usage:        3 bytes
  6877 ;; Hardware stack levels used:    1
  6878 ;; Hardware stack levels required when called:    2
  6879 ;; This function calls:
  6880 ;;		_LCD_write
  6881 ;; This function is called by:
  6882 ;;		_screenConfigurationMode
  6883 ;;		_setTimeDisplayer
  6884 ;;		_setAlarm
  6885 ;;		_setTemperatureUnit
  6886 ;;		_main
  6887 ;; This function uses a non-reentrant model
  6888 ;;
  6889                           
  6890                           
  6891                           ;psect for function _LCD_cursor
  6892  1CE9                     _LCD_cursor:	
  6893                           
  6894                           ;incstack = 0
  6895                           ; Regs used in _LCD_cursor: [wreg+status,2+status,0+pclath+cstack]
  6896                           ;LCD_cursor@x stored from wreg
  6897  1CE9  1283               	bcf	3,5	;RP0=0, select bank0
  6898  1CEA  1303               	bcf	3,6	;RP1=0, select bank0
  6899  1CEB  00AB               	movwf	LCD_cursor@x
  6900                           
  6901                           ;LCDdrive.c: 165: if ( y==0 )
  6902  1CEC  0829               	movf	LCD_cursor@y,w
  6903  1CED  1D03               	btfss	3,2
  6904  1CEE  2CF1               	goto	l4888
  6905                           
  6906                           ;LCDdrive.c: 166: {
  6907                           ;LCDdrive.c: 168: y=0x80 ;
  6908  1CEF  3080               	movlw	128
  6909  1CF0  2CF2               	goto	L4
  6910  1CF1                     l4888:	
  6911                           ;LCDdrive.c: 169: }
  6912                           
  6913                           
  6914                           ;LCDdrive.c: 170: else
  6915                           ;LCDdrive.c: 171: {
  6916                           ;LCDdrive.c: 173: y=0xc0 ;
  6917  1CF1  30C0               	movlw	192
  6918  1CF2                     L4:	
  6919  1CF2  00AA               	movwf	??_LCD_cursor
  6920  1CF3  082A               	movf	??_LCD_cursor,w
  6921  1CF4  00A9               	movwf	LCD_cursor@y
  6922                           
  6923                           ;LCDdrive.c: 174: }
  6924                           ;LCDdrive.c: 176: LCD_write( y+x, 0) ;
  6925  1CF5  01A0               	clrf	LCD_write@rs
  6926  1CF6  082B               	movf	LCD_cursor@x,w
  6927  1CF7  0729               	addwf	LCD_cursor@y,w
  6928  1CF8  160A  118A  22C9   	fcall	_LCD_write
  6929  1CFB  0008               	return
  6930  1CFC                     __end_of_LCD_cursor:	
  6931                           
  6932                           	psect	text16
  6933  14C1                     __ptext16:	
  6934 ;; *************** function _humidityReader *****************
  6935 ;; Defined at:
  6936 ;;		line 12 in file "humidityReader.c"
  6937 ;; Parameters:    Size  Location     Type
  6938 ;;		None
  6939 ;; Auto vars:     Size  Location     Type
  6940 ;;  Humidity        3   31[BANK1 ] float 
  6941 ;; Return value:  Size  Location     Type
  6942 ;;                  1    wreg      void 
  6943 ;; Registers used:
  6944 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6945 ;; Tracked objects:
  6946 ;;		On entry : 0/0
  6947 ;;		On exit  : 0/0
  6948 ;;		Unchanged: 0/0
  6949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6950 ;;      Params:         0       0       0       0       0
  6951 ;;      Locals:         0       0       3       0       0
  6952 ;;      Temps:          0       0       0       0       0
  6953 ;;      Totals:         0       0       3       0       0
  6954 ;;Total ram usage:        3 bytes
  6955 ;; Hardware stack levels used:    1
  6956 ;; Hardware stack levels required when called:    5
  6957 ;; This function calls:
  6958 ;;		_ADC_channel_select
  6959 ;;		_ADC_read
  6960 ;;		_LCD_display_float
  6961 ;;		_LCD_putch
  6962 ;;		___ftadd
  6963 ;;		___ftdiv
  6964 ;;		___ftmul
  6965 ;;		___lwtoft
  6966 ;; This function is called by:
  6967 ;;		_main
  6968 ;; This function uses a non-reentrant model
  6969 ;;
  6970                           
  6971                           
  6972                           ;psect for function _humidityReader
  6973  14C1                     _humidityReader:	
  6974                           
  6975                           ;humidityReader.c: 13: ADC_channel_select(1);
  6976                           
  6977                           ;incstack = 0
  6978                           ; Regs used in _humidityReader: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6979  14C1  3001               	movlw	1
  6980  14C2  160A  158A  24DB  160A  118A  	fcall	_ADC_channel_select
  6981                           
  6982                           ;humidityReader.c: 15: float Humidity = ((float) ADC_read() / 1023)*100;
  6983  14C7  3000               	movlw	0
  6984  14C8  1283               	bcf	3,5	;RP0=0, select bank0
  6985  14C9  1303               	bcf	3,6	;RP1=0, select bank0
  6986  14CA  00BC               	movwf	___ftmul@f1
  6987  14CB  30C8               	movlw	200
  6988  14CC  00BD               	movwf	___ftmul@f1+1
  6989  14CD  3042               	movlw	66
  6990  14CE  00BE               	movwf	___ftmul@f1+2
  6991  14CF  30C0               	movlw	192
  6992  14D0  00AC               	movwf	___ftdiv@f2
  6993  14D1  307F               	movlw	127
  6994  14D2  00AD               	movwf	___ftdiv@f2+1
  6995  14D3  3044               	movlw	68
  6996  14D4  00AE               	movwf	___ftdiv@f2+2
  6997  14D5  160A  158A  2510  160A  118A  	fcall	_ADC_read
  6998  14DA  1283               	bcf	3,5	;RP0=0, select bank0
  6999  14DB  1303               	bcf	3,6	;RP1=0, select bank0
  7000  14DC  0821               	movf	?_ADC_read+1,w
  7001  14DD  00A9               	movwf	___lwtoft@c+1
  7002  14DE  0820               	movf	?_ADC_read,w
  7003  14DF  00A8               	movwf	___lwtoft@c
  7004  14E0  160A  158A  2528  160A  118A  	fcall	___lwtoft
  7005  14E5  1283               	bcf	3,5	;RP0=0, select bank0
  7006  14E6  1303               	bcf	3,6	;RP1=0, select bank0
  7007  14E7  0828               	movf	?___lwtoft,w
  7008  14E8  00AF               	movwf	___ftdiv@f1
  7009  14E9  0829               	movf	?___lwtoft+1,w
  7010  14EA  00B0               	movwf	___ftdiv@f1+1
  7011  14EB  082A               	movf	?___lwtoft+2,w
  7012  14EC  00B1               	movwf	___ftdiv@f1+2
  7013  14ED  160A  118A  2409  160A  118A  	fcall	___ftdiv
  7014  14F2  1283               	bcf	3,5	;RP0=0, select bank0
  7015  14F3  1303               	bcf	3,6	;RP1=0, select bank0
  7016  14F4  082C               	movf	?___ftdiv,w
  7017  14F5  00BF               	movwf	___ftmul@f2
  7018  14F6  082D               	movf	?___ftdiv+1,w
  7019  14F7  00C0               	movwf	___ftmul@f2+1
  7020  14F8  082E               	movf	?___ftdiv+2,w
  7021  14F9  00C1               	movwf	___ftmul@f2+2
  7022  14FA  160A  118A  263B  160A  118A  	fcall	___ftmul
  7023  14FF  1283               	bcf	3,5	;RP0=0, select bank0
  7024  1500  1303               	bcf	3,6	;RP1=0, select bank0
  7025  1501  083C               	movf	?___ftmul,w
  7026  1502  1683               	bsf	3,5	;RP0=1, select bank1
  7027  1503  1303               	bcf	3,6	;RP1=0, select bank1
  7028  1504  00BF               	movwf	humidityReader@Humidity^(0+128)
  7029  1505  1283               	bcf	3,5	;RP0=0, select bank0
  7030  1506  1303               	bcf	3,6	;RP1=0, select bank0
  7031  1507  083D               	movf	?___ftmul+1,w
  7032  1508  1683               	bsf	3,5	;RP0=1, select bank1
  7033  1509  1303               	bcf	3,6	;RP1=0, select bank1
  7034  150A  00C0               	movwf	(humidityReader@Humidity+1)^(0+128)
  7035  150B  1283               	bcf	3,5	;RP0=0, select bank0
  7036  150C  1303               	bcf	3,6	;RP1=0, select bank0
  7037  150D  083E               	movf	?___ftmul+2,w
  7038  150E  1683               	bsf	3,5	;RP0=1, select bank1
  7039  150F  1303               	bcf	3,6	;RP1=0, select bank1
  7040  1510  00C1               	movwf	(humidityReader@Humidity+2)^(0+128)
  7041                           
  7042                           ;humidityReader.c: 18: Humidity = (10 + (Humidity * (90 - 10) / 100));
  7043  1511  3000               	movlw	0
  7044  1512  1283               	bcf	3,5	;RP0=0, select bank0
  7045  1513  1303               	bcf	3,6	;RP1=0, select bank0
  7046  1514  00CC               	movwf	___ftadd@f1
  7047  1515  3020               	movlw	32
  7048  1516  00CD               	movwf	___ftadd@f1+1
  7049  1517  3041               	movlw	65
  7050  1518  00CE               	movwf	___ftadd@f1+2
  7051  1519  3000               	movlw	0
  7052  151A  00AC               	movwf	___ftdiv@f2
  7053  151B  30C8               	movlw	200
  7054  151C  00AD               	movwf	___ftdiv@f2+1
  7055  151D  3042               	movlw	66
  7056  151E  00AE               	movwf	___ftdiv@f2+2
  7057  151F  3000               	movlw	0
  7058  1520  00BC               	movwf	___ftmul@f1
  7059  1521  30A0               	movlw	160
  7060  1522  00BD               	movwf	___ftmul@f1+1
  7061  1523  3042               	movlw	66
  7062  1524  00BE               	movwf	___ftmul@f1+2
  7063  1525  1683               	bsf	3,5	;RP0=1, select bank1
  7064  1526  1303               	bcf	3,6	;RP1=0, select bank1
  7065  1527  083F               	movf	humidityReader@Humidity^(0+128),w
  7066  1528  1283               	bcf	3,5	;RP0=0, select bank0
  7067  1529  1303               	bcf	3,6	;RP1=0, select bank0
  7068  152A  00BF               	movwf	___ftmul@f2
  7069  152B  1683               	bsf	3,5	;RP0=1, select bank1
  7070  152C  1303               	bcf	3,6	;RP1=0, select bank1
  7071  152D  0840               	movf	(humidityReader@Humidity+1)^(0+128),w
  7072  152E  1283               	bcf	3,5	;RP0=0, select bank0
  7073  152F  1303               	bcf	3,6	;RP1=0, select bank0
  7074  1530  00C0               	movwf	___ftmul@f2+1
  7075  1531  1683               	bsf	3,5	;RP0=1, select bank1
  7076  1532  1303               	bcf	3,6	;RP1=0, select bank1
  7077  1533  0841               	movf	(humidityReader@Humidity+2)^(0+128),w
  7078  1534  1283               	bcf	3,5	;RP0=0, select bank0
  7079  1535  1303               	bcf	3,6	;RP1=0, select bank0
  7080  1536  00C1               	movwf	___ftmul@f2+2
  7081  1537  160A  118A  263B  160A  118A  	fcall	___ftmul
  7082  153C  1283               	bcf	3,5	;RP0=0, select bank0
  7083  153D  1303               	bcf	3,6	;RP1=0, select bank0
  7084  153E  083C               	movf	?___ftmul,w
  7085  153F  00AF               	movwf	___ftdiv@f1
  7086  1540  083D               	movf	?___ftmul+1,w
  7087  1541  00B0               	movwf	___ftdiv@f1+1
  7088  1542  083E               	movf	?___ftmul+2,w
  7089  1543  00B1               	movwf	___ftdiv@f1+2
  7090  1544  160A  118A  2409  160A  118A  	fcall	___ftdiv
  7091  1549  1283               	bcf	3,5	;RP0=0, select bank0
  7092  154A  1303               	bcf	3,6	;RP1=0, select bank0
  7093  154B  082C               	movf	?___ftdiv,w
  7094  154C  00CF               	movwf	___ftadd@f2
  7095  154D  082D               	movf	?___ftdiv+1,w
  7096  154E  00D0               	movwf	___ftadd@f2+1
  7097  154F  082E               	movf	?___ftdiv+2,w
  7098  1550  00D1               	movwf	___ftadd@f2+2
  7099  1551  120A  158A  2186  160A  118A  	fcall	___ftadd
  7100  1556  1283               	bcf	3,5	;RP0=0, select bank0
  7101  1557  1303               	bcf	3,6	;RP1=0, select bank0
  7102  1558  084C               	movf	?___ftadd,w
  7103  1559  1683               	bsf	3,5	;RP0=1, select bank1
  7104  155A  1303               	bcf	3,6	;RP1=0, select bank1
  7105  155B  00BF               	movwf	humidityReader@Humidity^(0+128)
  7106  155C  1283               	bcf	3,5	;RP0=0, select bank0
  7107  155D  1303               	bcf	3,6	;RP1=0, select bank0
  7108  155E  084D               	movf	?___ftadd+1,w
  7109  155F  1683               	bsf	3,5	;RP0=1, select bank1
  7110  1560  1303               	bcf	3,6	;RP1=0, select bank1
  7111  1561  00C0               	movwf	(humidityReader@Humidity+1)^(0+128)
  7112  1562  1283               	bcf	3,5	;RP0=0, select bank0
  7113  1563  1303               	bcf	3,6	;RP1=0, select bank0
  7114  1564  084E               	movf	?___ftadd+2,w
  7115  1565  1683               	bsf	3,5	;RP0=1, select bank1
  7116  1566  1303               	bcf	3,6	;RP1=0, select bank1
  7117  1567  00C1               	movwf	(humidityReader@Humidity+2)^(0+128)
  7118                           
  7119                           ;humidityReader.c: 19: LCD_display_float(Humidity, 1);
  7120  1568  083F               	movf	humidityReader@Humidity^(0+128),w
  7121  1569  00A0               	movwf	LCD_display_float@value^(0+128)
  7122  156A  0840               	movf	(humidityReader@Humidity+1)^(0+128),w
  7123  156B  00A1               	movwf	(LCD_display_float@value+1)^(0+128)
  7124  156C  0841               	movf	(humidityReader@Humidity+2)^(0+128),w
  7125  156D  00A2               	movwf	(LCD_display_float@value+2)^(0+128)
  7126  156E  01A3               	clrf	LCD_display_float@dplaces^(0+128)
  7127  156F  0AA3               	incf	LCD_display_float@dplaces^(0+128),f
  7128  1570  120A  158A  239A  160A  118A  	fcall	_LCD_display_float
  7129                           
  7130                           ;humidityReader.c: 20: LCD_putch('%');
  7131  1575  3025               	movlw	37
  7132  1576  160A  158A  2540   	fcall	_LCD_putch
  7133  1579  0008               	return
  7134  157A                     __end_of_humidityReader:	
  7135                           
  7136                           	psect	text17
  7137  1D28                     __ptext17:	
  7138 ;; *************** function ___lwtoft *****************
  7139 ;; Defined at:
  7140 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwtoft.c"
  7141 ;; Parameters:    Size  Location     Type
  7142 ;;  c               2    8[BANK0 ] unsigned int 
  7143 ;; Auto vars:     Size  Location     Type
  7144 ;;		None
  7145 ;; Return value:  Size  Location     Type
  7146 ;;                  3    8[BANK0 ] float 
  7147 ;; Registers used:
  7148 ;;		wreg, status,2, status,0, pclath, cstack
  7149 ;; Tracked objects:
  7150 ;;		On entry : 0/0
  7151 ;;		On exit  : 0/0
  7152 ;;		Unchanged: 0/0
  7153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7154 ;;      Params:         0       3       0       0       0
  7155 ;;      Locals:         0       0       0       0       0
  7156 ;;      Temps:          0       1       0       0       0
  7157 ;;      Totals:         0       4       0       0       0
  7158 ;;Total ram usage:        4 bytes
  7159 ;; Hardware stack levels used:    1
  7160 ;; Hardware stack levels required when called:    2
  7161 ;; This function calls:
  7162 ;;		___ftpack
  7163 ;; This function is called by:
  7164 ;;		_humidityReader
  7165 ;;		_temperatureReader
  7166 ;; This function uses a non-reentrant model
  7167 ;;
  7168                           
  7169                           
  7170                           ;psect for function ___lwtoft
  7171  1D28                     ___lwtoft:	
  7172                           
  7173                           ;incstack = 0
  7174                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  7175  1D28  1283               	bcf	3,5	;RP0=0, select bank0
  7176  1D29  1303               	bcf	3,6	;RP1=0, select bank0
  7177  1D2A  0828               	movf	___lwtoft@c,w
  7178  1D2B  00A0               	movwf	___ftpack@arg
  7179  1D2C  0829               	movf	___lwtoft@c+1,w
  7180  1D2D  00A1               	movwf	___ftpack@arg+1
  7181  1D2E  01A2               	clrf	___ftpack@arg+2
  7182  1D2F  308E               	movlw	142
  7183  1D30  00AB               	movwf	??___lwtoft
  7184  1D31  082B               	movf	??___lwtoft,w
  7185  1D32  00A3               	movwf	___ftpack@exp
  7186  1D33  01A4               	clrf	___ftpack@sign
  7187  1D34  160A  118A  20AB   	fcall	___ftpack
  7188  1D37  1283               	bcf	3,5	;RP0=0, select bank0
  7189  1D38  1303               	bcf	3,6	;RP1=0, select bank0
  7190  1D39  0820               	movf	?___ftpack,w
  7191  1D3A  00A8               	movwf	?___lwtoft
  7192  1D3B  0821               	movf	?___ftpack+1,w
  7193  1D3C  00A9               	movwf	?___lwtoft+1
  7194  1D3D  0822               	movf	?___ftpack+2,w
  7195  1D3E  00AA               	movwf	?___lwtoft+2
  7196  1D3F  0008               	return
  7197  1D40                     __end_of___lwtoft:	
  7198                           
  7199                           	psect	text18
  7200  1409                     __ptext18:	
  7201 ;; *************** function ___ftdiv *****************
  7202 ;; Defined at:
  7203 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdiv.c"
  7204 ;; Parameters:    Size  Location     Type
  7205 ;;  f2              3   12[BANK0 ] float 
  7206 ;;  f1              3   15[BANK0 ] float 
  7207 ;; Auto vars:     Size  Location     Type
  7208 ;;  f3              3   23[BANK0 ] float 
  7209 ;;  sign            1   27[BANK0 ] unsigned char 
  7210 ;;  exp             1   26[BANK0 ] unsigned char 
  7211 ;;  cntr            1   22[BANK0 ] unsigned char 
  7212 ;; Return value:  Size  Location     Type
  7213 ;;                  3   12[BANK0 ] float 
  7214 ;; Registers used:
  7215 ;;		wreg, status,2, status,0, pclath, cstack
  7216 ;; Tracked objects:
  7217 ;;		On entry : 0/0
  7218 ;;		On exit  : 0/0
  7219 ;;		Unchanged: 0/0
  7220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7221 ;;      Params:         0       6       0       0       0
  7222 ;;      Locals:         0       6       0       0       0
  7223 ;;      Temps:          0       4       0       0       0
  7224 ;;      Totals:         0      16       0       0       0
  7225 ;;Total ram usage:       16 bytes
  7226 ;; Hardware stack levels used:    1
  7227 ;; Hardware stack levels required when called:    2
  7228 ;; This function calls:
  7229 ;;		___ftpack
  7230 ;; This function is called by:
  7231 ;;		_humidityReader
  7232 ;;		_temperatureReader
  7233 ;; This function uses a non-reentrant model
  7234 ;;
  7235                           
  7236                           
  7237                           ;psect for function ___ftdiv
  7238  1409                     ___ftdiv:	
  7239                           
  7240                           ;incstack = 0
  7241                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  7242  1409  1283               	bcf	3,5	;RP0=0, select bank0
  7243  140A  1303               	bcf	3,6	;RP1=0, select bank0
  7244  140B  082F               	movf	___ftdiv@f1,w
  7245  140C  00B2               	movwf	??___ftdiv
  7246  140D  0830               	movf	___ftdiv@f1+1,w
  7247  140E  00B3               	movwf	??___ftdiv+1
  7248  140F  0831               	movf	___ftdiv@f1+2,w
  7249  1410  00B4               	movwf	??___ftdiv+2
  7250  1411  1003               	clrc
  7251  1412  0D33               	rlf	??___ftdiv+1,w
  7252  1413  0D34               	rlf	??___ftdiv+2,w
  7253  1414  00B5               	movwf	??___ftdiv+3
  7254  1415  0835               	movf	??___ftdiv+3,w
  7255  1416  00BA               	movwf	___ftdiv@exp
  7256  1417  083A               	movf	___ftdiv@exp,w
  7257  1418  1D03               	btfss	3,2
  7258  1419  2C21               	goto	l5062
  7259  141A  3000               	movlw	0
  7260  141B  00AC               	movwf	?___ftdiv
  7261  141C  3000               	movlw	0
  7262  141D  00AD               	movwf	?___ftdiv+1
  7263  141E  3000               	movlw	0
  7264  141F  00AE               	movwf	?___ftdiv+2
  7265  1420  0008               	return
  7266  1421                     l5062:	
  7267  1421  082C               	movf	___ftdiv@f2,w
  7268  1422  00B2               	movwf	??___ftdiv
  7269  1423  082D               	movf	___ftdiv@f2+1,w
  7270  1424  00B3               	movwf	??___ftdiv+1
  7271  1425  082E               	movf	___ftdiv@f2+2,w
  7272  1426  00B4               	movwf	??___ftdiv+2
  7273  1427  1003               	clrc
  7274  1428  0D33               	rlf	??___ftdiv+1,w
  7275  1429  0D34               	rlf	??___ftdiv+2,w
  7276  142A  00B5               	movwf	??___ftdiv+3
  7277  142B  0835               	movf	??___ftdiv+3,w
  7278  142C  00BB               	movwf	___ftdiv@sign
  7279  142D  083B               	movf	___ftdiv@sign,w
  7280  142E  1D03               	btfss	3,2
  7281  142F  2C37               	goto	l5068
  7282  1430  3000               	movlw	0
  7283  1431  00AC               	movwf	?___ftdiv
  7284  1432  3000               	movlw	0
  7285  1433  00AD               	movwf	?___ftdiv+1
  7286  1434  3000               	movlw	0
  7287  1435  00AE               	movwf	?___ftdiv+2
  7288  1436  0008               	return
  7289  1437                     l5068:	
  7290  1437  3000               	movlw	0
  7291  1438  00B7               	movwf	___ftdiv@f3
  7292  1439  3000               	movlw	0
  7293  143A  00B8               	movwf	___ftdiv@f3+1
  7294  143B  3000               	movlw	0
  7295  143C  00B9               	movwf	___ftdiv@f3+2
  7296  143D  3089               	movlw	137
  7297  143E  073B               	addwf	___ftdiv@sign,w
  7298  143F  00B2               	movwf	??___ftdiv
  7299  1440  0832               	movf	??___ftdiv,w
  7300  1441  02BA               	subwf	___ftdiv@exp,f
  7301  1442  082F               	movf	___ftdiv@f1,w
  7302  1443  00B2               	movwf	??___ftdiv
  7303  1444  0830               	movf	___ftdiv@f1+1,w
  7304  1445  00B3               	movwf	??___ftdiv+1
  7305  1446  0831               	movf	___ftdiv@f1+2,w
  7306  1447  00B4               	movwf	??___ftdiv+2
  7307  1448  3010               	movlw	16
  7308  1449                     u7285:	
  7309  1449  1003               	clrc
  7310  144A  0CB4               	rrf	??___ftdiv+2,f
  7311  144B  0CB3               	rrf	??___ftdiv+1,f
  7312  144C  0CB2               	rrf	??___ftdiv,f
  7313  144D  3EFF               	addlw	-1
  7314  144E  1D03               	skipz
  7315  144F  2C49               	goto	u7285
  7316  1450  0832               	movf	??___ftdiv,w
  7317  1451  00B5               	movwf	??___ftdiv+3
  7318  1452  0835               	movf	??___ftdiv+3,w
  7319  1453  00BB               	movwf	___ftdiv@sign
  7320  1454  082C               	movf	___ftdiv@f2,w
  7321  1455  00B2               	movwf	??___ftdiv
  7322  1456  082D               	movf	___ftdiv@f2+1,w
  7323  1457  00B3               	movwf	??___ftdiv+1
  7324  1458  082E               	movf	___ftdiv@f2+2,w
  7325  1459  00B4               	movwf	??___ftdiv+2
  7326  145A  3010               	movlw	16
  7327  145B                     u7295:	
  7328  145B  1003               	clrc
  7329  145C  0CB4               	rrf	??___ftdiv+2,f
  7330  145D  0CB3               	rrf	??___ftdiv+1,f
  7331  145E  0CB2               	rrf	??___ftdiv,f
  7332  145F  3EFF               	addlw	-1
  7333  1460  1D03               	skipz
  7334  1461  2C5B               	goto	u7295
  7335  1462  0832               	movf	??___ftdiv,w
  7336  1463  00B5               	movwf	??___ftdiv+3
  7337  1464  0835               	movf	??___ftdiv+3,w
  7338  1465  06BB               	xorwf	___ftdiv@sign,f
  7339  1466  3080               	movlw	128
  7340  1467  00B2               	movwf	??___ftdiv
  7341  1468  0832               	movf	??___ftdiv,w
  7342  1469  05BB               	andwf	___ftdiv@sign,f
  7343  146A  17B0               	bsf	___ftdiv@f1+1,7
  7344  146B  30FF               	movlw	255
  7345  146C  05AF               	andwf	___ftdiv@f1,f
  7346  146D  30FF               	movlw	255
  7347  146E  05B0               	andwf	___ftdiv@f1+1,f
  7348  146F  3000               	movlw	0
  7349  1470  05B1               	andwf	___ftdiv@f1+2,f
  7350  1471  17AD               	bsf	___ftdiv@f2+1,7
  7351  1472  30FF               	movlw	255
  7352  1473  05AC               	andwf	___ftdiv@f2,f
  7353  1474  30FF               	movlw	255
  7354  1475  05AD               	andwf	___ftdiv@f2+1,f
  7355  1476  3000               	movlw	0
  7356  1477  05AE               	andwf	___ftdiv@f2+2,f
  7357  1478  3018               	movlw	24
  7358  1479  00B2               	movwf	??___ftdiv
  7359  147A  0832               	movf	??___ftdiv,w
  7360  147B  00B6               	movwf	___ftdiv@cntr
  7361  147C                     l5082:	
  7362  147C  3001               	movlw	1
  7363  147D                     u7305:	
  7364  147D  1003               	clrc
  7365  147E  0DB7               	rlf	___ftdiv@f3,f
  7366  147F  0DB8               	rlf	___ftdiv@f3+1,f
  7367  1480  0DB9               	rlf	___ftdiv@f3+2,f
  7368  1481  3EFF               	addlw	-1
  7369  1482  1D03               	skipz
  7370  1483  2C7D               	goto	u7305
  7371  1484  082E               	movf	___ftdiv@f2+2,w
  7372  1485  0231               	subwf	___ftdiv@f1+2,w
  7373  1486  1D03               	skipz
  7374  1487  2C8E               	goto	u7315
  7375  1488  082D               	movf	___ftdiv@f2+1,w
  7376  1489  0230               	subwf	___ftdiv@f1+1,w
  7377  148A  1D03               	skipz
  7378  148B  2C8E               	goto	u7315
  7379  148C  082C               	movf	___ftdiv@f2,w
  7380  148D  022F               	subwf	___ftdiv@f1,w
  7381  148E                     u7315:	
  7382  148E  1C03               	skipc
  7383  148F  2C9B               	goto	l5090
  7384  1490  082C               	movf	___ftdiv@f2,w
  7385  1491  02AF               	subwf	___ftdiv@f1,f
  7386  1492  082D               	movf	___ftdiv@f2+1,w
  7387  1493  1C03               	skipc
  7388  1494  0F2D               	incfsz	___ftdiv@f2+1,w
  7389  1495  02B0               	subwf	___ftdiv@f1+1,f
  7390  1496  082E               	movf	___ftdiv@f2+2,w
  7391  1497  1C03               	skipc
  7392  1498  0A2E               	incf	___ftdiv@f2+2,w
  7393  1499  02B1               	subwf	___ftdiv@f1+2,f
  7394  149A  1437               	bsf	___ftdiv@f3,0
  7395  149B                     l5090:	
  7396  149B  3001               	movlw	1
  7397  149C                     u7325:	
  7398  149C  1003               	clrc
  7399  149D  0DAF               	rlf	___ftdiv@f1,f
  7400  149E  0DB0               	rlf	___ftdiv@f1+1,f
  7401  149F  0DB1               	rlf	___ftdiv@f1+2,f
  7402  14A0  3EFF               	addlw	-1
  7403  14A1  1D03               	skipz
  7404  14A2  2C9C               	goto	u7325
  7405  14A3  3001               	movlw	1
  7406  14A4  02B6               	subwf	___ftdiv@cntr,f
  7407  14A5  1D03               	btfss	3,2
  7408  14A6  2C7C               	goto	l5082
  7409  14A7  0837               	movf	___ftdiv@f3,w
  7410  14A8  00A0               	movwf	___ftpack@arg
  7411  14A9  0838               	movf	___ftdiv@f3+1,w
  7412  14AA  00A1               	movwf	___ftpack@arg+1
  7413  14AB  0839               	movf	___ftdiv@f3+2,w
  7414  14AC  00A2               	movwf	___ftpack@arg+2
  7415  14AD  083A               	movf	___ftdiv@exp,w
  7416  14AE  00B2               	movwf	??___ftdiv
  7417  14AF  0832               	movf	??___ftdiv,w
  7418  14B0  00A3               	movwf	___ftpack@exp
  7419  14B1  083B               	movf	___ftdiv@sign,w
  7420  14B2  00B3               	movwf	??___ftdiv+1
  7421  14B3  0833               	movf	??___ftdiv+1,w
  7422  14B4  00A4               	movwf	___ftpack@sign
  7423  14B5  160A  118A  20AB   	fcall	___ftpack
  7424  14B8  1283               	bcf	3,5	;RP0=0, select bank0
  7425  14B9  1303               	bcf	3,6	;RP1=0, select bank0
  7426  14BA  0820               	movf	?___ftpack,w
  7427  14BB  00AC               	movwf	?___ftdiv
  7428  14BC  0821               	movf	?___ftpack+1,w
  7429  14BD  00AD               	movwf	?___ftdiv+1
  7430  14BE  0822               	movf	?___ftpack+2,w
  7431  14BF  00AE               	movwf	?___ftdiv+2
  7432  14C0  0008               	return
  7433  14C1                     __end_of___ftdiv:	
  7434                           
  7435                           	psect	text19
  7436  0B9A                     __ptext19:	
  7437 ;; *************** function _LCD_display_float *****************
  7438 ;; Defined at:
  7439 ;;		line 198 in file "LCDdrive.c"
  7440 ;; Parameters:    Size  Location     Type
  7441 ;;  value           3    0[BANK1 ] float 
  7442 ;;  dplaces         1    3[BANK1 ] unsigned char 
  7443 ;; Auto vars:     Size  Location     Type
  7444 ;;  buffer         12    6[BANK1 ] unsigned char [12]
  7445 ;;  output          7   19[BANK1 ] unsigned char [7]
  7446 ;;  i               1   30[BANK1 ] unsigned char 
  7447 ;;  pos             1   29[BANK1 ] unsigned char 
  7448 ;;  offset          1   28[BANK1 ] char 
  7449 ;;  str_len         1   27[BANK1 ] unsigned char 
  7450 ;;  isneg           1   26[BANK1 ] unsigned char 
  7451 ;;  j               1   18[BANK1 ] unsigned char 
  7452 ;; Return value:  Size  Location     Type
  7453 ;;                  1    wreg      void 
  7454 ;; Registers used:
  7455 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7456 ;; Tracked objects:
  7457 ;;		On entry : 0/0
  7458 ;;		On exit  : 0/0
  7459 ;;		Unchanged: 0/0
  7460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7461 ;;      Params:         0       0       4       0       0
  7462 ;;      Locals:         0       0      25       0       0
  7463 ;;      Temps:          0       0       2       0       0
  7464 ;;      Totals:         0       0      31       0       0
  7465 ;;Total ram usage:       31 bytes
  7466 ;; Hardware stack levels used:    1
  7467 ;; Hardware stack levels required when called:    4
  7468 ;; This function calls:
  7469 ;;		_LCD_puts
  7470 ;;		_LCD_putsc
  7471 ;;		___ftadd
  7472 ;;		___ftge
  7473 ;;		___ftmul
  7474 ;;		___ftsub
  7475 ;;		___fttol
  7476 ;;		_ltoa
  7477 ;; This function is called by:
  7478 ;;		_humidityReader
  7479 ;;		_temperatureReader
  7480 ;; This function uses a non-reentrant model
  7481 ;;
  7482                           
  7483                           
  7484                           ;psect for function _LCD_display_float
  7485  0B9A                     _LCD_display_float:	
  7486                           
  7487                           ;LCDdrive.c: 200: char buffer[12];
  7488                           ;LCDdrive.c: 202: char output[7];
  7489                           ;LCDdrive.c: 203: unsigned char str_len=0, isneg=0, i, j=1, pos=0;
  7490                           
  7491                           ;incstack = 0
  7492                           ; Regs used in _LCD_display_float: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7493  0B9A  1683               	bsf	3,5	;RP0=1, select bank1
  7494  0B9B  1303               	bcf	3,6	;RP1=0, select bank1
  7495  0B9C  01BB               	clrf	LCD_display_float@str_len^(0+128)
  7496  0B9D  01BA               	clrf	LCD_display_float@isneg^(0+128)
  7497  0B9E  01B2               	clrf	LCD_display_float@j^(0+128)
  7498  0B9F  0AB2               	incf	LCD_display_float@j^(0+128),f
  7499  0BA0  01BD               	clrf	LCD_display_float@pos^(0+128)
  7500                           
  7501                           ;LCDdrive.c: 204: signed char offset;
  7502                           ;LCDdrive.c: 207: if (value<0) isneg=1;
  7503  0BA1  0820               	movf	LCD_display_float@value^(0+128),w
  7504  0BA2  1283               	bcf	3,5	;RP0=0, select bank0
  7505  0BA3  1303               	bcf	3,6	;RP1=0, select bank0
  7506  0BA4  00A0               	movwf	___ftge@ff1
  7507  0BA5  1683               	bsf	3,5	;RP0=1, select bank1
  7508  0BA6  1303               	bcf	3,6	;RP1=0, select bank1
  7509  0BA7  0821               	movf	(LCD_display_float@value+1)^(0+128),w
  7510  0BA8  1283               	bcf	3,5	;RP0=0, select bank0
  7511  0BA9  1303               	bcf	3,6	;RP1=0, select bank0
  7512  0BAA  00A1               	movwf	___ftge@ff1+1
  7513  0BAB  1683               	bsf	3,5	;RP0=1, select bank1
  7514  0BAC  1303               	bcf	3,6	;RP1=0, select bank1
  7515  0BAD  0822               	movf	(LCD_display_float@value+2)^(0+128),w
  7516  0BAE  1283               	bcf	3,5	;RP0=0, select bank0
  7517  0BAF  1303               	bcf	3,6	;RP1=0, select bank0
  7518  0BB0  00A2               	movwf	___ftge@ff1+2
  7519  0BB1  3000               	movlw	0
  7520  0BB2  00A3               	movwf	___ftge@ff2
  7521  0BB3  3000               	movlw	0
  7522  0BB4  00A4               	movwf	___ftge@ff2+1
  7523  0BB5  3000               	movlw	0
  7524  0BB6  00A5               	movwf	___ftge@ff2+2
  7525  0BB7  160A  158A  27A1  120A  158A  	fcall	___ftge
  7526  0BBC  1803               	btfsc	3,0
  7527  0BBD  2BC2               	goto	l4904
  7528  0BBE  1683               	bsf	3,5	;RP0=1, select bank1
  7529  0BBF  1303               	bcf	3,6	;RP1=0, select bank1
  7530  0BC0  01BA               	clrf	LCD_display_float@isneg^(0+128)
  7531  0BC1  0ABA               	incf	LCD_display_float@isneg^(0+128),f
  7532  0BC2                     l4904:	
  7533                           
  7534                           ;LCDdrive.c: 209: for(i=0; i<dplaces;i++)
  7535  0BC2  1683               	bsf	3,5	;RP0=1, select bank1
  7536  0BC3  1303               	bcf	3,6	;RP1=0, select bank1
  7537  0BC4  01BE               	clrf	LCD_display_float@i^(0+128)
  7538  0BC5                     l4910:	
  7539  0BC5  0823               	movf	LCD_display_float@dplaces^(0+128),w
  7540  0BC6  023E               	subwf	LCD_display_float@i^(0+128),w
  7541  0BC7  1803               	btfsc	3,0
  7542  0BC8  2BFF               	goto	l4912
  7543                           
  7544                           ;LCDdrive.c: 210: value=value*10;
  7545  0BC9  3000               	movlw	0
  7546  0BCA  1283               	bcf	3,5	;RP0=0, select bank0
  7547  0BCB  1303               	bcf	3,6	;RP1=0, select bank0
  7548  0BCC  00BC               	movwf	___ftmul@f1
  7549  0BCD  3020               	movlw	32
  7550  0BCE  00BD               	movwf	___ftmul@f1+1
  7551  0BCF  3041               	movlw	65
  7552  0BD0  00BE               	movwf	___ftmul@f1+2
  7553  0BD1  1683               	bsf	3,5	;RP0=1, select bank1
  7554  0BD2  1303               	bcf	3,6	;RP1=0, select bank1
  7555  0BD3  0820               	movf	LCD_display_float@value^(0+128),w
  7556  0BD4  1283               	bcf	3,5	;RP0=0, select bank0
  7557  0BD5  1303               	bcf	3,6	;RP1=0, select bank0
  7558  0BD6  00BF               	movwf	___ftmul@f2
  7559  0BD7  1683               	bsf	3,5	;RP0=1, select bank1
  7560  0BD8  1303               	bcf	3,6	;RP1=0, select bank1
  7561  0BD9  0821               	movf	(LCD_display_float@value+1)^(0+128),w
  7562  0BDA  1283               	bcf	3,5	;RP0=0, select bank0
  7563  0BDB  1303               	bcf	3,6	;RP1=0, select bank0
  7564  0BDC  00C0               	movwf	___ftmul@f2+1
  7565  0BDD  1683               	bsf	3,5	;RP0=1, select bank1
  7566  0BDE  1303               	bcf	3,6	;RP1=0, select bank1
  7567  0BDF  0822               	movf	(LCD_display_float@value+2)^(0+128),w
  7568  0BE0  1283               	bcf	3,5	;RP0=0, select bank0
  7569  0BE1  1303               	bcf	3,6	;RP1=0, select bank0
  7570  0BE2  00C1               	movwf	___ftmul@f2+2
  7571  0BE3  160A  118A  263B  120A  158A  	fcall	___ftmul
  7572  0BE8  1283               	bcf	3,5	;RP0=0, select bank0
  7573  0BE9  1303               	bcf	3,6	;RP1=0, select bank0
  7574  0BEA  083C               	movf	?___ftmul,w
  7575  0BEB  1683               	bsf	3,5	;RP0=1, select bank1
  7576  0BEC  1303               	bcf	3,6	;RP1=0, select bank1
  7577  0BED  00A0               	movwf	LCD_display_float@value^(0+128)
  7578  0BEE  1283               	bcf	3,5	;RP0=0, select bank0
  7579  0BEF  1303               	bcf	3,6	;RP1=0, select bank0
  7580  0BF0  083D               	movf	?___ftmul+1,w
  7581  0BF1  1683               	bsf	3,5	;RP0=1, select bank1
  7582  0BF2  1303               	bcf	3,6	;RP1=0, select bank1
  7583  0BF3  00A1               	movwf	(LCD_display_float@value+1)^(0+128)
  7584  0BF4  1283               	bcf	3,5	;RP0=0, select bank0
  7585  0BF5  1303               	bcf	3,6	;RP1=0, select bank0
  7586  0BF6  083E               	movf	?___ftmul+2,w
  7587  0BF7  1683               	bsf	3,5	;RP0=1, select bank1
  7588  0BF8  1303               	bcf	3,6	;RP1=0, select bank1
  7589  0BF9  00A2               	movwf	(LCD_display_float@value+2)^(0+128)
  7590  0BFA  3001               	movlw	1
  7591  0BFB  00A4               	movwf	??_LCD_display_float^(0+128)
  7592  0BFC  0824               	movf	??_LCD_display_float^(0+128),w
  7593  0BFD  07BE               	addwf	LCD_display_float@i^(0+128),f
  7594  0BFE  2BC5               	goto	l4910
  7595  0BFF                     l4912:	
  7596                           
  7597                           ;LCDdrive.c: 212: if(isneg)
  7598  0BFF  083A               	movf	LCD_display_float@isneg^(0+128),w
  7599  0C00  1903               	btfsc	3,2
  7600  0C01  2C62               	goto	l4916
  7601                           
  7602                           ;LCDdrive.c: 213: {
  7603                           ;LCDdrive.c: 214: value -= 0.5;
  7604  0C02  3000               	movlw	0
  7605  0C03  1283               	bcf	3,5	;RP0=0, select bank0
  7606  0C04  1303               	bcf	3,6	;RP1=0, select bank0
  7607  0C05  00D9               	movwf	___ftsub@f2
  7608  0C06  3000               	movlw	0
  7609  0C07  00DA               	movwf	___ftsub@f2+1
  7610  0C08  303F               	movlw	63
  7611  0C09  00DB               	movwf	___ftsub@f2+2
  7612  0C0A  1683               	bsf	3,5	;RP0=1, select bank1
  7613  0C0B  1303               	bcf	3,6	;RP1=0, select bank1
  7614  0C0C  0820               	movf	LCD_display_float@value^(0+128),w
  7615  0C0D  1283               	bcf	3,5	;RP0=0, select bank0
  7616  0C0E  1303               	bcf	3,6	;RP1=0, select bank0
  7617  0C0F  00DC               	movwf	___ftsub@f1
  7618  0C10  1683               	bsf	3,5	;RP0=1, select bank1
  7619  0C11  1303               	bcf	3,6	;RP1=0, select bank1
  7620  0C12  0821               	movf	(LCD_display_float@value+1)^(0+128),w
  7621  0C13  1283               	bcf	3,5	;RP0=0, select bank0
  7622  0C14  1303               	bcf	3,6	;RP1=0, select bank0
  7623  0C15  00DD               	movwf	___ftsub@f1+1
  7624  0C16  1683               	bsf	3,5	;RP0=1, select bank1
  7625  0C17  1303               	bcf	3,6	;RP1=0, select bank1
  7626  0C18  0822               	movf	(LCD_display_float@value+2)^(0+128),w
  7627  0C19  1283               	bcf	3,5	;RP0=0, select bank0
  7628  0C1A  1303               	bcf	3,6	;RP1=0, select bank0
  7629  0C1B  00DE               	movwf	___ftsub@f1+2
  7630  0C1C  160A  158A  255D  120A  158A  	fcall	___ftsub
  7631  0C21  1283               	bcf	3,5	;RP0=0, select bank0
  7632  0C22  1303               	bcf	3,6	;RP1=0, select bank0
  7633  0C23  0859               	movf	?___ftsub,w
  7634  0C24  1683               	bsf	3,5	;RP0=1, select bank1
  7635  0C25  1303               	bcf	3,6	;RP1=0, select bank1
  7636  0C26  00A0               	movwf	LCD_display_float@value^(0+128)
  7637  0C27  1283               	bcf	3,5	;RP0=0, select bank0
  7638  0C28  1303               	bcf	3,6	;RP1=0, select bank0
  7639  0C29  085A               	movf	?___ftsub+1,w
  7640  0C2A  1683               	bsf	3,5	;RP0=1, select bank1
  7641  0C2B  1303               	bcf	3,6	;RP1=0, select bank1
  7642  0C2C  00A1               	movwf	(LCD_display_float@value+1)^(0+128)
  7643  0C2D  1283               	bcf	3,5	;RP0=0, select bank0
  7644  0C2E  1303               	bcf	3,6	;RP1=0, select bank0
  7645  0C2F  085B               	movf	?___ftsub+2,w
  7646  0C30  1683               	bsf	3,5	;RP0=1, select bank1
  7647  0C31  1303               	bcf	3,6	;RP1=0, select bank1
  7648  0C32  00A2               	movwf	(LCD_display_float@value+2)^(0+128)
  7649                           
  7650                           ;LCDdrive.c: 215: value = value * -1;
  7651  0C33  3000               	movlw	0
  7652  0C34  1283               	bcf	3,5	;RP0=0, select bank0
  7653  0C35  1303               	bcf	3,6	;RP1=0, select bank0
  7654  0C36  00BC               	movwf	___ftmul@f1
  7655  0C37  3080               	movlw	128
  7656  0C38  00BD               	movwf	___ftmul@f1+1
  7657  0C39  30BF               	movlw	191
  7658  0C3A  00BE               	movwf	___ftmul@f1+2
  7659  0C3B  1683               	bsf	3,5	;RP0=1, select bank1
  7660  0C3C  1303               	bcf	3,6	;RP1=0, select bank1
  7661  0C3D  0820               	movf	LCD_display_float@value^(0+128),w
  7662  0C3E  1283               	bcf	3,5	;RP0=0, select bank0
  7663  0C3F  1303               	bcf	3,6	;RP1=0, select bank0
  7664  0C40  00BF               	movwf	___ftmul@f2
  7665  0C41  1683               	bsf	3,5	;RP0=1, select bank1
  7666  0C42  1303               	bcf	3,6	;RP1=0, select bank1
  7667  0C43  0821               	movf	(LCD_display_float@value+1)^(0+128),w
  7668  0C44  1283               	bcf	3,5	;RP0=0, select bank0
  7669  0C45  1303               	bcf	3,6	;RP1=0, select bank0
  7670  0C46  00C0               	movwf	___ftmul@f2+1
  7671  0C47  1683               	bsf	3,5	;RP0=1, select bank1
  7672  0C48  1303               	bcf	3,6	;RP1=0, select bank1
  7673  0C49  0822               	movf	(LCD_display_float@value+2)^(0+128),w
  7674  0C4A  1283               	bcf	3,5	;RP0=0, select bank0
  7675  0C4B  1303               	bcf	3,6	;RP1=0, select bank0
  7676  0C4C  00C1               	movwf	___ftmul@f2+2
  7677  0C4D  160A  118A  263B  120A  158A  	fcall	___ftmul
  7678  0C52  1283               	bcf	3,5	;RP0=0, select bank0
  7679  0C53  1303               	bcf	3,6	;RP1=0, select bank0
  7680  0C54  083C               	movf	?___ftmul,w
  7681  0C55  1683               	bsf	3,5	;RP0=1, select bank1
  7682  0C56  1303               	bcf	3,6	;RP1=0, select bank1
  7683  0C57  00A0               	movwf	LCD_display_float@value^(0+128)
  7684  0C58  1283               	bcf	3,5	;RP0=0, select bank0
  7685  0C59  1303               	bcf	3,6	;RP1=0, select bank0
  7686  0C5A  083D               	movf	?___ftmul+1,w
  7687  0C5B  1683               	bsf	3,5	;RP0=1, select bank1
  7688  0C5C  1303               	bcf	3,6	;RP1=0, select bank1
  7689  0C5D  00A1               	movwf	(LCD_display_float@value+1)^(0+128)
  7690  0C5E  1283               	bcf	3,5	;RP0=0, select bank0
  7691  0C5F  1303               	bcf	3,6	;RP1=0, select bank0
  7692  0C60  083E               	movf	?___ftmul+2,w
  7693  0C61  2C90               	goto	L5
  7694  0C62                     l4916:	
  7695                           ;LCDdrive.c: 217: }
  7696                           
  7697                           
  7698                           ;LCDdrive.c: 218: else
  7699                           ;LCDdrive.c: 219: value += 0.5;
  7700  0C62  3000               	movlw	0
  7701  0C63  1283               	bcf	3,5	;RP0=0, select bank0
  7702  0C64  1303               	bcf	3,6	;RP1=0, select bank0
  7703  0C65  00CC               	movwf	___ftadd@f1
  7704  0C66  3000               	movlw	0
  7705  0C67  00CD               	movwf	___ftadd@f1+1
  7706  0C68  303F               	movlw	63
  7707  0C69  00CE               	movwf	___ftadd@f1+2
  7708  0C6A  1683               	bsf	3,5	;RP0=1, select bank1
  7709  0C6B  1303               	bcf	3,6	;RP1=0, select bank1
  7710  0C6C  0820               	movf	LCD_display_float@value^(0+128),w
  7711  0C6D  1283               	bcf	3,5	;RP0=0, select bank0
  7712  0C6E  1303               	bcf	3,6	;RP1=0, select bank0
  7713  0C6F  00CF               	movwf	___ftadd@f2
  7714  0C70  1683               	bsf	3,5	;RP0=1, select bank1
  7715  0C71  1303               	bcf	3,6	;RP1=0, select bank1
  7716  0C72  0821               	movf	(LCD_display_float@value+1)^(0+128),w
  7717  0C73  1283               	bcf	3,5	;RP0=0, select bank0
  7718  0C74  1303               	bcf	3,6	;RP1=0, select bank0
  7719  0C75  00D0               	movwf	___ftadd@f2+1
  7720  0C76  1683               	bsf	3,5	;RP0=1, select bank1
  7721  0C77  1303               	bcf	3,6	;RP1=0, select bank1
  7722  0C78  0822               	movf	(LCD_display_float@value+2)^(0+128),w
  7723  0C79  1283               	bcf	3,5	;RP0=0, select bank0
  7724  0C7A  1303               	bcf	3,6	;RP1=0, select bank0
  7725  0C7B  00D1               	movwf	___ftadd@f2+2
  7726  0C7C  120A  158A  2186  120A  158A  	fcall	___ftadd
  7727  0C81  1283               	bcf	3,5	;RP0=0, select bank0
  7728  0C82  1303               	bcf	3,6	;RP1=0, select bank0
  7729  0C83  084C               	movf	?___ftadd,w
  7730  0C84  1683               	bsf	3,5	;RP0=1, select bank1
  7731  0C85  1303               	bcf	3,6	;RP1=0, select bank1
  7732  0C86  00A0               	movwf	LCD_display_float@value^(0+128)
  7733  0C87  1283               	bcf	3,5	;RP0=0, select bank0
  7734  0C88  1303               	bcf	3,6	;RP1=0, select bank0
  7735  0C89  084D               	movf	?___ftadd+1,w
  7736  0C8A  1683               	bsf	3,5	;RP0=1, select bank1
  7737  0C8B  1303               	bcf	3,6	;RP1=0, select bank1
  7738  0C8C  00A1               	movwf	(LCD_display_float@value+1)^(0+128)
  7739  0C8D  1283               	bcf	3,5	;RP0=0, select bank0
  7740  0C8E  1303               	bcf	3,6	;RP1=0, select bank0
  7741  0C8F  084E               	movf	?___ftadd+2,w
  7742  0C90                     L5:	
  7743  0C90  1683               	bsf	3,5	;RP0=1, select bank1
  7744  0C91  1303               	bcf	3,6	;RP1=0, select bank1
  7745  0C92  00A2               	movwf	(LCD_display_float@value+2)^(0+128)
  7746                           
  7747                           ;LCDdrive.c: 221: ltoa(buffer, (long)value, 10);
  7748  0C93  0820               	movf	LCD_display_float@value^(0+128),w
  7749  0C94  1283               	bcf	3,5	;RP0=0, select bank0
  7750  0C95  1303               	bcf	3,6	;RP1=0, select bank0
  7751  0C96  00D9               	movwf	___fttol@f1
  7752  0C97  1683               	bsf	3,5	;RP0=1, select bank1
  7753  0C98  1303               	bcf	3,6	;RP1=0, select bank1
  7754  0C99  0821               	movf	(LCD_display_float@value+1)^(0+128),w
  7755  0C9A  1283               	bcf	3,5	;RP0=0, select bank0
  7756  0C9B  1303               	bcf	3,6	;RP1=0, select bank0
  7757  0C9C  00DA               	movwf	___fttol@f1+1
  7758  0C9D  1683               	bsf	3,5	;RP0=1, select bank1
  7759  0C9E  1303               	bcf	3,6	;RP1=0, select bank1
  7760  0C9F  0822               	movf	(LCD_display_float@value+2)^(0+128),w
  7761  0CA0  1283               	bcf	3,5	;RP0=0, select bank0
  7762  0CA1  1303               	bcf	3,6	;RP1=0, select bank0
  7763  0CA2  00DB               	movwf	___fttol@f1+2
  7764  0CA3  160A  118A  2119  120A  158A  	fcall	___fttol
  7765  0CA8  1283               	bcf	3,5	;RP0=0, select bank0
  7766  0CA9  1303               	bcf	3,6	;RP1=0, select bank0
  7767  0CAA  085C               	movf	?___fttol+3,w
  7768  0CAB  00EA               	movwf	ltoa@val+3
  7769  0CAC  085B               	movf	?___fttol+2,w
  7770  0CAD  00E9               	movwf	ltoa@val+2
  7771  0CAE  085A               	movf	?___fttol+1,w
  7772  0CAF  00E8               	movwf	ltoa@val+1
  7773  0CB0  0859               	movf	?___fttol,w
  7774  0CB1  00E7               	movwf	ltoa@val
  7775  0CB2  300A               	movlw	10
  7776  0CB3  00EB               	movwf	ltoa@base
  7777  0CB4  3000               	movlw	0
  7778  0CB5  00EC               	movwf	ltoa@base+1
  7779  0CB6  30A6               	movlw	(low (LCD_display_float@buffer| 0))& (0+255)
  7780  0CB7  160A  158A  2618  120A  158A  	fcall	_ltoa
  7781  0CBC                     l4922:	
  7782                           ;LCDdrive.c: 223: while(buffer[str_len])
  7783                           
  7784  0CBC  1683               	bsf	3,5	;RP0=1, select bank1
  7785  0CBD  1303               	bcf	3,6	;RP1=0, select bank1
  7786  0CBE  083B               	movf	LCD_display_float@str_len^(0+128),w
  7787  0CBF  3EA6               	addlw	(low (LCD_display_float@buffer| 0))& (0+255)
  7788  0CC0  0084               	movwf	4
  7789  0CC1  1383               	bcf	3,7	;select IRP bank1
  7790  0CC2  0800               	movf	0,w
  7791  0CC3  1903               	btfsc	3,2
  7792  0CC4  2CCC               	goto	l4924
  7793                           
  7794                           ;LCDdrive.c: 224: str_len++;
  7795  0CC5  3001               	movlw	1
  7796  0CC6  1683               	bsf	3,5	;RP0=1, select bank1
  7797  0CC7  1303               	bcf	3,6	;RP1=0, select bank1
  7798  0CC8  00A4               	movwf	??_LCD_display_float^(0+128)
  7799  0CC9  0824               	movf	??_LCD_display_float^(0+128),w
  7800  0CCA  07BB               	addwf	LCD_display_float@str_len^(0+128),f
  7801  0CCB  2CBC               	goto	l4922
  7802  0CCC                     l4924:	
  7803                           
  7804                           ;LCDdrive.c: 226: if(str_len > 4)
  7805  0CCC  3005               	movlw	5
  7806  0CCD  023B               	subwf	LCD_display_float@str_len^(0+128),w
  7807  0CCE  1C03               	skipc
  7808  0CCF  2CD5               	goto	l4930
  7809                           
  7810                           ;LCDdrive.c: 227: {
  7811                           ;LCDdrive.c: 228: LCD_putsc("ERR");
  7812  0CD0  306B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  7813  0CD1  160A  158A  25EE   	fcall	_LCD_putsc
  7814                           
  7815                           ;LCDdrive.c: 229: return;
  7816  0CD4  0008               	return
  7817  0CD5                     l4930:	
  7818                           
  7819                           ;LCDdrive.c: 230: }
  7820                           ;LCDdrive.c: 232: offset = str_len - dplaces;
  7821  0CD5  1683               	bsf	3,5	;RP0=1, select bank1
  7822  0CD6  1303               	bcf	3,6	;RP1=0, select bank1
  7823  0CD7  0323               	decf	LCD_display_float@dplaces^(0+128),w
  7824  0CD8  3AFF               	xorlw	255
  7825  0CD9  073B               	addwf	LCD_display_float@str_len^(0+128),w
  7826  0CDA  00A4               	movwf	??_LCD_display_float^(0+128)
  7827  0CDB  0824               	movf	??_LCD_display_float^(0+128),w
  7828  0CDC  00BC               	movwf	LCD_display_float@offset^(0+128)
  7829                           
  7830                           ;LCDdrive.c: 234: if(isneg)
  7831  0CDD  083A               	movf	LCD_display_float@isneg^(0+128),w
  7832  0CDE  1903               	btfsc	3,2
  7833  0CDF  2CFD               	goto	l4944
  7834                           
  7835                           ;LCDdrive.c: 235: {
  7836                           ;LCDdrive.c: 236: for(i=0;i<str_len;i++)
  7837  0CE0  01BE               	clrf	LCD_display_float@i^(0+128)
  7838  0CE1  2CE6               	goto	l4942
  7839  0CE2                     l4940:	
  7840                           ;LCDdrive.c: 242: break;
  7841                           
  7842  0CE2  3001               	movlw	1
  7843  0CE3  00A4               	movwf	??_LCD_display_float^(0+128)
  7844  0CE4  0824               	movf	??_LCD_display_float^(0+128),w
  7845  0CE5  07BE               	addwf	LCD_display_float@i^(0+128),f
  7846  0CE6                     l4942:	
  7847  0CE6  083B               	movf	LCD_display_float@str_len^(0+128),w
  7848  0CE7  023E               	subwf	LCD_display_float@i^(0+128),w
  7849  0CE8  1803               	btfsc	3,0
  7850  0CE9  2CFD               	goto	l4944
  7851                           
  7852                           ;LCDdrive.c: 237: {
  7853                           ;LCDdrive.c: 238: if(buffer[i] != '0')
  7854  0CEA  083E               	movf	LCD_display_float@i^(0+128),w
  7855  0CEB  3EA6               	addlw	(low (LCD_display_float@buffer| 0))& (0+255)
  7856  0CEC  0084               	movwf	4
  7857  0CED  3030               	movlw	48
  7858  0CEE  1383               	bcf	3,7	;select IRP bank1
  7859  0CEF  0600               	xorwf	0,w
  7860  0CF0  1903               	btfsc	3,2
  7861  0CF1  2CE2               	goto	l4940
  7862                           
  7863                           ;LCDdrive.c: 239: {
  7864                           ;LCDdrive.c: 240: output[pos]='-';
  7865  0CF2  302D               	movlw	45
  7866  0CF3  00A4               	movwf	??_LCD_display_float^(0+128)
  7867  0CF4  083D               	movf	LCD_display_float@pos^(0+128),w
  7868  0CF5  3EB3               	addlw	(low (LCD_display_float@output| 0))& (0+255)
  7869  0CF6  0084               	movwf	4
  7870  0CF7  0824               	movf	??_LCD_display_float^(0+128),w
  7871  0CF8  0080               	movwf	0
  7872                           
  7873                           ;LCDdrive.c: 241: pos++;
  7874  0CF9  3001               	movlw	1
  7875  0CFA  00A4               	movwf	??_LCD_display_float^(0+128)
  7876  0CFB  0824               	movf	??_LCD_display_float^(0+128),w
  7877  0CFC  07BD               	addwf	LCD_display_float@pos^(0+128),f
  7878  0CFD                     l4944:	
  7879                           
  7880                           ;LCDdrive.c: 243: }
  7881                           ;LCDdrive.c: 244: }
  7882                           ;LCDdrive.c: 245: }
  7883                           ;LCDdrive.c: 247: if(offset>0)
  7884  0CFD  083C               	movf	LCD_display_float@offset^(0+128),w
  7885  0CFE  3A80               	xorlw	128
  7886  0CFF  3E7F               	addlw	-129
  7887  0D00  1C03               	skipc
  7888  0D01  2D27               	goto	l4956
  7889                           
  7890                           ;LCDdrive.c: 248: {
  7891                           ;LCDdrive.c: 249: for(i=0;i<offset;i++)
  7892  0D02  01BE               	clrf	LCD_display_float@i^(0+128)
  7893  0D03                     l4954:	
  7894  0D03  083C               	movf	LCD_display_float@offset^(0+128),w
  7895  0D04  00A4               	movwf	??_LCD_display_float^(0+128)
  7896  0D05  01A5               	clrf	(??_LCD_display_float^(0+128)+1)
  7897  0D06  1BA4               	btfsc	??_LCD_display_float^(0+128),7
  7898  0D07  03A5               	decf	(??_LCD_display_float^(0+128)+1),f
  7899  0D08  0825               	movf	(??_LCD_display_float+1)^(0+128),w
  7900  0D09  3A80               	xorlw	128
  7901  0D0A  3C80               	sublw	128
  7902  0D0B  1D03               	skipz
  7903  0D0C  2D0F               	goto	u7065
  7904  0D0D  0824               	movf	??_LCD_display_float^(0+128),w
  7905  0D0E  023E               	subwf	LCD_display_float@i^(0+128),w
  7906  0D0F                     u7065:	
  7907  0D0F  1803               	btfsc	3,0
  7908  0D10  2D35               	goto	l4960
  7909                           
  7910                           ;LCDdrive.c: 250: {
  7911                           ;LCDdrive.c: 251: output[pos]=buffer[i];
  7912  0D11  1683               	bsf	3,5	;RP0=1, select bank1
  7913  0D12  1303               	bcf	3,6	;RP1=0, select bank1
  7914  0D13  083E               	movf	LCD_display_float@i^(0+128),w
  7915  0D14  3EA6               	addlw	(low (LCD_display_float@buffer| 0))& (0+255)
  7916  0D15  0084               	movwf	4
  7917  0D16  1383               	bcf	3,7	;select IRP bank1
  7918  0D17  0800               	movf	0,w
  7919  0D18  00A4               	movwf	??_LCD_display_float^(0+128)
  7920  0D19  083D               	movf	LCD_display_float@pos^(0+128),w
  7921  0D1A  3EB3               	addlw	(low (LCD_display_float@output| 0))& (0+255)
  7922  0D1B  0084               	movwf	4
  7923  0D1C  0824               	movf	??_LCD_display_float^(0+128),w
  7924  0D1D  0080               	movwf	0
  7925                           
  7926                           ;LCDdrive.c: 252: pos++;
  7927  0D1E  3001               	movlw	1
  7928  0D1F  00A4               	movwf	??_LCD_display_float^(0+128)
  7929  0D20  0824               	movf	??_LCD_display_float^(0+128),w
  7930  0D21  07BD               	addwf	LCD_display_float@pos^(0+128),f
  7931  0D22  3001               	movlw	1
  7932  0D23  00A4               	movwf	??_LCD_display_float^(0+128)
  7933  0D24  0824               	movf	??_LCD_display_float^(0+128),w
  7934  0D25  07BE               	addwf	LCD_display_float@i^(0+128),f
  7935  0D26  2D03               	goto	l4954
  7936  0D27                     l4956:	
  7937                           ;LCDdrive.c: 253: }
  7938                           ;LCDdrive.c: 254: }
  7939                           
  7940                           
  7941                           ;LCDdrive.c: 255: else
  7942                           ;LCDdrive.c: 256: {
  7943                           ;LCDdrive.c: 257: output[pos] = '0';
  7944  0D27  3030               	movlw	48
  7945  0D28  1683               	bsf	3,5	;RP0=1, select bank1
  7946  0D29  1303               	bcf	3,6	;RP1=0, select bank1
  7947  0D2A  00A4               	movwf	??_LCD_display_float^(0+128)
  7948  0D2B  083D               	movf	LCD_display_float@pos^(0+128),w
  7949  0D2C  3EB3               	addlw	(low (LCD_display_float@output| 0))& (0+255)
  7950  0D2D  0084               	movwf	4
  7951  0D2E  0824               	movf	??_LCD_display_float^(0+128),w
  7952  0D2F  1383               	bcf	3,7	;select IRP bank1
  7953  0D30  0080               	movwf	0
  7954                           
  7955                           ;LCDdrive.c: 258: pos++;
  7956  0D31  3001               	movlw	1
  7957  0D32  00A4               	movwf	??_LCD_display_float^(0+128)
  7958  0D33  0824               	movf	??_LCD_display_float^(0+128),w
  7959  0D34  07BD               	addwf	LCD_display_float@pos^(0+128),f
  7960  0D35                     l4960:	
  7961                           
  7962                           ;LCDdrive.c: 259: }
  7963                           ;LCDdrive.c: 261: if(dplaces)
  7964  0D35  1683               	bsf	3,5	;RP0=1, select bank1
  7965  0D36  1303               	bcf	3,6	;RP1=0, select bank1
  7966  0D37  0823               	movf	LCD_display_float@dplaces^(0+128),w
  7967  0D38  1903               	btfsc	3,2
  7968  0D39  2D74               	goto	l4988
  7969                           
  7970                           ;LCDdrive.c: 262: {
  7971                           ;LCDdrive.c: 263: output[pos] = '.';
  7972  0D3A  302E               	movlw	46
  7973  0D3B  00A4               	movwf	??_LCD_display_float^(0+128)
  7974  0D3C  083D               	movf	LCD_display_float@pos^(0+128),w
  7975  0D3D  3EB3               	addlw	(low (LCD_display_float@output| 0))& (0+255)
  7976  0D3E  0084               	movwf	4
  7977  0D3F  0824               	movf	??_LCD_display_float^(0+128),w
  7978  0D40  1383               	bcf	3,7	;select IRP bank1
  7979  0D41  0080               	movwf	0
  7980                           
  7981                           ;LCDdrive.c: 264: pos++;
  7982  0D42  3001               	movlw	1
  7983  0D43  00A4               	movwf	??_LCD_display_float^(0+128)
  7984  0D44  0824               	movf	??_LCD_display_float^(0+128),w
  7985  0D45  07BD               	addwf	LCD_display_float@pos^(0+128),f
  7986  0D46  1FBC               	btfss	LCD_display_float@offset^(0+128),7
  7987  0D47  2D59               	goto	l4978
  7988  0D48                     l4970:	
  7989                           
  7990                           ;LCDdrive.c: 266: {
  7991                           ;LCDdrive.c: 267: output[pos]='0';
  7992  0D48  3030               	movlw	48
  7993  0D49  00A4               	movwf	??_LCD_display_float^(0+128)
  7994  0D4A  083D               	movf	LCD_display_float@pos^(0+128),w
  7995  0D4B  3EB3               	addlw	(low (LCD_display_float@output| 0))& (0+255)
  7996  0D4C  0084               	movwf	4
  7997  0D4D  0824               	movf	??_LCD_display_float^(0+128),w
  7998  0D4E  0080               	movwf	0
  7999                           
  8000                           ;LCDdrive.c: 268: pos++;
  8001  0D4F  3001               	movlw	1
  8002  0D50  00A4               	movwf	??_LCD_display_float^(0+128)
  8003  0D51  0824               	movf	??_LCD_display_float^(0+128),w
  8004  0D52  07BD               	addwf	LCD_display_float@pos^(0+128),f
  8005  0D53  3001               	movlw	1
  8006  0D54  00A4               	movwf	??_LCD_display_float^(0+128)
  8007  0D55  0824               	movf	??_LCD_display_float^(0+128),w
  8008  0D56  07BC               	addwf	LCD_display_float@offset^(0+128),f
  8009  0D57  1BBC               	btfsc	LCD_display_float@offset^(0+128),7
  8010  0D58  2D48               	goto	l4970
  8011  0D59                     l4978:	
  8012                           
  8013                           ;LCDdrive.c: 270: }
  8014                           ;LCDdrive.c: 271: for(i=offset; i<str_len;i++)
  8015  0D59  083C               	movf	LCD_display_float@offset^(0+128),w
  8016  0D5A  00A4               	movwf	??_LCD_display_float^(0+128)
  8017  0D5B  0824               	movf	??_LCD_display_float^(0+128),w
  8018  0D5C  00BE               	movwf	LCD_display_float@i^(0+128)
  8019  0D5D                     l4986:	
  8020  0D5D  083B               	movf	LCD_display_float@str_len^(0+128),w
  8021  0D5E  023E               	subwf	LCD_display_float@i^(0+128),w
  8022  0D5F  1803               	btfsc	3,0
  8023  0D60  2D74               	goto	l4988
  8024                           
  8025                           ;LCDdrive.c: 272: {
  8026                           ;LCDdrive.c: 273: output[pos]=buffer[i];
  8027  0D61  083E               	movf	LCD_display_float@i^(0+128),w
  8028  0D62  3EA6               	addlw	(low (LCD_display_float@buffer| 0))& (0+255)
  8029  0D63  0084               	movwf	4
  8030  0D64  0800               	movf	0,w
  8031  0D65  00A4               	movwf	??_LCD_display_float^(0+128)
  8032  0D66  083D               	movf	LCD_display_float@pos^(0+128),w
  8033  0D67  3EB3               	addlw	(low (LCD_display_float@output| 0))& (0+255)
  8034  0D68  0084               	movwf	4
  8035  0D69  0824               	movf	??_LCD_display_float^(0+128),w
  8036  0D6A  0080               	movwf	0
  8037                           
  8038                           ;LCDdrive.c: 274: pos++;
  8039  0D6B  3001               	movlw	1
  8040  0D6C  00A4               	movwf	??_LCD_display_float^(0+128)
  8041  0D6D  0824               	movf	??_LCD_display_float^(0+128),w
  8042  0D6E  07BD               	addwf	LCD_display_float@pos^(0+128),f
  8043  0D6F  3001               	movlw	1
  8044  0D70  00A4               	movwf	??_LCD_display_float^(0+128)
  8045  0D71  0824               	movf	??_LCD_display_float^(0+128),w
  8046  0D72  07BE               	addwf	LCD_display_float@i^(0+128),f
  8047  0D73  2D5D               	goto	l4986
  8048  0D74                     l4988:	
  8049                           
  8050                           ;LCDdrive.c: 275: }
  8051                           ;LCDdrive.c: 276: }
  8052                           ;LCDdrive.c: 278: output[pos]=0x00;
  8053  0D74  083D               	movf	LCD_display_float@pos^(0+128),w
  8054  0D75  3EB3               	addlw	(low (LCD_display_float@output| 0))& (0+255)
  8055  0D76  0084               	movwf	4
  8056  0D77  1383               	bcf	3,7	;select IRP bank1
  8057  0D78  0180               	clrf	0
  8058                           
  8059                           ;LCDdrive.c: 279: LCD_puts(output);
  8060  0D79  30B3               	movlw	(low (LCD_display_float@output| 0))& (0+255)
  8061  0D7A  160A  158A  25C5   	fcall	_LCD_puts
  8062  0D7D  0008               	return
  8063  0D7E                     __end_of_LCD_display_float:	
  8064                           
  8065                           	psect	text20
  8066  1E18                     __ptext20:	
  8067 ;; *************** function _ltoa *****************
  8068 ;; Defined at:
  8069 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ltoa.c"
  8070 ;; Parameters:    Size  Location     Type
  8071 ;;  buf             1    wreg     PTR unsigned char 
  8072 ;;		 -> LCD_display_float@buffer(12), LCD_display_value@buffer(12), 
  8073 ;;  val             4   71[BANK0 ] long 
  8074 ;;  base            2   75[BANK0 ] int 
  8075 ;; Auto vars:     Size  Location     Type
  8076 ;;  buf             1   79[BANK0 ] PTR unsigned char 
  8077 ;;		 -> LCD_display_float@buffer(12), LCD_display_value@buffer(12), 
  8078 ;;  cp              1   78[BANK0 ] PTR unsigned char 
  8079 ;;		 -> LCD_display_float@buffer(12), LCD_display_value@buffer(12), 
  8080 ;; Return value:  Size  Location     Type
  8081 ;;                  1    wreg      PTR unsigned char 
  8082 ;; Registers used:
  8083 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8084 ;; Tracked objects:
  8085 ;;		On entry : 0/0
  8086 ;;		On exit  : 0/0
  8087 ;;		Unchanged: 0/0
  8088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8089 ;;      Params:         0       6       0       0       0
  8090 ;;      Locals:         0       2       0       0       0
  8091 ;;      Temps:          0       1       0       0       0
  8092 ;;      Totals:         0       9       0       0       0
  8093 ;;Total ram usage:        9 bytes
  8094 ;; Hardware stack levels used:    1
  8095 ;; Hardware stack levels required when called:    3
  8096 ;; This function calls:
  8097 ;;		_ultoa
  8098 ;; This function is called by:
  8099 ;;		_LCD_display_float
  8100 ;;		_LCD_display_value
  8101 ;; This function uses a non-reentrant model
  8102 ;;
  8103                           
  8104                           
  8105                           ;psect for function _ltoa
  8106  1E18                     _ltoa:	
  8107                           
  8108                           ;incstack = 0
  8109                           ; Regs used in _ltoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8110                           ;ltoa@buf stored from wreg
  8111  1E18  1283               	bcf	3,5	;RP0=0, select bank0
  8112  1E19  1303               	bcf	3,6	;RP1=0, select bank0
  8113  1E1A  00EF               	movwf	ltoa@buf
  8114  1E1B  086F               	movf	ltoa@buf,w
  8115  1E1C  00ED               	movwf	??_ltoa
  8116  1E1D  086D               	movf	??_ltoa,w
  8117  1E1E  00EE               	movwf	ltoa@cp
  8118  1E1F  1FEA               	btfss	ltoa@val+3,7
  8119  1E20  2E37               	goto	l4770
  8120  1E21  302D               	movlw	45
  8121  1E22  00ED               	movwf	??_ltoa
  8122  1E23  086F               	movf	ltoa@buf,w
  8123  1E24  0084               	movwf	4
  8124  1E25  086D               	movf	??_ltoa,w
  8125  1E26  1383               	bcf	3,7	;select IRP bank0
  8126  1E27  0080               	movwf	0
  8127  1E28  3001               	movlw	1
  8128  1E29  00ED               	movwf	??_ltoa
  8129  1E2A  086D               	movf	??_ltoa,w
  8130  1E2B  07EF               	addwf	ltoa@buf,f
  8131  1E2C  09E7               	comf	ltoa@val,f
  8132  1E2D  09E8               	comf	ltoa@val+1,f
  8133  1E2E  09E9               	comf	ltoa@val+2,f
  8134  1E2F  09EA               	comf	ltoa@val+3,f
  8135  1E30  0AE7               	incf	ltoa@val,f
  8136  1E31  1903               	skipnz
  8137  1E32  0AE8               	incf	ltoa@val+1,f
  8138  1E33  1903               	skipnz
  8139  1E34  0AE9               	incf	ltoa@val+2,f
  8140  1E35  1903               	skipnz
  8141  1E36  0AEA               	incf	ltoa@val+3,f
  8142  1E37                     l4770:	
  8143  1E37  086A               	movf	ltoa@val+3,w
  8144  1E38  00B1               	movwf	ultoa@val+3
  8145  1E39  0869               	movf	ltoa@val+2,w
  8146  1E3A  00B0               	movwf	ultoa@val+2
  8147  1E3B  0868               	movf	ltoa@val+1,w
  8148  1E3C  00AF               	movwf	ultoa@val+1
  8149  1E3D  0867               	movf	ltoa@val,w
  8150  1E3E  00AE               	movwf	ultoa@val
  8151  1E3F  086C               	movf	ltoa@base+1,w
  8152  1E40  00B3               	movwf	ultoa@base+1
  8153  1E41  086B               	movf	ltoa@base,w
  8154  1E42  00B2               	movwf	ultoa@base
  8155  1E43  086F               	movf	ltoa@buf,w
  8156  1E44  160A  118A  2236   	fcall	_ultoa
  8157  1E47  0008               	return
  8158  1E48                     __end_of_ltoa:	
  8159                           ;	Return value of _ltoa is never used
  8160                           
  8161                           
  8162                           	psect	text21
  8163  1236                     __ptext21:	
  8164 ;; *************** function _ultoa *****************
  8165 ;; Defined at:
  8166 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ltoa.c"
  8167 ;; Parameters:    Size  Location     Type
  8168 ;;  buf             1    wreg     PTR unsigned char 
  8169 ;;		 -> LCD_display_float@buffer(12), LCD_display_value@buffer(12), 
  8170 ;;  val             4   14[BANK0 ] unsigned long 
  8171 ;;  base            2   18[BANK0 ] int 
  8172 ;; Auto vars:     Size  Location     Type
  8173 ;;  buf             1   26[BANK0 ] PTR unsigned char 
  8174 ;;		 -> LCD_display_float@buffer(12), LCD_display_value@buffer(12), 
  8175 ;;  v               4   21[BANK0 ] unsigned long 
  8176 ;;  c               1   25[BANK0 ] unsigned char 
  8177 ;; Return value:  Size  Location     Type
  8178 ;;                  1    wreg      PTR unsigned char 
  8179 ;; Registers used:
  8180 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8181 ;; Tracked objects:
  8182 ;;		On entry : 0/0
  8183 ;;		On exit  : 0/0
  8184 ;;		Unchanged: 0/0
  8185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8186 ;;      Params:         0       6       0       0       0
  8187 ;;      Locals:         0       6       0       0       0
  8188 ;;      Temps:          0       1       0       0       0
  8189 ;;      Totals:         0      13       0       0       0
  8190 ;;Total ram usage:       13 bytes
  8191 ;; Hardware stack levels used:    1
  8192 ;; Hardware stack levels required when called:    2
  8193 ;; This function calls:
  8194 ;;		___lldiv
  8195 ;;		___llmod
  8196 ;; This function is called by:
  8197 ;;		_ltoa
  8198 ;; This function uses a non-reentrant model
  8199 ;;
  8200                           
  8201                           
  8202                           ;psect for function _ultoa
  8203  1236                     _ultoa:	
  8204                           
  8205                           ;incstack = 0
  8206                           ; Regs used in _ultoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8207                           ;ultoa@buf stored from wreg
  8208  1236  1283               	bcf	3,5	;RP0=0, select bank0
  8209  1237  1303               	bcf	3,6	;RP1=0, select bank0
  8210  1238  00BA               	movwf	ultoa@buf
  8211  1239  0831               	movf	ultoa@val+3,w
  8212  123A  00B8               	movwf	ultoa@v+3
  8213  123B  0830               	movf	ultoa@val+2,w
  8214  123C  00B7               	movwf	ultoa@v+2
  8215  123D  082F               	movf	ultoa@val+1,w
  8216  123E  00B6               	movwf	ultoa@v+1
  8217  123F  082E               	movf	ultoa@val,w
  8218  1240  00B5               	movwf	ultoa@v
  8219  1241                     l4684:	
  8220  1241  0832               	movf	ultoa@base,w
  8221  1242  00A0               	movwf	___lldiv@divisor
  8222  1243  0833               	movf	ultoa@base+1,w
  8223  1244  00A1               	movwf	___lldiv@divisor+1
  8224  1245  3000               	movlw	0
  8225  1246  1BA1               	btfsc	___lldiv@divisor+1,7
  8226  1247  30FF               	movlw	255
  8227  1248  00A2               	movwf	___lldiv@divisor+2
  8228  1249  00A3               	movwf	___lldiv@divisor+3
  8229  124A  0838               	movf	ultoa@v+3,w
  8230  124B  00A7               	movwf	___lldiv@dividend+3
  8231  124C  0837               	movf	ultoa@v+2,w
  8232  124D  00A6               	movwf	___lldiv@dividend+2
  8233  124E  0836               	movf	ultoa@v+1,w
  8234  124F  00A5               	movwf	___lldiv@dividend+1
  8235  1250  0835               	movf	ultoa@v,w
  8236  1251  00A4               	movwf	___lldiv@dividend
  8237  1252  160A  118A  204B  160A  118A  	fcall	___lldiv
  8238  1257  1283               	bcf	3,5	;RP0=0, select bank0
  8239  1258  1303               	bcf	3,6	;RP1=0, select bank0
  8240  1259  0823               	movf	?___lldiv+3,w
  8241  125A  00B8               	movwf	ultoa@v+3
  8242  125B  0822               	movf	?___lldiv+2,w
  8243  125C  00B7               	movwf	ultoa@v+2
  8244  125D  0821               	movf	?___lldiv+1,w
  8245  125E  00B6               	movwf	ultoa@v+1
  8246  125F  0820               	movf	?___lldiv,w
  8247  1260  00B5               	movwf	ultoa@v
  8248  1261  3001               	movlw	1
  8249  1262  00B4               	movwf	??_ultoa
  8250  1263  0834               	movf	??_ultoa,w
  8251  1264  07BA               	addwf	ultoa@buf,f
  8252  1265  0838               	movf	ultoa@v+3,w
  8253  1266  0437               	iorwf	ultoa@v+2,w
  8254  1267  0436               	iorwf	ultoa@v+1,w
  8255  1268  0435               	iorwf	ultoa@v,w
  8256  1269  1D03               	skipz
  8257  126A  2A41               	goto	l4684
  8258  126B  083A               	movf	ultoa@buf,w
  8259  126C  0084               	movwf	4
  8260  126D  1383               	bcf	3,7	;select IRP bank0
  8261  126E  0180               	clrf	0
  8262  126F  3001               	movlw	1
  8263  1270  02BA               	subwf	ultoa@buf,f
  8264  1271                     l4694:	
  8265  1271  0832               	movf	ultoa@base,w
  8266  1272  00A0               	movwf	___llmod@divisor
  8267  1273  0833               	movf	ultoa@base+1,w
  8268  1274  00A1               	movwf	___llmod@divisor+1
  8269  1275  3000               	movlw	0
  8270  1276  1BA1               	btfsc	___llmod@divisor+1,7
  8271  1277  30FF               	movlw	255
  8272  1278  00A2               	movwf	___llmod@divisor+2
  8273  1279  00A3               	movwf	___llmod@divisor+3
  8274  127A  0831               	movf	ultoa@val+3,w
  8275  127B  00A7               	movwf	___llmod@dividend+3
  8276  127C  0830               	movf	ultoa@val+2,w
  8277  127D  00A6               	movwf	___llmod@dividend+2
  8278  127E  082F               	movf	ultoa@val+1,w
  8279  127F  00A5               	movwf	___llmod@dividend+1
  8280  1280  082E               	movf	ultoa@val,w
  8281  1281  00A4               	movwf	___llmod@dividend
  8282  1282  160A  158A  2701  160A  118A  	fcall	___llmod
  8283  1287  1283               	bcf	3,5	;RP0=0, select bank0
  8284  1288  1303               	bcf	3,6	;RP1=0, select bank0
  8285  1289  0820               	movf	?___llmod,w
  8286  128A  00B4               	movwf	??_ultoa
  8287  128B  0834               	movf	??_ultoa,w
  8288  128C  00B9               	movwf	ultoa@c
  8289  128D  0832               	movf	ultoa@base,w
  8290  128E  00A0               	movwf	___lldiv@divisor
  8291  128F  0833               	movf	ultoa@base+1,w
  8292  1290  00A1               	movwf	___lldiv@divisor+1
  8293  1291  3000               	movlw	0
  8294  1292  1BA1               	btfsc	___lldiv@divisor+1,7
  8295  1293  30FF               	movlw	255
  8296  1294  00A2               	movwf	___lldiv@divisor+2
  8297  1295  00A3               	movwf	___lldiv@divisor+3
  8298  1296  0831               	movf	ultoa@val+3,w
  8299  1297  00A7               	movwf	___lldiv@dividend+3
  8300  1298  0830               	movf	ultoa@val+2,w
  8301  1299  00A6               	movwf	___lldiv@dividend+2
  8302  129A  082F               	movf	ultoa@val+1,w
  8303  129B  00A5               	movwf	___lldiv@dividend+1
  8304  129C  082E               	movf	ultoa@val,w
  8305  129D  00A4               	movwf	___lldiv@dividend
  8306  129E  160A  118A  204B  160A  118A  	fcall	___lldiv
  8307  12A3  1283               	bcf	3,5	;RP0=0, select bank0
  8308  12A4  1303               	bcf	3,6	;RP1=0, select bank0
  8309  12A5  0823               	movf	?___lldiv+3,w
  8310  12A6  00B1               	movwf	ultoa@val+3
  8311  12A7  0822               	movf	?___lldiv+2,w
  8312  12A8  00B0               	movwf	ultoa@val+2
  8313  12A9  0821               	movf	?___lldiv+1,w
  8314  12AA  00AF               	movwf	ultoa@val+1
  8315  12AB  0820               	movf	?___lldiv,w
  8316  12AC  00AE               	movwf	ultoa@val
  8317  12AD  300A               	movlw	10
  8318  12AE  0239               	subwf	ultoa@c,w
  8319  12AF  1C03               	skipc
  8320  12B0  2AB5               	goto	l1194
  8321  12B1  3007               	movlw	7
  8322  12B2  00B4               	movwf	??_ultoa
  8323  12B3  0834               	movf	??_ultoa,w
  8324  12B4  07B9               	addwf	ultoa@c,f
  8325  12B5                     l1194:	
  8326  12B5  3030               	movlw	48
  8327  12B6  00B4               	movwf	??_ultoa
  8328  12B7  0834               	movf	??_ultoa,w
  8329  12B8  07B9               	addwf	ultoa@c,f
  8330  12B9  0839               	movf	ultoa@c,w
  8331  12BA  00B4               	movwf	??_ultoa
  8332  12BB  083A               	movf	ultoa@buf,w
  8333  12BC  0084               	movwf	4
  8334  12BD  0834               	movf	??_ultoa,w
  8335  12BE  1383               	bcf	3,7	;select IRP bank0
  8336  12BF  0080               	movwf	0
  8337  12C0  3001               	movlw	1
  8338  12C1  02BA               	subwf	ultoa@buf,f
  8339  12C2  0831               	movf	ultoa@val+3,w
  8340  12C3  0430               	iorwf	ultoa@val+2,w
  8341  12C4  042F               	iorwf	ultoa@val+1,w
  8342  12C5  042E               	iorwf	ultoa@val,w
  8343  12C6  1903               	btfsc	3,2
  8344  12C7  0008               	return
  8345  12C8  2A71               	goto	l4694
  8346  12C9                     __end_of_ultoa:	
  8347                           ;	Return value of _ultoa is never used
  8348                           
  8349                           
  8350                           	psect	text22
  8351  1F01                     __ptext22:	
  8352 ;; *************** function ___llmod *****************
  8353 ;; Defined at:
  8354 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\llmod.c"
  8355 ;; Parameters:    Size  Location     Type
  8356 ;;  divisor         4    0[BANK0 ] unsigned long 
  8357 ;;  dividend        4    4[BANK0 ] unsigned long 
  8358 ;; Auto vars:     Size  Location     Type
  8359 ;;  counter         1    9[BANK0 ] unsigned char 
  8360 ;; Return value:  Size  Location     Type
  8361 ;;                  4    0[BANK0 ] unsigned long 
  8362 ;; Registers used:
  8363 ;;		wreg, status,2, status,0
  8364 ;; Tracked objects:
  8365 ;;		On entry : 0/0
  8366 ;;		On exit  : 0/0
  8367 ;;		Unchanged: 0/0
  8368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8369 ;;      Params:         0       8       0       0       0
  8370 ;;      Locals:         0       1       0       0       0
  8371 ;;      Temps:          0       1       0       0       0
  8372 ;;      Totals:         0      10       0       0       0
  8373 ;;Total ram usage:       10 bytes
  8374 ;; Hardware stack levels used:    1
  8375 ;; Hardware stack levels required when called:    1
  8376 ;; This function calls:
  8377 ;;		Nothing
  8378 ;; This function is called by:
  8379 ;;		_ultoa
  8380 ;; This function uses a non-reentrant model
  8381 ;;
  8382                           
  8383                           
  8384                           ;psect for function ___llmod
  8385  1F01                     ___llmod:	
  8386                           
  8387                           ;incstack = 0
  8388                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  8389  1F01  1283               	bcf	3,5	;RP0=0, select bank0
  8390  1F02  1303               	bcf	3,6	;RP1=0, select bank0
  8391  1F03  0823               	movf	___llmod@divisor+3,w
  8392  1F04  0422               	iorwf	___llmod@divisor+2,w
  8393  1F05  0421               	iorwf	___llmod@divisor+1,w
  8394  1F06  0420               	iorwf	___llmod@divisor,w
  8395  1F07  1903               	skipnz
  8396  1F08  2F46               	goto	l4598
  8397  1F09  01A9               	clrf	___llmod@counter
  8398  1F0A  0AA9               	incf	___llmod@counter,f
  8399  1F0B                     l4588:	
  8400  1F0B  1BA3               	btfsc	___llmod@divisor+3,7
  8401  1F0C  2F1B               	goto	l4590
  8402  1F0D  3001               	movlw	1
  8403  1F0E  00A8               	movwf	??___llmod
  8404  1F0F                     u6265:	
  8405  1F0F  1003               	clrc
  8406  1F10  0DA0               	rlf	___llmod@divisor,f
  8407  1F11  0DA1               	rlf	___llmod@divisor+1,f
  8408  1F12  0DA2               	rlf	___llmod@divisor+2,f
  8409  1F13  0DA3               	rlf	___llmod@divisor+3,f
  8410  1F14  0BA8               	decfsz	??___llmod,f
  8411  1F15  2F0F               	goto	u6265
  8412  1F16  3001               	movlw	1
  8413  1F17  00A8               	movwf	??___llmod
  8414  1F18  0828               	movf	??___llmod,w
  8415  1F19  07A9               	addwf	___llmod@counter,f
  8416  1F1A  2F0B               	goto	l4588
  8417  1F1B                     l4590:	
  8418  1F1B  0823               	movf	___llmod@divisor+3,w
  8419  1F1C  0227               	subwf	___llmod@dividend+3,w
  8420  1F1D  1D03               	skipz
  8421  1F1E  2F29               	goto	u6285
  8422  1F1F  0822               	movf	___llmod@divisor+2,w
  8423  1F20  0226               	subwf	___llmod@dividend+2,w
  8424  1F21  1D03               	skipz
  8425  1F22  2F29               	goto	u6285
  8426  1F23  0821               	movf	___llmod@divisor+1,w
  8427  1F24  0225               	subwf	___llmod@dividend+1,w
  8428  1F25  1D03               	skipz
  8429  1F26  2F29               	goto	u6285
  8430  1F27  0820               	movf	___llmod@divisor,w
  8431  1F28  0224               	subwf	___llmod@dividend,w
  8432  1F29                     u6285:	
  8433  1F29  1C03               	skipc
  8434  1F2A  2F39               	goto	l4594
  8435  1F2B  0820               	movf	___llmod@divisor,w
  8436  1F2C  02A4               	subwf	___llmod@dividend,f
  8437  1F2D  0821               	movf	___llmod@divisor+1,w
  8438  1F2E  1C03               	skipc
  8439  1F2F  0F21               	incfsz	___llmod@divisor+1,w
  8440  1F30  02A5               	subwf	___llmod@dividend+1,f
  8441  1F31  0822               	movf	___llmod@divisor+2,w
  8442  1F32  1C03               	skipc
  8443  1F33  0F22               	incfsz	___llmod@divisor+2,w
  8444  1F34  02A6               	subwf	___llmod@dividend+2,f
  8445  1F35  0823               	movf	___llmod@divisor+3,w
  8446  1F36  1C03               	skipc
  8447  1F37  0F23               	incfsz	___llmod@divisor+3,w
  8448  1F38  02A7               	subwf	___llmod@dividend+3,f
  8449  1F39                     l4594:	
  8450  1F39  3001               	movlw	1
  8451  1F3A                     u6295:	
  8452  1F3A  1003               	clrc
  8453  1F3B  0CA3               	rrf	___llmod@divisor+3,f
  8454  1F3C  0CA2               	rrf	___llmod@divisor+2,f
  8455  1F3D  0CA1               	rrf	___llmod@divisor+1,f
  8456  1F3E  0CA0               	rrf	___llmod@divisor,f
  8457  1F3F  3EFF               	addlw	-1
  8458  1F40  1D03               	skipz
  8459  1F41  2F3A               	goto	u6295
  8460  1F42  3001               	movlw	1
  8461  1F43  02A9               	subwf	___llmod@counter,f
  8462  1F44  1D03               	btfss	3,2
  8463  1F45  2F1B               	goto	l4590
  8464  1F46                     l4598:	
  8465  1F46  0827               	movf	___llmod@dividend+3,w
  8466  1F47  00A3               	movwf	?___llmod+3
  8467  1F48  0826               	movf	___llmod@dividend+2,w
  8468  1F49  00A2               	movwf	?___llmod+2
  8469  1F4A  0825               	movf	___llmod@dividend+1,w
  8470  1F4B  00A1               	movwf	?___llmod+1
  8471  1F4C  0824               	movf	___llmod@dividend,w
  8472  1F4D  00A0               	movwf	?___llmod
  8473  1F4E  0008               	return
  8474  1F4F                     __end_of___llmod:	
  8475                           
  8476                           	psect	text23
  8477  104B                     __ptext23:	
  8478 ;; *************** function ___lldiv *****************
  8479 ;; Defined at:
  8480 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
  8481 ;; Parameters:    Size  Location     Type
  8482 ;;  divisor         4    0[BANK0 ] unsigned long 
  8483 ;;  dividend        4    4[BANK0 ] unsigned long 
  8484 ;; Auto vars:     Size  Location     Type
  8485 ;;  quotient        4    9[BANK0 ] unsigned long 
  8486 ;;  counter         1   13[BANK0 ] unsigned char 
  8487 ;; Return value:  Size  Location     Type
  8488 ;;                  4    0[BANK0 ] unsigned long 
  8489 ;; Registers used:
  8490 ;;		wreg, status,2, status,0
  8491 ;; Tracked objects:
  8492 ;;		On entry : 0/0
  8493 ;;		On exit  : 0/0
  8494 ;;		Unchanged: 0/0
  8495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8496 ;;      Params:         0       8       0       0       0
  8497 ;;      Locals:         0       5       0       0       0
  8498 ;;      Temps:          0       1       0       0       0
  8499 ;;      Totals:         0      14       0       0       0
  8500 ;;Total ram usage:       14 bytes
  8501 ;; Hardware stack levels used:    1
  8502 ;; Hardware stack levels required when called:    1
  8503 ;; This function calls:
  8504 ;;		Nothing
  8505 ;; This function is called by:
  8506 ;;		_ultoa
  8507 ;; This function uses a non-reentrant model
  8508 ;;
  8509                           
  8510                           
  8511                           ;psect for function ___lldiv
  8512  104B                     ___lldiv:	
  8513                           
  8514                           ;incstack = 0
  8515                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  8516  104B  3000               	movlw	0
  8517  104C  1283               	bcf	3,5	;RP0=0, select bank0
  8518  104D  1303               	bcf	3,6	;RP1=0, select bank0
  8519  104E  00AC               	movwf	___lldiv@quotient+3
  8520  104F  3000               	movlw	0
  8521  1050  00AB               	movwf	___lldiv@quotient+2
  8522  1051  3000               	movlw	0
  8523  1052  00AA               	movwf	___lldiv@quotient+1
  8524  1053  3000               	movlw	0
  8525  1054  00A9               	movwf	___lldiv@quotient
  8526  1055  0823               	movf	___lldiv@divisor+3,w
  8527  1056  0422               	iorwf	___lldiv@divisor+2,w
  8528  1057  0421               	iorwf	___lldiv@divisor+1,w
  8529  1058  0420               	iorwf	___lldiv@divisor,w
  8530  1059  1903               	skipnz
  8531  105A  28A2               	goto	l4578
  8532  105B  01AD               	clrf	___lldiv@counter
  8533  105C  0AAD               	incf	___lldiv@counter,f
  8534  105D                     l4564:	
  8535  105D  1BA3               	btfsc	___lldiv@divisor+3,7
  8536  105E  286D               	goto	l4566
  8537  105F  3001               	movlw	1
  8538  1060  00A8               	movwf	??___lldiv
  8539  1061                     u6195:	
  8540  1061  1003               	clrc
  8541  1062  0DA0               	rlf	___lldiv@divisor,f
  8542  1063  0DA1               	rlf	___lldiv@divisor+1,f
  8543  1064  0DA2               	rlf	___lldiv@divisor+2,f
  8544  1065  0DA3               	rlf	___lldiv@divisor+3,f
  8545  1066  0BA8               	decfsz	??___lldiv,f
  8546  1067  2861               	goto	u6195
  8547  1068  3001               	movlw	1
  8548  1069  00A8               	movwf	??___lldiv
  8549  106A  0828               	movf	??___lldiv,w
  8550  106B  07AD               	addwf	___lldiv@counter,f
  8551  106C  285D               	goto	l4564
  8552  106D                     l4566:	
  8553  106D  3001               	movlw	1
  8554  106E  00A8               	movwf	??___lldiv
  8555  106F                     u6215:	
  8556  106F  1003               	clrc
  8557  1070  0DA9               	rlf	___lldiv@quotient,f
  8558  1071  0DAA               	rlf	___lldiv@quotient+1,f
  8559  1072  0DAB               	rlf	___lldiv@quotient+2,f
  8560  1073  0DAC               	rlf	___lldiv@quotient+3,f
  8561  1074  0BA8               	decfsz	??___lldiv,f
  8562  1075  286F               	goto	u6215
  8563  1076  0823               	movf	___lldiv@divisor+3,w
  8564  1077  0227               	subwf	___lldiv@dividend+3,w
  8565  1078  1D03               	skipz
  8566  1079  2884               	goto	u6225
  8567  107A  0822               	movf	___lldiv@divisor+2,w
  8568  107B  0226               	subwf	___lldiv@dividend+2,w
  8569  107C  1D03               	skipz
  8570  107D  2884               	goto	u6225
  8571  107E  0821               	movf	___lldiv@divisor+1,w
  8572  107F  0225               	subwf	___lldiv@dividend+1,w
  8573  1080  1D03               	skipz
  8574  1081  2884               	goto	u6225
  8575  1082  0820               	movf	___lldiv@divisor,w
  8576  1083  0224               	subwf	___lldiv@dividend,w
  8577  1084                     u6225:	
  8578  1084  1C03               	skipc
  8579  1085  2895               	goto	l4574
  8580  1086  0820               	movf	___lldiv@divisor,w
  8581  1087  02A4               	subwf	___lldiv@dividend,f
  8582  1088  0821               	movf	___lldiv@divisor+1,w
  8583  1089  1C03               	skipc
  8584  108A  0F21               	incfsz	___lldiv@divisor+1,w
  8585  108B  02A5               	subwf	___lldiv@dividend+1,f
  8586  108C  0822               	movf	___lldiv@divisor+2,w
  8587  108D  1C03               	skipc
  8588  108E  0F22               	incfsz	___lldiv@divisor+2,w
  8589  108F  02A6               	subwf	___lldiv@dividend+2,f
  8590  1090  0823               	movf	___lldiv@divisor+3,w
  8591  1091  1C03               	skipc
  8592  1092  0F23               	incfsz	___lldiv@divisor+3,w
  8593  1093  02A7               	subwf	___lldiv@dividend+3,f
  8594  1094  1429               	bsf	___lldiv@quotient,0
  8595  1095                     l4574:	
  8596  1095  3001               	movlw	1
  8597  1096                     u6235:	
  8598  1096  1003               	clrc
  8599  1097  0CA3               	rrf	___lldiv@divisor+3,f
  8600  1098  0CA2               	rrf	___lldiv@divisor+2,f
  8601  1099  0CA1               	rrf	___lldiv@divisor+1,f
  8602  109A  0CA0               	rrf	___lldiv@divisor,f
  8603  109B  3EFF               	addlw	-1
  8604  109C  1D03               	skipz
  8605  109D  2896               	goto	u6235
  8606  109E  3001               	movlw	1
  8607  109F  02AD               	subwf	___lldiv@counter,f
  8608  10A0  1D03               	btfss	3,2
  8609  10A1  286D               	goto	l4566
  8610  10A2                     l4578:	
  8611  10A2  082C               	movf	___lldiv@quotient+3,w
  8612  10A3  00A3               	movwf	?___lldiv+3
  8613  10A4  082B               	movf	___lldiv@quotient+2,w
  8614  10A5  00A2               	movwf	?___lldiv+2
  8615  10A6  082A               	movf	___lldiv@quotient+1,w
  8616  10A7  00A1               	movwf	?___lldiv+1
  8617  10A8  0829               	movf	___lldiv@quotient,w
  8618  10A9  00A0               	movwf	?___lldiv
  8619  10AA  0008               	return
  8620  10AB                     __end_of___lldiv:	
  8621                           
  8622                           	psect	text24
  8623  1119                     __ptext24:	
  8624 ;; *************** function ___fttol *****************
  8625 ;; Defined at:
  8626 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fttol.c"
  8627 ;; Parameters:    Size  Location     Type
  8628 ;;  f1              3   57[BANK0 ] float 
  8629 ;; Auto vars:     Size  Location     Type
  8630 ;;  lval            4   66[BANK0 ] unsigned long 
  8631 ;;  exp1            1   70[BANK0 ] unsigned char 
  8632 ;;  sign1           1   65[BANK0 ] unsigned char 
  8633 ;; Return value:  Size  Location     Type
  8634 ;;                  4   57[BANK0 ] long 
  8635 ;; Registers used:
  8636 ;;		wreg, status,2, status,0
  8637 ;; Tracked objects:
  8638 ;;		On entry : 0/0
  8639 ;;		On exit  : 0/0
  8640 ;;		Unchanged: 0/0
  8641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8642 ;;      Params:         0       4       0       0       0
  8643 ;;      Locals:         0       6       0       0       0
  8644 ;;      Temps:          0       4       0       0       0
  8645 ;;      Totals:         0      14       0       0       0
  8646 ;;Total ram usage:       14 bytes
  8647 ;; Hardware stack levels used:    1
  8648 ;; Hardware stack levels required when called:    1
  8649 ;; This function calls:
  8650 ;;		Nothing
  8651 ;; This function is called by:
  8652 ;;		_LCD_display_float
  8653 ;;		_temperatureReader
  8654 ;; This function uses a non-reentrant model
  8655 ;;
  8656                           
  8657                           
  8658                           ;psect for function ___fttol
  8659  1119                     ___fttol:	
  8660                           
  8661                           ;incstack = 0
  8662                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8663  1119  1283               	bcf	3,5	;RP0=0, select bank0
  8664  111A  1303               	bcf	3,6	;RP1=0, select bank0
  8665  111B  0859               	movf	___fttol@f1,w
  8666  111C  00DD               	movwf	??___fttol
  8667  111D  085A               	movf	___fttol@f1+1,w
  8668  111E  00DE               	movwf	??___fttol+1
  8669  111F  085B               	movf	___fttol@f1+2,w
  8670  1120  00DF               	movwf	??___fttol+2
  8671  1121  1003               	clrc
  8672  1122  0D5E               	rlf	??___fttol+1,w
  8673  1123  0D5F               	rlf	??___fttol+2,w
  8674  1124  00E0               	movwf	??___fttol+3
  8675  1125  0860               	movf	??___fttol+3,w
  8676  1126  00E6               	movwf	___fttol@exp1
  8677  1127  0866               	movf	___fttol@exp1,w
  8678  1128  1D03               	btfss	3,2
  8679  1129  2933               	goto	l3260
  8680  112A  3000               	movlw	0
  8681  112B  00DC               	movwf	?___fttol+3
  8682  112C  3000               	movlw	0
  8683  112D  00DB               	movwf	?___fttol+2
  8684  112E  3000               	movlw	0
  8685  112F  00DA               	movwf	?___fttol+1
  8686  1130  3000               	movlw	0
  8687  1131  00D9               	movwf	?___fttol
  8688  1132  0008               	return
  8689  1133                     l3260:	
  8690  1133  0859               	movf	___fttol@f1,w
  8691  1134  00DD               	movwf	??___fttol
  8692  1135  085A               	movf	___fttol@f1+1,w
  8693  1136  00DE               	movwf	??___fttol+1
  8694  1137  085B               	movf	___fttol@f1+2,w
  8695  1138  00DF               	movwf	??___fttol+2
  8696  1139  3017               	movlw	23
  8697  113A                     u3955:	
  8698  113A  1003               	clrc
  8699  113B  0CDF               	rrf	??___fttol+2,f
  8700  113C  0CDE               	rrf	??___fttol+1,f
  8701  113D  0CDD               	rrf	??___fttol,f
  8702  113E  3EFF               	addlw	-1
  8703  113F  1D03               	skipz
  8704  1140  293A               	goto	u3955
  8705  1141  085D               	movf	??___fttol,w
  8706  1142  00E0               	movwf	??___fttol+3
  8707  1143  0860               	movf	??___fttol+3,w
  8708  1144  00E1               	movwf	___fttol@sign1
  8709  1145  17DA               	bsf	___fttol@f1+1,7
  8710  1146  30FF               	movlw	255
  8711  1147  05D9               	andwf	___fttol@f1,f
  8712  1148  30FF               	movlw	255
  8713  1149  05DA               	andwf	___fttol@f1+1,f
  8714  114A  3000               	movlw	0
  8715  114B  05DB               	andwf	___fttol@f1+2,f
  8716  114C  0859               	movf	___fttol@f1,w
  8717  114D  00E2               	movwf	___fttol@lval
  8718  114E  085A               	movf	___fttol@f1+1,w
  8719  114F  00E3               	movwf	___fttol@lval+1
  8720  1150  085B               	movf	___fttol@f1+2,w
  8721  1151  00E4               	movwf	___fttol@lval+2
  8722  1152  01E5               	clrf	___fttol@lval+3
  8723  1153  308E               	movlw	142
  8724  1154  02E6               	subwf	___fttol@exp1,f
  8725  1155  1FE6               	btfss	___fttol@exp1,7
  8726  1156  2975               	goto	l3280
  8727  1157  0866               	movf	___fttol@exp1,w
  8728  1158  3A80               	xorlw	128
  8729  1159  3E8F               	addlw	143
  8730  115A  1803               	skipnc
  8731  115B  2965               	goto	l3278
  8732  115C  3000               	movlw	0
  8733  115D  00DC               	movwf	?___fttol+3
  8734  115E  3000               	movlw	0
  8735  115F  00DB               	movwf	?___fttol+2
  8736  1160  3000               	movlw	0
  8737  1161  00DA               	movwf	?___fttol+1
  8738  1162  3000               	movlw	0
  8739  1163  00D9               	movwf	?___fttol
  8740  1164  0008               	return
  8741  1165                     l3278:	
  8742  1165  3001               	movlw	1
  8743  1166                     u3985:	
  8744  1166  1003               	clrc
  8745  1167  0CE5               	rrf	___fttol@lval+3,f
  8746  1168  0CE4               	rrf	___fttol@lval+2,f
  8747  1169  0CE3               	rrf	___fttol@lval+1,f
  8748  116A  0CE2               	rrf	___fttol@lval,f
  8749  116B  3EFF               	addlw	-1
  8750  116C  1D03               	skipz
  8751  116D  2966               	goto	u3985
  8752  116E  3001               	movlw	1
  8753  116F  00DD               	movwf	??___fttol
  8754  1170  085D               	movf	??___fttol,w
  8755  1171  07E6               	addwf	___fttol@exp1,f
  8756  1172  1903               	btfsc	3,2
  8757  1173  2990               	goto	l3288
  8758  1174  2965               	goto	l3278
  8759  1175                     l3280:	
  8760  1175  3018               	movlw	24
  8761  1176  0266               	subwf	___fttol@exp1,w
  8762  1177  1C03               	skipc
  8763  1178  298D               	goto	l1110
  8764  1179  3000               	movlw	0
  8765  117A  00DC               	movwf	?___fttol+3
  8766  117B  3000               	movlw	0
  8767  117C  00DB               	movwf	?___fttol+2
  8768  117D  3000               	movlw	0
  8769  117E  00DA               	movwf	?___fttol+1
  8770  117F  3000               	movlw	0
  8771  1180  00D9               	movwf	?___fttol
  8772  1181  0008               	return
  8773  1182                     l3286:	
  8774  1182  3001               	movlw	1
  8775  1183  00DD               	movwf	??___fttol
  8776  1184                     u4015:	
  8777  1184  1003               	clrc
  8778  1185  0DE2               	rlf	___fttol@lval,f
  8779  1186  0DE3               	rlf	___fttol@lval+1,f
  8780  1187  0DE4               	rlf	___fttol@lval+2,f
  8781  1188  0DE5               	rlf	___fttol@lval+3,f
  8782  1189  0BDD               	decfsz	??___fttol,f
  8783  118A  2984               	goto	u4015
  8784  118B  3001               	movlw	1
  8785  118C  02E6               	subwf	___fttol@exp1,f
  8786  118D                     l1110:	
  8787  118D  0866               	movf	___fttol@exp1,w
  8788  118E  1D03               	btfss	3,2
  8789  118F  2982               	goto	l3286
  8790  1190                     l3288:	
  8791  1190  0861               	movf	___fttol@sign1,w
  8792  1191  1903               	btfsc	3,2
  8793  1192  299E               	goto	l3292
  8794  1193  09E2               	comf	___fttol@lval,f
  8795  1194  09E3               	comf	___fttol@lval+1,f
  8796  1195  09E4               	comf	___fttol@lval+2,f
  8797  1196  09E5               	comf	___fttol@lval+3,f
  8798  1197  0AE2               	incf	___fttol@lval,f
  8799  1198  1903               	skipnz
  8800  1199  0AE3               	incf	___fttol@lval+1,f
  8801  119A  1903               	skipnz
  8802  119B  0AE4               	incf	___fttol@lval+2,f
  8803  119C  1903               	skipnz
  8804  119D  0AE5               	incf	___fttol@lval+3,f
  8805  119E                     l3292:	
  8806  119E  0865               	movf	___fttol@lval+3,w
  8807  119F  00DC               	movwf	?___fttol+3
  8808  11A0  0864               	movf	___fttol@lval+2,w
  8809  11A1  00DB               	movwf	?___fttol+2
  8810  11A2  0863               	movf	___fttol@lval+1,w
  8811  11A3  00DA               	movwf	?___fttol+1
  8812  11A4  0862               	movf	___fttol@lval,w
  8813  11A5  00D9               	movwf	?___fttol
  8814  11A6  0008               	return
  8815  11A7                     __end_of___fttol:	
  8816                           
  8817                           	psect	text25
  8818  1D5D                     __ptext25:	
  8819 ;; *************** function ___ftsub *****************
  8820 ;; Defined at:
  8821 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftsub.c"
  8822 ;; Parameters:    Size  Location     Type
  8823 ;;  f2              3   57[BANK0 ] float 
  8824 ;;  f1              3   60[BANK0 ] float 
  8825 ;; Auto vars:     Size  Location     Type
  8826 ;;		None
  8827 ;; Return value:  Size  Location     Type
  8828 ;;                  3   57[BANK0 ] float 
  8829 ;; Registers used:
  8830 ;;		wreg, status,2, status,0, pclath, cstack
  8831 ;; Tracked objects:
  8832 ;;		On entry : 0/0
  8833 ;;		On exit  : 0/0
  8834 ;;		Unchanged: 0/0
  8835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8836 ;;      Params:         0       6       0       0       0
  8837 ;;      Locals:         0       0       0       0       0
  8838 ;;      Temps:          0       0       0       0       0
  8839 ;;      Totals:         0       6       0       0       0
  8840 ;;Total ram usage:        6 bytes
  8841 ;; Hardware stack levels used:    1
  8842 ;; Hardware stack levels required when called:    3
  8843 ;; This function calls:
  8844 ;;		___ftadd
  8845 ;; This function is called by:
  8846 ;;		_LCD_display_float
  8847 ;; This function uses a non-reentrant model
  8848 ;;
  8849                           
  8850                           
  8851                           ;psect for function ___ftsub
  8852  1D5D                     ___ftsub:	
  8853                           
  8854                           ;incstack = 0
  8855                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  8856  1D5D  1283               	bcf	3,5	;RP0=0, select bank0
  8857  1D5E  1303               	bcf	3,6	;RP1=0, select bank0
  8858  1D5F  085B               	movf	___ftsub@f2+2,w
  8859  1D60  045A               	iorwf	___ftsub@f2+1,w
  8860  1D61  0459               	iorwf	___ftsub@f2,w
  8861  1D62  1903               	skipnz
  8862  1D63  2D66               	goto	l4828
  8863  1D64  3080               	movlw	128
  8864  1D65  06DB               	xorwf	___ftsub@f2+2,f
  8865  1D66                     l4828:	
  8866  1D66  085C               	movf	___ftsub@f1,w
  8867  1D67  00CC               	movwf	___ftadd@f1
  8868  1D68  085D               	movf	___ftsub@f1+1,w
  8869  1D69  00CD               	movwf	___ftadd@f1+1
  8870  1D6A  085E               	movf	___ftsub@f1+2,w
  8871  1D6B  00CE               	movwf	___ftadd@f1+2
  8872  1D6C  0859               	movf	___ftsub@f2,w
  8873  1D6D  00CF               	movwf	___ftadd@f2
  8874  1D6E  085A               	movf	___ftsub@f2+1,w
  8875  1D6F  00D0               	movwf	___ftadd@f2+1
  8876  1D70  085B               	movf	___ftsub@f2+2,w
  8877  1D71  00D1               	movwf	___ftadd@f2+2
  8878  1D72  120A  158A  2186   	fcall	___ftadd
  8879  1D75  1283               	bcf	3,5	;RP0=0, select bank0
  8880  1D76  1303               	bcf	3,6	;RP1=0, select bank0
  8881  1D77  084C               	movf	?___ftadd,w
  8882  1D78  00D9               	movwf	?___ftsub
  8883  1D79  084D               	movf	?___ftadd+1,w
  8884  1D7A  00DA               	movwf	?___ftsub+1
  8885  1D7B  084E               	movf	?___ftadd+2,w
  8886  1D7C  00DB               	movwf	?___ftsub+2
  8887  1D7D  0008               	return
  8888  1D7E                     __end_of___ftsub:	
  8889                           
  8890                           	psect	text26
  8891  0986                     __ptext26:	
  8892 ;; *************** function ___ftadd *****************
  8893 ;; Defined at:
  8894 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftadd.c"
  8895 ;; Parameters:    Size  Location     Type
  8896 ;;  f1              3   44[BANK0 ] float 
  8897 ;;  f2              3   47[BANK0 ] float 
  8898 ;; Auto vars:     Size  Location     Type
  8899 ;;  exp1            1   56[BANK0 ] unsigned char 
  8900 ;;  exp2            1   55[BANK0 ] unsigned char 
  8901 ;;  sign            1   54[BANK0 ] unsigned char 
  8902 ;; Return value:  Size  Location     Type
  8903 ;;                  3   44[BANK0 ] float 
  8904 ;; Registers used:
  8905 ;;		wreg, status,2, status,0, pclath, cstack
  8906 ;; Tracked objects:
  8907 ;;		On entry : 0/0
  8908 ;;		On exit  : 0/0
  8909 ;;		Unchanged: 0/0
  8910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8911 ;;      Params:         0       6       0       0       0
  8912 ;;      Locals:         0       3       0       0       0
  8913 ;;      Temps:          0       4       0       0       0
  8914 ;;      Totals:         0      13       0       0       0
  8915 ;;Total ram usage:       13 bytes
  8916 ;; Hardware stack levels used:    1
  8917 ;; Hardware stack levels required when called:    2
  8918 ;; This function calls:
  8919 ;;		___ftpack
  8920 ;; This function is called by:
  8921 ;;		_LCD_display_float
  8922 ;;		_humidityReader
  8923 ;;		_temperatureReader
  8924 ;;		___ftsub
  8925 ;; This function uses a non-reentrant model
  8926 ;;
  8927                           
  8928                           
  8929                           ;psect for function ___ftadd
  8930  0986                     ___ftadd:	
  8931                           
  8932                           ;incstack = 0
  8933                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8934  0986  1283               	bcf	3,5	;RP0=0, select bank0
  8935  0987  1303               	bcf	3,6	;RP1=0, select bank0
  8936  0988  084C               	movf	___ftadd@f1,w
  8937  0989  00D2               	movwf	??___ftadd
  8938  098A  084D               	movf	___ftadd@f1+1,w
  8939  098B  00D3               	movwf	??___ftadd+1
  8940  098C  084E               	movf	___ftadd@f1+2,w
  8941  098D  00D4               	movwf	??___ftadd+2
  8942  098E  1003               	clrc
  8943  098F  0D53               	rlf	??___ftadd+1,w
  8944  0990  0D54               	rlf	??___ftadd+2,w
  8945  0991  00D5               	movwf	??___ftadd+3
  8946  0992  0855               	movf	??___ftadd+3,w
  8947  0993  00D8               	movwf	___ftadd@exp1
  8948  0994  084F               	movf	___ftadd@f2,w
  8949  0995  00D2               	movwf	??___ftadd
  8950  0996  0850               	movf	___ftadd@f2+1,w
  8951  0997  00D3               	movwf	??___ftadd+1
  8952  0998  0851               	movf	___ftadd@f2+2,w
  8953  0999  00D4               	movwf	??___ftadd+2
  8954  099A  1003               	clrc
  8955  099B  0D53               	rlf	??___ftadd+1,w
  8956  099C  0D54               	rlf	??___ftadd+2,w
  8957  099D  00D5               	movwf	??___ftadd+3
  8958  099E  0855               	movf	??___ftadd+3,w
  8959  099F  00D7               	movwf	___ftadd@exp2
  8960  09A0  0858               	movf	___ftadd@exp1,w
  8961  09A1  1903               	btfsc	3,2
  8962  09A2  29AF               	goto	l4618
  8963  09A3  0857               	movf	___ftadd@exp2,w
  8964  09A4  0258               	subwf	___ftadd@exp1,w
  8965  09A5  1803               	skipnc
  8966  09A6  29B6               	goto	l4622
  8967  09A7  0358               	decf	___ftadd@exp1,w
  8968  09A8  3AFF               	xorlw	255
  8969  09A9  0757               	addwf	___ftadd@exp2,w
  8970  09AA  00D2               	movwf	??___ftadd
  8971  09AB  3019               	movlw	25
  8972  09AC  0252               	subwf	??___ftadd,w
  8973  09AD  1C03               	skipc
  8974  09AE  29B6               	goto	l4622
  8975  09AF                     l4618:	
  8976  09AF  084F               	movf	___ftadd@f2,w
  8977  09B0  00CC               	movwf	?___ftadd
  8978  09B1  0850               	movf	___ftadd@f2+1,w
  8979  09B2  00CD               	movwf	?___ftadd+1
  8980  09B3  0851               	movf	___ftadd@f2+2,w
  8981  09B4  00CE               	movwf	?___ftadd+2
  8982  09B5  0008               	return
  8983  09B6                     l4622:	
  8984  09B6  0857               	movf	___ftadd@exp2,w
  8985  09B7  1903               	btfsc	3,2
  8986  09B8  0008               	return
  8987  09B9  0858               	movf	___ftadd@exp1,w
  8988  09BA  0257               	subwf	___ftadd@exp2,w
  8989  09BB  1803               	skipnc
  8990  09BC  29C5               	goto	l4628
  8991  09BD  0357               	decf	___ftadd@exp2,w
  8992  09BE  3AFF               	xorlw	255
  8993  09BF  0758               	addwf	___ftadd@exp1,w
  8994  09C0  00D2               	movwf	??___ftadd
  8995  09C1  3019               	movlw	25
  8996  09C2  0252               	subwf	??___ftadd,w
  8997  09C3  1803               	btfsc	3,0
  8998  09C4  0008               	return
  8999  09C5                     l4628:	
  9000  09C5  3006               	movlw	6
  9001  09C6  00D2               	movwf	??___ftadd
  9002  09C7  0852               	movf	??___ftadd,w
  9003  09C8  00D6               	movwf	___ftadd@sign
  9004  09C9  1BCE               	btfsc	___ftadd@f1+2,7
  9005  09CA  17D6               	bsf	___ftadd@sign,7
  9006  09CB  1BD1               	btfsc	___ftadd@f2+2,7
  9007  09CC  1756               	bsf	___ftadd@sign,6
  9008  09CD  17CD               	bsf	___ftadd@f1+1,7
  9009  09CE  30FF               	movlw	255
  9010  09CF  05CC               	andwf	___ftadd@f1,f
  9011  09D0  30FF               	movlw	255
  9012  09D1  05CD               	andwf	___ftadd@f1+1,f
  9013  09D2  3000               	movlw	0
  9014  09D3  05CE               	andwf	___ftadd@f1+2,f
  9015  09D4  17D0               	bsf	___ftadd@f2+1,7
  9016  09D5  30FF               	movlw	255
  9017  09D6  05CF               	andwf	___ftadd@f2,f
  9018  09D7  30FF               	movlw	255
  9019  09D8  05D0               	andwf	___ftadd@f2+1,f
  9020  09D9  3000               	movlw	0
  9021  09DA  05D1               	andwf	___ftadd@f2+2,f
  9022  09DB  0857               	movf	___ftadd@exp2,w
  9023  09DC  0258               	subwf	___ftadd@exp1,w
  9024  09DD  1803               	skipnc
  9025  09DE  2A05               	goto	l4650
  9026  09DF                     l4640:	
  9027  09DF  3001               	movlw	1
  9028  09E0                     u6425:	
  9029  09E0  1003               	clrc
  9030  09E1  0DCF               	rlf	___ftadd@f2,f
  9031  09E2  0DD0               	rlf	___ftadd@f2+1,f
  9032  09E3  0DD1               	rlf	___ftadd@f2+2,f
  9033  09E4  3EFF               	addlw	-1
  9034  09E5  1D03               	skipz
  9035  09E6  29E0               	goto	u6425
  9036  09E7  3001               	movlw	1
  9037  09E8  02D7               	subwf	___ftadd@exp2,f
  9038  09E9  0857               	movf	___ftadd@exp2,w
  9039  09EA  0658               	xorwf	___ftadd@exp1,w
  9040  09EB  1903               	skipnz
  9041  09EC  2A00               	goto	l4648
  9042  09ED  3001               	movlw	1
  9043  09EE  02D6               	subwf	___ftadd@sign,f
  9044  09EF  0856               	movf	___ftadd@sign,w
  9045  09F0  3907               	andlw	7
  9046  09F1  1903               	btfsc	3,2
  9047  09F2  2A00               	goto	l4648
  9048  09F3  29DF               	goto	l4640
  9049  09F4                     l4646:	
  9050  09F4  3001               	movlw	1
  9051  09F5                     u6455:	
  9052  09F5  1003               	clrc
  9053  09F6  0CCE               	rrf	___ftadd@f1+2,f
  9054  09F7  0CCD               	rrf	___ftadd@f1+1,f
  9055  09F8  0CCC               	rrf	___ftadd@f1,f
  9056  09F9  3EFF               	addlw	-1
  9057  09FA  1D03               	skipz
  9058  09FB  29F5               	goto	u6455
  9059  09FC  3001               	movlw	1
  9060  09FD  00D2               	movwf	??___ftadd
  9061  09FE  0852               	movf	??___ftadd,w
  9062  09FF  07D8               	addwf	___ftadd@exp1,f
  9063  0A00                     l4648:	
  9064  0A00  0858               	movf	___ftadd@exp1,w
  9065  0A01  0657               	xorwf	___ftadd@exp2,w
  9066  0A02  1903               	btfsc	3,2
  9067  0A03  2A2E               	goto	l1050
  9068  0A04  29F4               	goto	l4646
  9069  0A05                     l4650:	
  9070  0A05  0858               	movf	___ftadd@exp1,w
  9071  0A06  0257               	subwf	___ftadd@exp2,w
  9072  0A07  1803               	skipnc
  9073  0A08  2A2E               	goto	l1050
  9074  0A09                     l4652:	
  9075  0A09  3001               	movlw	1
  9076  0A0A                     u6485:	
  9077  0A0A  1003               	clrc
  9078  0A0B  0DCC               	rlf	___ftadd@f1,f
  9079  0A0C  0DCD               	rlf	___ftadd@f1+1,f
  9080  0A0D  0DCE               	rlf	___ftadd@f1+2,f
  9081  0A0E  3EFF               	addlw	-1
  9082  0A0F  1D03               	skipz
  9083  0A10  2A0A               	goto	u6485
  9084  0A11  3001               	movlw	1
  9085  0A12  02D8               	subwf	___ftadd@exp1,f
  9086  0A13  0857               	movf	___ftadd@exp2,w
  9087  0A14  0658               	xorwf	___ftadd@exp1,w
  9088  0A15  1903               	skipnz
  9089  0A16  2A2A               	goto	l4660
  9090  0A17  3001               	movlw	1
  9091  0A18  02D6               	subwf	___ftadd@sign,f
  9092  0A19  0856               	movf	___ftadd@sign,w
  9093  0A1A  3907               	andlw	7
  9094  0A1B  1903               	btfsc	3,2
  9095  0A1C  2A2A               	goto	l4660
  9096  0A1D  2A09               	goto	l4652
  9097  0A1E                     l4658:	
  9098  0A1E  3001               	movlw	1
  9099  0A1F                     u6515:	
  9100  0A1F  1003               	clrc
  9101  0A20  0CD1               	rrf	___ftadd@f2+2,f
  9102  0A21  0CD0               	rrf	___ftadd@f2+1,f
  9103  0A22  0CCF               	rrf	___ftadd@f2,f
  9104  0A23  3EFF               	addlw	-1
  9105  0A24  1D03               	skipz
  9106  0A25  2A1F               	goto	u6515
  9107  0A26  3001               	movlw	1
  9108  0A27  00D2               	movwf	??___ftadd
  9109  0A28  0852               	movf	??___ftadd,w
  9110  0A29  07D7               	addwf	___ftadd@exp2,f
  9111  0A2A                     l4660:	
  9112  0A2A  0858               	movf	___ftadd@exp1,w
  9113  0A2B  0657               	xorwf	___ftadd@exp2,w
  9114  0A2C  1D03               	skipz
  9115  0A2D  2A1E               	goto	l4658
  9116  0A2E                     l1050:	
  9117  0A2E  1FD6               	btfss	___ftadd@sign,7
  9118  0A2F  2A40               	goto	l4664
  9119  0A30  30FF               	movlw	255
  9120  0A31  06CC               	xorwf	___ftadd@f1,f
  9121  0A32  30FF               	movlw	255
  9122  0A33  06CD               	xorwf	___ftadd@f1+1,f
  9123  0A34  30FF               	movlw	255
  9124  0A35  06CE               	xorwf	___ftadd@f1+2,f
  9125  0A36  3001               	movlw	1
  9126  0A37  07CC               	addwf	___ftadd@f1,f
  9127  0A38  3000               	movlw	0
  9128  0A39  1803               	skipnc
  9129  0A3A  3001               	movlw	1
  9130  0A3B  07CD               	addwf	___ftadd@f1+1,f
  9131  0A3C  3000               	movlw	0
  9132  0A3D  1803               	skipnc
  9133  0A3E  3001               	movlw	1
  9134  0A3F  07CE               	addwf	___ftadd@f1+2,f
  9135  0A40                     l4664:	
  9136  0A40  1F56               	btfss	___ftadd@sign,6
  9137  0A41  2A52               	goto	l4668
  9138  0A42  30FF               	movlw	255
  9139  0A43  06CF               	xorwf	___ftadd@f2,f
  9140  0A44  30FF               	movlw	255
  9141  0A45  06D0               	xorwf	___ftadd@f2+1,f
  9142  0A46  30FF               	movlw	255
  9143  0A47  06D1               	xorwf	___ftadd@f2+2,f
  9144  0A48  3001               	movlw	1
  9145  0A49  07CF               	addwf	___ftadd@f2,f
  9146  0A4A  3000               	movlw	0
  9147  0A4B  1803               	skipnc
  9148  0A4C  3001               	movlw	1
  9149  0A4D  07D0               	addwf	___ftadd@f2+1,f
  9150  0A4E  3000               	movlw	0
  9151  0A4F  1803               	skipnc
  9152  0A50  3001               	movlw	1
  9153  0A51  07D1               	addwf	___ftadd@f2+2,f
  9154  0A52                     l4668:	
  9155  0A52  01D6               	clrf	___ftadd@sign
  9156  0A53  084C               	movf	___ftadd@f1,w
  9157  0A54  07CF               	addwf	___ftadd@f2,f
  9158  0A55  084D               	movf	___ftadd@f1+1,w
  9159  0A56  1103               	clrz
  9160  0A57  1803               	skipnc
  9161  0A58  0A4D               	incf	___ftadd@f1+1,w
  9162  0A59  1D03               	btfss	3,2
  9163  0A5A  07D0               	addwf	___ftadd@f2+1,f
  9164  0A5B  084E               	movf	___ftadd@f1+2,w
  9165  0A5C  1103               	clrz
  9166  0A5D  1803               	skipnc
  9167  0A5E  0A4E               	incf	___ftadd@f1+2,w
  9168  0A5F  1D03               	btfss	3,2
  9169  0A60  07D1               	addwf	___ftadd@f2+2,f
  9170  0A61  1FD1               	btfss	___ftadd@f2+2,7
  9171  0A62  2A75               	goto	l4678
  9172  0A63  30FF               	movlw	255
  9173  0A64  06CF               	xorwf	___ftadd@f2,f
  9174  0A65  30FF               	movlw	255
  9175  0A66  06D0               	xorwf	___ftadd@f2+1,f
  9176  0A67  30FF               	movlw	255
  9177  0A68  06D1               	xorwf	___ftadd@f2+2,f
  9178  0A69  3001               	movlw	1
  9179  0A6A  07CF               	addwf	___ftadd@f2,f
  9180  0A6B  3000               	movlw	0
  9181  0A6C  1803               	skipnc
  9182  0A6D  3001               	movlw	1
  9183  0A6E  07D0               	addwf	___ftadd@f2+1,f
  9184  0A6F  3000               	movlw	0
  9185  0A70  1803               	skipnc
  9186  0A71  3001               	movlw	1
  9187  0A72  07D1               	addwf	___ftadd@f2+2,f
  9188  0A73  01D6               	clrf	___ftadd@sign
  9189  0A74  0AD6               	incf	___ftadd@sign,f
  9190  0A75                     l4678:	
  9191  0A75  084F               	movf	___ftadd@f2,w
  9192  0A76  00A0               	movwf	___ftpack@arg
  9193  0A77  0850               	movf	___ftadd@f2+1,w
  9194  0A78  00A1               	movwf	___ftpack@arg+1
  9195  0A79  0851               	movf	___ftadd@f2+2,w
  9196  0A7A  00A2               	movwf	___ftpack@arg+2
  9197  0A7B  0858               	movf	___ftadd@exp1,w
  9198  0A7C  00D2               	movwf	??___ftadd
  9199  0A7D  0852               	movf	??___ftadd,w
  9200  0A7E  00A3               	movwf	___ftpack@exp
  9201  0A7F  0856               	movf	___ftadd@sign,w
  9202  0A80  00D3               	movwf	??___ftadd+1
  9203  0A81  0853               	movf	??___ftadd+1,w
  9204  0A82  00A4               	movwf	___ftpack@sign
  9205  0A83  160A  118A  20AB   	fcall	___ftpack
  9206  0A86  1283               	bcf	3,5	;RP0=0, select bank0
  9207  0A87  1303               	bcf	3,6	;RP1=0, select bank0
  9208  0A88  0820               	movf	?___ftpack,w
  9209  0A89  00CC               	movwf	?___ftadd
  9210  0A8A  0821               	movf	?___ftpack+1,w
  9211  0A8B  00CD               	movwf	?___ftadd+1
  9212  0A8C  0822               	movf	?___ftpack+2,w
  9213  0A8D  00CE               	movwf	?___ftadd+2
  9214  0A8E  0008               	return
  9215  0A8F                     __end_of___ftadd:	
  9216                           
  9217                           	psect	text27
  9218  163B                     __ptext27:	
  9219 ;; *************** function ___ftmul *****************
  9220 ;; Defined at:
  9221 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftmul.c"
  9222 ;; Parameters:    Size  Location     Type
  9223 ;;  f1              3   28[BANK0 ] float 
  9224 ;;  f2              3   31[BANK0 ] float 
  9225 ;; Auto vars:     Size  Location     Type
  9226 ;;  f3_as_produc    3   39[BANK0 ] unsigned um
  9227 ;;  sign            1   43[BANK0 ] unsigned char 
  9228 ;;  cntr            1   42[BANK0 ] unsigned char 
  9229 ;;  exp             1   38[BANK0 ] unsigned char 
  9230 ;; Return value:  Size  Location     Type
  9231 ;;                  3   28[BANK0 ] float 
  9232 ;; Registers used:
  9233 ;;		wreg, status,2, status,0, pclath, cstack
  9234 ;; Tracked objects:
  9235 ;;		On entry : 0/0
  9236 ;;		On exit  : 0/0
  9237 ;;		Unchanged: 0/0
  9238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9239 ;;      Params:         0       6       0       0       0
  9240 ;;      Locals:         0       6       0       0       0
  9241 ;;      Temps:          0       4       0       0       0
  9242 ;;      Totals:         0      16       0       0       0
  9243 ;;Total ram usage:       16 bytes
  9244 ;; Hardware stack levels used:    1
  9245 ;; Hardware stack levels required when called:    2
  9246 ;; This function calls:
  9247 ;;		___ftpack
  9248 ;; This function is called by:
  9249 ;;		_LCD_display_float
  9250 ;;		_humidityReader
  9251 ;;		_temperatureReader
  9252 ;; This function uses a non-reentrant model
  9253 ;;
  9254                           
  9255                           
  9256                           ;psect for function ___ftmul
  9257  163B                     ___ftmul:	
  9258                           
  9259                           ;incstack = 0
  9260                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  9261  163B  1283               	bcf	3,5	;RP0=0, select bank0
  9262  163C  1303               	bcf	3,6	;RP1=0, select bank0
  9263  163D  083C               	movf	___ftmul@f1,w
  9264  163E  00C2               	movwf	??___ftmul
  9265  163F  083D               	movf	___ftmul@f1+1,w
  9266  1640  00C3               	movwf	??___ftmul+1
  9267  1641  083E               	movf	___ftmul@f1+2,w
  9268  1642  00C4               	movwf	??___ftmul+2
  9269  1643  1003               	clrc
  9270  1644  0D43               	rlf	??___ftmul+1,w
  9271  1645  0D44               	rlf	??___ftmul+2,w
  9272  1646  00C5               	movwf	??___ftmul+3
  9273  1647  0845               	movf	??___ftmul+3,w
  9274  1648  00C6               	movwf	___ftmul@exp
  9275  1649  0846               	movf	___ftmul@exp,w
  9276  164A  1D03               	btfss	3,2
  9277  164B  2E53               	goto	l4780
  9278  164C  3000               	movlw	0
  9279  164D  00BC               	movwf	?___ftmul
  9280  164E  3000               	movlw	0
  9281  164F  00BD               	movwf	?___ftmul+1
  9282  1650  3000               	movlw	0
  9283  1651  00BE               	movwf	?___ftmul+2
  9284  1652  0008               	return
  9285  1653                     l4780:	
  9286  1653  083F               	movf	___ftmul@f2,w
  9287  1654  00C2               	movwf	??___ftmul
  9288  1655  0840               	movf	___ftmul@f2+1,w
  9289  1656  00C3               	movwf	??___ftmul+1
  9290  1657  0841               	movf	___ftmul@f2+2,w
  9291  1658  00C4               	movwf	??___ftmul+2
  9292  1659  1003               	clrc
  9293  165A  0D43               	rlf	??___ftmul+1,w
  9294  165B  0D44               	rlf	??___ftmul+2,w
  9295  165C  00C5               	movwf	??___ftmul+3
  9296  165D  0845               	movf	??___ftmul+3,w
  9297  165E  00CB               	movwf	___ftmul@sign
  9298  165F  084B               	movf	___ftmul@sign,w
  9299  1660  1D03               	btfss	3,2
  9300  1661  2E69               	goto	l4786
  9301  1662  3000               	movlw	0
  9302  1663  00BC               	movwf	?___ftmul
  9303  1664  3000               	movlw	0
  9304  1665  00BD               	movwf	?___ftmul+1
  9305  1666  3000               	movlw	0
  9306  1667  00BE               	movwf	?___ftmul+2
  9307  1668  0008               	return
  9308  1669                     l4786:	
  9309  1669  084B               	movf	___ftmul@sign,w
  9310  166A  3E7B               	addlw	123
  9311  166B  00C2               	movwf	??___ftmul
  9312  166C  0842               	movf	??___ftmul,w
  9313  166D  07C6               	addwf	___ftmul@exp,f
  9314  166E  083C               	movf	___ftmul@f1,w
  9315  166F  00C2               	movwf	??___ftmul
  9316  1670  083D               	movf	___ftmul@f1+1,w
  9317  1671  00C3               	movwf	??___ftmul+1
  9318  1672  083E               	movf	___ftmul@f1+2,w
  9319  1673  00C4               	movwf	??___ftmul+2
  9320  1674  3010               	movlw	16
  9321  1675                     u6735:	
  9322  1675  1003               	clrc
  9323  1676  0CC4               	rrf	??___ftmul+2,f
  9324  1677  0CC3               	rrf	??___ftmul+1,f
  9325  1678  0CC2               	rrf	??___ftmul,f
  9326  1679  3EFF               	addlw	-1
  9327  167A  1D03               	skipz
  9328  167B  2E75               	goto	u6735
  9329  167C  0842               	movf	??___ftmul,w
  9330  167D  00C5               	movwf	??___ftmul+3
  9331  167E  0845               	movf	??___ftmul+3,w
  9332  167F  00CB               	movwf	___ftmul@sign
  9333  1680  083F               	movf	___ftmul@f2,w
  9334  1681  00C2               	movwf	??___ftmul
  9335  1682  0840               	movf	___ftmul@f2+1,w
  9336  1683  00C3               	movwf	??___ftmul+1
  9337  1684  0841               	movf	___ftmul@f2+2,w
  9338  1685  00C4               	movwf	??___ftmul+2
  9339  1686  3010               	movlw	16
  9340  1687                     u6745:	
  9341  1687  1003               	clrc
  9342  1688  0CC4               	rrf	??___ftmul+2,f
  9343  1689  0CC3               	rrf	??___ftmul+1,f
  9344  168A  0CC2               	rrf	??___ftmul,f
  9345  168B  3EFF               	addlw	-1
  9346  168C  1D03               	skipz
  9347  168D  2E87               	goto	u6745
  9348  168E  0842               	movf	??___ftmul,w
  9349  168F  00C5               	movwf	??___ftmul+3
  9350  1690  0845               	movf	??___ftmul+3,w
  9351  1691  06CB               	xorwf	___ftmul@sign,f
  9352  1692  3080               	movlw	128
  9353  1693  00C2               	movwf	??___ftmul
  9354  1694  0842               	movf	??___ftmul,w
  9355  1695  05CB               	andwf	___ftmul@sign,f
  9356  1696  17BD               	bsf	___ftmul@f1+1,7
  9357  1697  17C0               	bsf	___ftmul@f2+1,7
  9358  1698  30FF               	movlw	255
  9359  1699  05BF               	andwf	___ftmul@f2,f
  9360  169A  30FF               	movlw	255
  9361  169B  05C0               	andwf	___ftmul@f2+1,f
  9362  169C  3000               	movlw	0
  9363  169D  05C1               	andwf	___ftmul@f2+2,f
  9364  169E  3000               	movlw	0
  9365  169F  00C7               	movwf	___ftmul@f3_as_product
  9366  16A0  3000               	movlw	0
  9367  16A1  00C8               	movwf	___ftmul@f3_as_product+1
  9368  16A2  3000               	movlw	0
  9369  16A3  00C9               	movwf	___ftmul@f3_as_product+2
  9370  16A4  3007               	movlw	7
  9371  16A5  00C2               	movwf	??___ftmul
  9372  16A6  0842               	movf	??___ftmul,w
  9373  16A7  00CA               	movwf	___ftmul@cntr
  9374  16A8                     l4798:	
  9375  16A8  1C3C               	btfss	___ftmul@f1,0
  9376  16A9  2EB8               	goto	l4802
  9377  16AA  083F               	movf	___ftmul@f2,w
  9378  16AB  07C7               	addwf	___ftmul@f3_as_product,f
  9379  16AC  0840               	movf	___ftmul@f2+1,w
  9380  16AD  1103               	clrz
  9381  16AE  1803               	skipnc
  9382  16AF  0A40               	incf	___ftmul@f2+1,w
  9383  16B0  1D03               	btfss	3,2
  9384  16B1  07C8               	addwf	___ftmul@f3_as_product+1,f
  9385  16B2  0841               	movf	___ftmul@f2+2,w
  9386  16B3  1103               	clrz
  9387  16B4  1803               	skipnc
  9388  16B5  0A41               	incf	___ftmul@f2+2,w
  9389  16B6  1D03               	btfss	3,2
  9390  16B7  07C9               	addwf	___ftmul@f3_as_product+2,f
  9391  16B8                     l4802:	
  9392  16B8  3001               	movlw	1
  9393  16B9                     u6775:	
  9394  16B9  1003               	clrc
  9395  16BA  0CBE               	rrf	___ftmul@f1+2,f
  9396  16BB  0CBD               	rrf	___ftmul@f1+1,f
  9397  16BC  0CBC               	rrf	___ftmul@f1,f
  9398  16BD  3EFF               	addlw	-1
  9399  16BE  1D03               	skipz
  9400  16BF  2EB9               	goto	u6775
  9401  16C0  3001               	movlw	1
  9402  16C1                     u6785:	
  9403  16C1  1003               	clrc
  9404  16C2  0DBF               	rlf	___ftmul@f2,f
  9405  16C3  0DC0               	rlf	___ftmul@f2+1,f
  9406  16C4  0DC1               	rlf	___ftmul@f2+2,f
  9407  16C5  3EFF               	addlw	-1
  9408  16C6  1D03               	skipz
  9409  16C7  2EC1               	goto	u6785
  9410  16C8  3001               	movlw	1
  9411  16C9  02CA               	subwf	___ftmul@cntr,f
  9412  16CA  1D03               	btfss	3,2
  9413  16CB  2EA8               	goto	l4798
  9414  16CC  3009               	movlw	9
  9415  16CD  00C2               	movwf	??___ftmul
  9416  16CE  0842               	movf	??___ftmul,w
  9417  16CF  00CA               	movwf	___ftmul@cntr
  9418  16D0                     l4810:	
  9419  16D0  1C3C               	btfss	___ftmul@f1,0
  9420  16D1  2EE0               	goto	l4814
  9421  16D2  083F               	movf	___ftmul@f2,w
  9422  16D3  07C7               	addwf	___ftmul@f3_as_product,f
  9423  16D4  0840               	movf	___ftmul@f2+1,w
  9424  16D5  1103               	clrz
  9425  16D6  1803               	skipnc
  9426  16D7  0A40               	incf	___ftmul@f2+1,w
  9427  16D8  1D03               	btfss	3,2
  9428  16D9  07C8               	addwf	___ftmul@f3_as_product+1,f
  9429  16DA  0841               	movf	___ftmul@f2+2,w
  9430  16DB  1103               	clrz
  9431  16DC  1803               	skipnc
  9432  16DD  0A41               	incf	___ftmul@f2+2,w
  9433  16DE  1D03               	btfss	3,2
  9434  16DF  07C9               	addwf	___ftmul@f3_as_product+2,f
  9435  16E0                     l4814:	
  9436  16E0  3001               	movlw	1
  9437  16E1                     u6825:	
  9438  16E1  1003               	clrc
  9439  16E2  0CBE               	rrf	___ftmul@f1+2,f
  9440  16E3  0CBD               	rrf	___ftmul@f1+1,f
  9441  16E4  0CBC               	rrf	___ftmul@f1,f
  9442  16E5  3EFF               	addlw	-1
  9443  16E6  1D03               	skipz
  9444  16E7  2EE1               	goto	u6825
  9445  16E8  3001               	movlw	1
  9446  16E9                     u6835:	
  9447  16E9  1003               	clrc
  9448  16EA  0CC9               	rrf	___ftmul@f3_as_product+2,f
  9449  16EB  0CC8               	rrf	___ftmul@f3_as_product+1,f
  9450  16EC  0CC7               	rrf	___ftmul@f3_as_product,f
  9451  16ED  3EFF               	addlw	-1
  9452  16EE  1D03               	skipz
  9453  16EF  2EE9               	goto	u6835
  9454  16F0  3001               	movlw	1
  9455  16F1  02CA               	subwf	___ftmul@cntr,f
  9456  16F2  1D03               	btfss	3,2
  9457  16F3  2ED0               	goto	l4810
  9458  16F4  0847               	movf	___ftmul@f3_as_product,w
  9459  16F5  00A0               	movwf	___ftpack@arg
  9460  16F6  0848               	movf	___ftmul@f3_as_product+1,w
  9461  16F7  00A1               	movwf	___ftpack@arg+1
  9462  16F8  0849               	movf	___ftmul@f3_as_product+2,w
  9463  16F9  00A2               	movwf	___ftpack@arg+2
  9464  16FA  0846               	movf	___ftmul@exp,w
  9465  16FB  00C2               	movwf	??___ftmul
  9466  16FC  0842               	movf	??___ftmul,w
  9467  16FD  00A3               	movwf	___ftpack@exp
  9468  16FE  084B               	movf	___ftmul@sign,w
  9469  16FF  00C3               	movwf	??___ftmul+1
  9470  1700  0843               	movf	??___ftmul+1,w
  9471  1701  00A4               	movwf	___ftpack@sign
  9472  1702  160A  118A  20AB   	fcall	___ftpack
  9473  1705  1283               	bcf	3,5	;RP0=0, select bank0
  9474  1706  1303               	bcf	3,6	;RP1=0, select bank0
  9475  1707  0820               	movf	?___ftpack,w
  9476  1708  00BC               	movwf	?___ftmul
  9477  1709  0821               	movf	?___ftpack+1,w
  9478  170A  00BD               	movwf	?___ftmul+1
  9479  170B  0822               	movf	?___ftpack+2,w
  9480  170C  00BE               	movwf	?___ftmul+2
  9481  170D  0008               	return
  9482  170E                     __end_of___ftmul:	
  9483                           
  9484                           	psect	text28
  9485  10AB                     __ptext28:	
  9486 ;; *************** function ___ftpack *****************
  9487 ;; Defined at:
  9488 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\float.c"
  9489 ;; Parameters:    Size  Location     Type
  9490 ;;  arg             3    0[BANK0 ] unsigned um
  9491 ;;  exp             1    3[BANK0 ] unsigned char 
  9492 ;;  sign            1    4[BANK0 ] unsigned char 
  9493 ;; Auto vars:     Size  Location     Type
  9494 ;;		None
  9495 ;; Return value:  Size  Location     Type
  9496 ;;                  3    0[BANK0 ] float 
  9497 ;; Registers used:
  9498 ;;		wreg, status,2, status,0
  9499 ;; Tracked objects:
  9500 ;;		On entry : 0/0
  9501 ;;		On exit  : 0/0
  9502 ;;		Unchanged: 0/0
  9503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9504 ;;      Params:         0       5       0       0       0
  9505 ;;      Locals:         0       0       0       0       0
  9506 ;;      Temps:          0       3       0       0       0
  9507 ;;      Totals:         0       8       0       0       0
  9508 ;;Total ram usage:        8 bytes
  9509 ;; Hardware stack levels used:    1
  9510 ;; Hardware stack levels required when called:    1
  9511 ;; This function calls:
  9512 ;;		Nothing
  9513 ;; This function is called by:
  9514 ;;		___ftadd
  9515 ;;		___ftdiv
  9516 ;;		___ftmul
  9517 ;;		___lwtoft
  9518 ;; This function uses a non-reentrant model
  9519 ;;
  9520                           
  9521                           
  9522                           ;psect for function ___ftpack
  9523  10AB                     ___ftpack:	
  9524                           
  9525                           ;incstack = 0
  9526                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9527  10AB  1283               	bcf	3,5	;RP0=0, select bank0
  9528  10AC  1303               	bcf	3,6	;RP1=0, select bank0
  9529  10AD  0823               	movf	___ftpack@exp,w
  9530  10AE  1903               	btfsc	3,2
  9531  10AF  28B5               	goto	l4530
  9532  10B0  0822               	movf	___ftpack@arg+2,w
  9533  10B1  0421               	iorwf	___ftpack@arg+1,w
  9534  10B2  0420               	iorwf	___ftpack@arg,w
  9535  10B3  1D03               	skipz
  9536  10B4  28C8               	goto	l4536
  9537  10B5                     l4530:	
  9538  10B5  3000               	movlw	0
  9539  10B6  00A0               	movwf	?___ftpack
  9540  10B7  3000               	movlw	0
  9541  10B8  00A1               	movwf	?___ftpack+1
  9542  10B9  3000               	movlw	0
  9543  10BA  00A2               	movwf	?___ftpack+2
  9544  10BB  0008               	return
  9545  10BC                     l4534:	
  9546  10BC  3001               	movlw	1
  9547  10BD  00A5               	movwf	??___ftpack
  9548  10BE  0825               	movf	??___ftpack,w
  9549  10BF  07A3               	addwf	___ftpack@exp,f
  9550  10C0  3001               	movlw	1
  9551  10C1                     u6085:	
  9552  10C1  1003               	clrc
  9553  10C2  0CA2               	rrf	___ftpack@arg+2,f
  9554  10C3  0CA1               	rrf	___ftpack@arg+1,f
  9555  10C4  0CA0               	rrf	___ftpack@arg,f
  9556  10C5  3EFF               	addlw	-1
  9557  10C6  1D03               	skipz
  9558  10C7  28C1               	goto	u6085
  9559  10C8                     l4536:	
  9560  10C8  30FE               	movlw	254
  9561  10C9  0522               	andwf	___ftpack@arg+2,w
  9562  10CA  1903               	btfsc	3,2
  9563  10CB  28E3               	goto	l1019
  9564  10CC  28BC               	goto	l4534
  9565  10CD                     l4538:	
  9566  10CD  3001               	movlw	1
  9567  10CE  00A5               	movwf	??___ftpack
  9568  10CF  0825               	movf	??___ftpack,w
  9569  10D0  07A3               	addwf	___ftpack@exp,f
  9570  10D1  3001               	movlw	1
  9571  10D2  07A0               	addwf	___ftpack@arg,f
  9572  10D3  3000               	movlw	0
  9573  10D4  1803               	skipnc
  9574  10D5  3001               	movlw	1
  9575  10D6  07A1               	addwf	___ftpack@arg+1,f
  9576  10D7  3000               	movlw	0
  9577  10D8  1803               	skipnc
  9578  10D9  3001               	movlw	1
  9579  10DA  07A2               	addwf	___ftpack@arg+2,f
  9580  10DB  3001               	movlw	1
  9581  10DC                     u6105:	
  9582  10DC  1003               	clrc
  9583  10DD  0CA2               	rrf	___ftpack@arg+2,f
  9584  10DE  0CA1               	rrf	___ftpack@arg+1,f
  9585  10DF  0CA0               	rrf	___ftpack@arg,f
  9586  10E0  3EFF               	addlw	-1
  9587  10E1  1D03               	skipz
  9588  10E2  28DC               	goto	u6105
  9589  10E3                     l1019:	
  9590  10E3  30FF               	movlw	255
  9591  10E4  0522               	andwf	___ftpack@arg+2,w
  9592  10E5  1903               	btfsc	3,2
  9593  10E6  28F2               	goto	l4546
  9594  10E7  28CD               	goto	l4538
  9595  10E8                     l4544:	
  9596  10E8  3001               	movlw	1
  9597  10E9  02A3               	subwf	___ftpack@exp,f
  9598  10EA  3001               	movlw	1
  9599  10EB                     u6125:	
  9600  10EB  1003               	clrc
  9601  10EC  0DA0               	rlf	___ftpack@arg,f
  9602  10ED  0DA1               	rlf	___ftpack@arg+1,f
  9603  10EE  0DA2               	rlf	___ftpack@arg+2,f
  9604  10EF  3EFF               	addlw	-1
  9605  10F0  1D03               	skipz
  9606  10F1  28EB               	goto	u6125
  9607  10F2                     l4546:	
  9608  10F2  1BA1               	btfsc	___ftpack@arg+1,7
  9609  10F3  28F8               	goto	l1026
  9610  10F4  3002               	movlw	2
  9611  10F5  0223               	subwf	___ftpack@exp,w
  9612  10F6  1803               	skipnc
  9613  10F7  28E8               	goto	l4544
  9614  10F8                     l1026:	
  9615  10F8  1823               	btfsc	___ftpack@exp,0
  9616  10F9  2900               	goto	l1027
  9617  10FA  30FF               	movlw	255
  9618  10FB  05A0               	andwf	___ftpack@arg,f
  9619  10FC  307F               	movlw	127
  9620  10FD  05A1               	andwf	___ftpack@arg+1,f
  9621  10FE  30FF               	movlw	255
  9622  10FF  05A2               	andwf	___ftpack@arg+2,f
  9623  1100                     l1027:	
  9624  1100  1003               	clrc
  9625  1101  0CA3               	rrf	___ftpack@exp,f
  9626  1102  0823               	movf	___ftpack@exp,w
  9627  1103  00A5               	movwf	??___ftpack
  9628  1104  01A6               	clrf	??___ftpack+1
  9629  1105  01A7               	clrf	??___ftpack+2
  9630  1106  3010               	movlw	16
  9631  1107                     u6165:	
  9632  1107  1003               	clrc
  9633  1108  0DA5               	rlf	??___ftpack,f
  9634  1109  0DA6               	rlf	??___ftpack+1,f
  9635  110A  0DA7               	rlf	??___ftpack+2,f
  9636  110B  3EFF               	addlw	-1
  9637  110C  1D03               	skipz
  9638  110D  2907               	goto	u6165
  9639  110E  0825               	movf	??___ftpack,w
  9640  110F  04A0               	iorwf	___ftpack@arg,f
  9641  1110  0826               	movf	??___ftpack+1,w
  9642  1111  04A1               	iorwf	___ftpack@arg+1,f
  9643  1112  0827               	movf	??___ftpack+2,w
  9644  1113  04A2               	iorwf	___ftpack@arg+2,f
  9645  1114  0824               	movf	___ftpack@sign,w
  9646  1115  1903               	btfsc	3,2
  9647  1116  0008               	return
  9648  1117  17A2               	bsf	___ftpack@arg+2,7
  9649  1118  0008               	return
  9650  1119                     __end_of___ftpack:	
  9651                           
  9652                           	psect	text29
  9653  1FA1                     __ptext29:	
  9654 ;; *************** function ___ftge *****************
  9655 ;; Defined at:
  9656 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftge.c"
  9657 ;; Parameters:    Size  Location     Type
  9658 ;;  ff1             3    0[BANK0 ] float 
  9659 ;;  ff2             3    3[BANK0 ] float 
  9660 ;; Auto vars:     Size  Location     Type
  9661 ;;		None
  9662 ;; Return value:  Size  Location     Type
  9663 ;;		None               void
  9664 ;; Registers used:
  9665 ;;		wreg, status,2, status,0
  9666 ;; Tracked objects:
  9667 ;;		On entry : 0/0
  9668 ;;		On exit  : 0/0
  9669 ;;		Unchanged: 0/0
  9670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9671 ;;      Params:         0       6       0       0       0
  9672 ;;      Locals:         0       0       0       0       0
  9673 ;;      Temps:          0       6       0       0       0
  9674 ;;      Totals:         0      12       0       0       0
  9675 ;;Total ram usage:       12 bytes
  9676 ;; Hardware stack levels used:    1
  9677 ;; Hardware stack levels required when called:    1
  9678 ;; This function calls:
  9679 ;;		Nothing
  9680 ;; This function is called by:
  9681 ;;		_LCD_display_float
  9682 ;; This function uses a non-reentrant model
  9683 ;;
  9684                           
  9685                           
  9686                           ;psect for function ___ftge
  9687  1FA1                     ___ftge:	
  9688                           
  9689                           ;incstack = 0
  9690                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  9691  1FA1  1283               	bcf	3,5	;RP0=0, select bank0
  9692  1FA2  1303               	bcf	3,6	;RP1=0, select bank0
  9693  1FA3  1FA2               	btfss	___ftge@ff1+2,7
  9694  1FA4  2FCA               	goto	l3180
  9695  1FA5  3000               	movlw	0
  9696  1FA6  00A6               	movwf	??___ftge
  9697  1FA7  3000               	movlw	0
  9698  1FA8  00A7               	movwf	??___ftge+1
  9699  1FA9  3080               	movlw	128
  9700  1FAA  00A8               	movwf	??___ftge+2
  9701  1FAB  0920               	comf	___ftge@ff1,w
  9702  1FAC  00A9               	movwf	??___ftge+3
  9703  1FAD  0921               	comf	___ftge@ff1+1,w
  9704  1FAE  00AA               	movwf	??___ftge+4
  9705  1FAF  0922               	comf	___ftge@ff1+2,w
  9706  1FB0  00AB               	movwf	??___ftge+5
  9707  1FB1  0AA9               	incf	??___ftge+3,f
  9708  1FB2  1903               	skipnz
  9709  1FB3  0AAA               	incf	??___ftge+4,f
  9710  1FB4  1903               	skipnz
  9711  1FB5  0AAB               	incf	??___ftge+5,f
  9712  1FB6  0829               	movf	??___ftge+3,w
  9713  1FB7  07A6               	addwf	??___ftge,f
  9714  1FB8  082A               	movf	??___ftge+4,w
  9715  1FB9  1803               	skipnc
  9716  1FBA  0F2A               	incfsz	??___ftge+4,w
  9717  1FBB  2FBD               	goto	u3751
  9718  1FBC  2FBE               	goto	u3752
  9719  1FBD                     u3751:	
  9720  1FBD  07A7               	addwf	??___ftge+1,f
  9721  1FBE                     u3752:	
  9722  1FBE  082B               	movf	??___ftge+5,w
  9723  1FBF  1803               	skipnc
  9724  1FC0  0F2B               	incfsz	??___ftge+5,w
  9725  1FC1  2FC3               	goto	u3753
  9726  1FC2  2FC4               	goto	u3754
  9727  1FC3                     u3753:	
  9728  1FC3  07A8               	addwf	??___ftge+2,f
  9729  1FC4                     u3754:	
  9730  1FC4  0826               	movf	??___ftge,w
  9731  1FC5  00A0               	movwf	___ftge@ff1
  9732  1FC6  0827               	movf	??___ftge+1,w
  9733  1FC7  00A1               	movwf	___ftge@ff1+1
  9734  1FC8  0828               	movf	??___ftge+2,w
  9735  1FC9  00A2               	movwf	___ftge@ff1+2
  9736  1FCA                     l3180:	
  9737  1FCA  1FA5               	btfss	___ftge@ff2+2,7
  9738  1FCB  2FF1               	goto	l3184
  9739  1FCC  3000               	movlw	0
  9740  1FCD  00A6               	movwf	??___ftge
  9741  1FCE  3000               	movlw	0
  9742  1FCF  00A7               	movwf	??___ftge+1
  9743  1FD0  3080               	movlw	128
  9744  1FD1  00A8               	movwf	??___ftge+2
  9745  1FD2  0923               	comf	___ftge@ff2,w
  9746  1FD3  00A9               	movwf	??___ftge+3
  9747  1FD4  0924               	comf	___ftge@ff2+1,w
  9748  1FD5  00AA               	movwf	??___ftge+4
  9749  1FD6  0925               	comf	___ftge@ff2+2,w
  9750  1FD7  00AB               	movwf	??___ftge+5
  9751  1FD8  0AA9               	incf	??___ftge+3,f
  9752  1FD9  1903               	skipnz
  9753  1FDA  0AAA               	incf	??___ftge+4,f
  9754  1FDB  1903               	skipnz
  9755  1FDC  0AAB               	incf	??___ftge+5,f
  9756  1FDD  0829               	movf	??___ftge+3,w
  9757  1FDE  07A6               	addwf	??___ftge,f
  9758  1FDF  082A               	movf	??___ftge+4,w
  9759  1FE0  1803               	skipnc
  9760  1FE1  0F2A               	incfsz	??___ftge+4,w
  9761  1FE2  2FE4               	goto	u3771
  9762  1FE3  2FE5               	goto	u3772
  9763  1FE4                     u3771:	
  9764  1FE4  07A7               	addwf	??___ftge+1,f
  9765  1FE5                     u3772:	
  9766  1FE5  082B               	movf	??___ftge+5,w
  9767  1FE6  1803               	skipnc
  9768  1FE7  0F2B               	incfsz	??___ftge+5,w
  9769  1FE8  2FEA               	goto	u3773
  9770  1FE9  2FEB               	goto	u3774
  9771  1FEA                     u3773:	
  9772  1FEA  07A8               	addwf	??___ftge+2,f
  9773  1FEB                     u3774:	
  9774  1FEB  0826               	movf	??___ftge,w
  9775  1FEC  00A3               	movwf	___ftge@ff2
  9776  1FED  0827               	movf	??___ftge+1,w
  9777  1FEE  00A4               	movwf	___ftge@ff2+1
  9778  1FEF  0828               	movf	??___ftge+2,w
  9779  1FF0  00A5               	movwf	___ftge@ff2+2
  9780  1FF1                     l3184:	
  9781  1FF1  3080               	movlw	128
  9782  1FF2  06A2               	xorwf	___ftge@ff1+2,f
  9783  1FF3  3080               	movlw	128
  9784  1FF4  06A5               	xorwf	___ftge@ff2+2,f
  9785  1FF5  0825               	movf	___ftge@ff2+2,w
  9786  1FF6  0222               	subwf	___ftge@ff1+2,w
  9787  1FF7  1D03               	skipz
  9788  1FF8  0008               	return
  9789  1FF9  0824               	movf	___ftge@ff2+1,w
  9790  1FFA  0221               	subwf	___ftge@ff1+1,w
  9791  1FFB  1D03               	skipz
  9792  1FFC  0008               	return
  9793  1FFD  0823               	movf	___ftge@ff2,w
  9794  1FFE  0220               	subwf	___ftge@ff1,w
  9795  1FFF  0008               	return
  9796  2000                     __end_of___ftge:	
  9797                           
  9798                           	psect	text30
  9799  1DEE                     __ptext30:	
  9800 ;; *************** function _LCD_putsc *****************
  9801 ;; Defined at:
  9802 ;;		line 151 in file "LCDdrive.c"
  9803 ;; Parameters:    Size  Location     Type
  9804 ;;  s               1    wreg     PTR const unsigned char 
  9805 ;;		 -> STR_19(5), STR_18(8), STR_17(8), STR_16(8), 
  9806 ;;		 -> STR_15(7), STR_14(7), STR_13(6), STR_12(8), 
  9807 ;;		 -> STR_11(7), STR_10(6), STR_9(10), STR_8(6), 
  9808 ;;		 -> STR_7(9), STR_6(11), STR_5(11), STR_4(10), 
  9809 ;;		 -> STR_3(10), STR_2(9), ROM(8192), STR_1(4), 
  9810 ;; Auto vars:     Size  Location     Type
  9811 ;;  s               1   15[BANK0 ] PTR const unsigned char 
  9812 ;;		 -> STR_19(5), STR_18(8), STR_17(8), STR_16(8), 
  9813 ;;		 -> STR_15(7), STR_14(7), STR_13(6), STR_12(8), 
  9814 ;;		 -> STR_11(7), STR_10(6), STR_9(10), STR_8(6), 
  9815 ;;		 -> STR_7(9), STR_6(11), STR_5(11), STR_4(10), 
  9816 ;;		 -> STR_3(10), STR_2(9), ROM(8192), STR_1(4), 
  9817 ;;  c               1   14[BANK0 ] unsigned char 
  9818 ;;  i               1   13[BANK0 ] unsigned char 
  9819 ;; Return value:  Size  Location     Type
  9820 ;;                  1    wreg      void 
  9821 ;; Registers used:
  9822 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9823 ;; Tracked objects:
  9824 ;;		On entry : 0/0
  9825 ;;		On exit  : 0/0
  9826 ;;		Unchanged: 0/0
  9827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9828 ;;      Params:         0       0       0       0       0
  9829 ;;      Locals:         0       3       0       0       0
  9830 ;;      Temps:          0       1       0       0       0
  9831 ;;      Totals:         0       4       0       0       0
  9832 ;;Total ram usage:        4 bytes
  9833 ;; Hardware stack levels used:    1
  9834 ;; Hardware stack levels required when called:    3
  9835 ;; This function calls:
  9836 ;;		_LCD_putch
  9837 ;; This function is called by:
  9838 ;;		_LCD_display_float
  9839 ;;		_screenConfigurationMode
  9840 ;;		_setTimeDisplayer
  9841 ;;		_setAlarm
  9842 ;;		_setTemperatureUnit
  9843 ;;		_main
  9844 ;;		_temperatureReader
  9845 ;; This function uses a non-reentrant model
  9846 ;;
  9847                           
  9848                           
  9849                           ;psect for function _LCD_putsc
  9850  1DEE                     _LCD_putsc:	
  9851                           
  9852                           ;incstack = 0
  9853                           ; Regs used in _LCD_putsc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9854                           ;LCD_putsc@s stored from wreg
  9855  1DEE  1283               	bcf	3,5	;RP0=0, select bank0
  9856  1DEF  1303               	bcf	3,6	;RP1=0, select bank0
  9857  1DF0  00AF               	movwf	LCD_putsc@s
  9858                           
  9859                           ;LCDdrive.c: 153: unsigned char c = 255;
  9860  1DF1  30FF               	movlw	255
  9861  1DF2  00AC               	movwf	??_LCD_putsc
  9862  1DF3  082C               	movf	??_LCD_putsc,w
  9863  1DF4  00AE               	movwf	LCD_putsc@c
  9864                           
  9865                           ;LCDdrive.c: 154: unsigned char i = 0;
  9866  1DF5  01AD               	clrf	LCD_putsc@i
  9867  1DF6                     l4756:	
  9868                           ;LCDdrive.c: 155: while ((c > 0) && (i < 16))
  9869                           
  9870  1DF6  082E               	movf	LCD_putsc@c,w
  9871  1DF7  1903               	btfsc	3,2
  9872  1DF8  0008               	return
  9873  1DF9  3010               	movlw	16
  9874  1DFA  022D               	subwf	LCD_putsc@i,w
  9875  1DFB  1803               	btfsc	3,0
  9876  1DFC  0008               	return
  9877                           
  9878                           ;LCDdrive.c: 156: {
  9879                           ;LCDdrive.c: 157: c = s[i];
  9880  1DFD  082D               	movf	LCD_putsc@i,w
  9881  1DFE  072F               	addwf	LCD_putsc@s,w
  9882  1DFF  0084               	movwf	4
  9883  1E00  120A  158A  2000  160A  158A  	fcall	stringdir
  9884  1E05  00AC               	movwf	??_LCD_putsc
  9885  1E06  082C               	movf	??_LCD_putsc,w
  9886  1E07  00AE               	movwf	LCD_putsc@c
  9887                           
  9888                           ;LCDdrive.c: 158: if (c != 0) LCD_putch(c);
  9889  1E08  082E               	movf	LCD_putsc@c,w
  9890  1E09  1903               	btfsc	3,2
  9891  1E0A  2E11               	goto	l4754
  9892  1E0B  082E               	movf	LCD_putsc@c,w
  9893  1E0C  160A  158A  2540  160A  158A  	fcall	_LCD_putch
  9894  1E11                     l4754:	
  9895                           
  9896                           ;LCDdrive.c: 159: i++;
  9897  1E11  3001               	movlw	1
  9898  1E12  1283               	bcf	3,5	;RP0=0, select bank0
  9899  1E13  1303               	bcf	3,6	;RP1=0, select bank0
  9900  1E14  00AC               	movwf	??_LCD_putsc
  9901  1E15  082C               	movf	??_LCD_putsc,w
  9902  1E16  07AD               	addwf	LCD_putsc@i,f
  9903  1E17  2DF6               	goto	l4756
  9904  1E18                     __end_of_LCD_putsc:	
  9905                           
  9906                           	psect	text31
  9907  1DC5                     __ptext31:	
  9908 ;; *************** function _LCD_puts *****************
  9909 ;; Defined at:
  9910 ;;		line 138 in file "LCDdrive.c"
  9911 ;; Parameters:    Size  Location     Type
  9912 ;;  s               1    wreg     PTR unsigned char 
  9913 ;;		 -> LCD_display_float@output(7), LCD_display_value@buffer(12), 
  9914 ;; Auto vars:     Size  Location     Type
  9915 ;;  s               1   14[BANK0 ] PTR unsigned char 
  9916 ;;		 -> LCD_display_float@output(7), LCD_display_value@buffer(12), 
  9917 ;;  c               1   16[BANK0 ] unsigned char 
  9918 ;;  i               1   15[BANK0 ] unsigned char 
  9919 ;; Return value:  Size  Location     Type
  9920 ;;                  1    wreg      void 
  9921 ;; Registers used:
  9922 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9923 ;; Tracked objects:
  9924 ;;		On entry : 0/0
  9925 ;;		On exit  : 0/0
  9926 ;;		Unchanged: 0/0
  9927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9928 ;;      Params:         0       0       0       0       0
  9929 ;;      Locals:         0       3       0       0       0
  9930 ;;      Temps:          0       2       0       0       0
  9931 ;;      Totals:         0       5       0       0       0
  9932 ;;Total ram usage:        5 bytes
  9933 ;; Hardware stack levels used:    1
  9934 ;; Hardware stack levels required when called:    3
  9935 ;; This function calls:
  9936 ;;		_LCD_putch
  9937 ;; This function is called by:
  9938 ;;		_LCD_display_float
  9939 ;;		_LCD_display_value
  9940 ;; This function uses a non-reentrant model
  9941 ;;
  9942                           
  9943                           
  9944                           ;psect for function _LCD_puts
  9945  1DC5                     _LCD_puts:	
  9946                           
  9947                           ;incstack = 0
  9948                           ; Regs used in _LCD_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9949                           ;LCD_puts@s stored from wreg
  9950  1DC5  1283               	bcf	3,5	;RP0=0, select bank0
  9951  1DC6  1303               	bcf	3,6	;RP1=0, select bank0
  9952  1DC7  00AE               	movwf	LCD_puts@s
  9953                           
  9954                           ;LCDdrive.c: 140: unsigned char c = 255;
  9955  1DC8  30FF               	movlw	255
  9956  1DC9  00AC               	movwf	??_LCD_puts
  9957  1DCA  082C               	movf	??_LCD_puts,w
  9958  1DCB  00B0               	movwf	LCD_puts@c
  9959                           
  9960                           ;LCDdrive.c: 141: unsigned char i = 0;
  9961  1DCC  01AF               	clrf	LCD_puts@i
  9962  1DCD                     l4740:	
  9963                           ;LCDdrive.c: 142: while ((c > 0) && (i < 16))
  9964                           
  9965  1DCD  0830               	movf	LCD_puts@c,w
  9966  1DCE  1903               	btfsc	3,2
  9967  1DCF  0008               	return
  9968  1DD0  3010               	movlw	16
  9969  1DD1  022F               	subwf	LCD_puts@i,w
  9970  1DD2  1803               	btfsc	3,0
  9971  1DD3  0008               	return
  9972                           
  9973                           ;LCDdrive.c: 143: {
  9974                           ;LCDdrive.c: 144: c = s[i];
  9975  1DD4  082F               	movf	LCD_puts@i,w
  9976  1DD5  072E               	addwf	LCD_puts@s,w
  9977  1DD6  00AC               	movwf	??_LCD_puts
  9978  1DD7  082C               	movf	??_LCD_puts,w
  9979  1DD8  0084               	movwf	4
  9980  1DD9  1383               	bcf	3,7	;select IRP bank0
  9981  1DDA  0800               	movf	0,w
  9982  1DDB  00AD               	movwf	??_LCD_puts+1
  9983  1DDC  082D               	movf	??_LCD_puts+1,w
  9984  1DDD  00B0               	movwf	LCD_puts@c
  9985                           
  9986                           ;LCDdrive.c: 145: if (c != 0) LCD_putch(c);
  9987  1DDE  0830               	movf	LCD_puts@c,w
  9988  1DDF  1903               	btfsc	3,2
  9989  1DE0  2DE7               	goto	l4738
  9990  1DE1  0830               	movf	LCD_puts@c,w
  9991  1DE2  160A  158A  2540  160A  158A  	fcall	_LCD_putch
  9992  1DE7                     l4738:	
  9993                           
  9994                           ;LCDdrive.c: 146: i++;
  9995  1DE7  3001               	movlw	1
  9996  1DE8  1283               	bcf	3,5	;RP0=0, select bank0
  9997  1DE9  1303               	bcf	3,6	;RP1=0, select bank0
  9998  1DEA  00AC               	movwf	??_LCD_puts
  9999  1DEB  082C               	movf	??_LCD_puts,w
 10000  1DEC  07AF               	addwf	LCD_puts@i,f
 10001  1DED  2DCD               	goto	l4740
 10002  1DEE                     __end_of_LCD_puts:	
 10003                           
 10004                           	psect	text32
 10005  1D40                     __ptext32:	
 10006 ;; *************** function _LCD_putch *****************
 10007 ;; Defined at:
 10008 ;;		line 120 in file "LCDdrive.c"
 10009 ;; Parameters:    Size  Location     Type
 10010 ;;  c               1    wreg     unsigned char 
 10011 ;; Auto vars:     Size  Location     Type
 10012 ;;  c               1    9[BANK0 ] unsigned char 
 10013 ;;  counter         2   10[BANK0 ] unsigned int 
 10014 ;; Return value:  Size  Location     Type
 10015 ;;                  1    wreg      void 
 10016 ;; Registers used:
 10017 ;;		wreg, status,2, status,0, pclath, cstack
 10018 ;; Tracked objects:
 10019 ;;		On entry : 0/0
 10020 ;;		On exit  : 0/0
 10021 ;;		Unchanged: 0/0
 10022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10023 ;;      Params:         0       0       0       0       0
 10024 ;;      Locals:         0       3       0       0       0
 10025 ;;      Temps:          0       0       0       0       0
 10026 ;;      Totals:         0       3       0       0       0
 10027 ;;Total ram usage:        3 bytes
 10028 ;; Hardware stack levels used:    1
 10029 ;; Hardware stack levels required when called:    2
 10030 ;; This function calls:
 10031 ;;		_LCD_write
 10032 ;; This function is called by:
 10033 ;;		_LCD_puts
 10034 ;;		_LCD_putsc
 10035 ;;		_humidityReader
 10036 ;;		_screenConfigurationMode
 10037 ;;		_setTimeDisplayer
 10038 ;;		_setAlarm
 10039 ;;		_setTemperatureUnit
 10040 ;;		_updateTimeDisplayed
 10041 ;;		_updateSetAlarm
 10042 ;;		_temperatureReader
 10043 ;; This function uses a non-reentrant model
 10044 ;;
 10045                           
 10046                           
 10047                           ;psect for function _LCD_putch
 10048  1D40                     _LCD_putch:	
 10049                           
 10050                           ;incstack = 0
 10051                           ; Regs used in _LCD_putch: [wreg+status,2+status,0+pclath+cstack]
 10052                           ;LCD_putch@c stored from wreg
 10053  1D40  1283               	bcf	3,5	;RP0=0, select bank0
 10054  1D41  1303               	bcf	3,6	;RP1=0, select bank0
 10055  1D42  00A9               	movwf	LCD_putch@c
 10056                           
 10057                           ;LCDdrive.c: 122: unsigned int counter;
 10058                           ;LCDdrive.c: 123: LCD_write(c, 1);
 10059  1D43  01A0               	clrf	LCD_write@rs
 10060  1D44  0AA0               	incf	LCD_write@rs,f
 10061  1D45  0829               	movf	LCD_putch@c,w
 10062  1D46  160A  118A  22C9  160A  158A  	fcall	_LCD_write
 10063                           
 10064                           ;LCDdrive.c: 124: for (counter = 0; counter < 200; counter++);
 10065  1D4B  1283               	bcf	3,5	;RP0=0, select bank0
 10066  1D4C  1303               	bcf	3,6	;RP1=0, select bank0
 10067  1D4D  01AA               	clrf	LCD_putch@counter
 10068  1D4E  01AB               	clrf	LCD_putch@counter+1
 10069  1D4F                     L7:	
 10070  1D4F  3000               	movlw	0
 10071  1D50  022B               	subwf	LCD_putch@counter+1,w
 10072  1D51  30C8               	movlw	200
 10073  1D52  1903               	skipnz
 10074  1D53  022A               	subwf	LCD_putch@counter,w
 10075  1D54  1803               	btfsc	3,0
 10076  1D55  0008               	return
 10077  1D56  3001               	movlw	1
 10078  1D57  07AA               	addwf	LCD_putch@counter,f
 10079  1D58  1803               	skipnc
 10080  1D59  0AAB               	incf	LCD_putch@counter+1,f
 10081  1D5A  3000               	movlw	0
 10082  1D5B  07AB               	addwf	LCD_putch@counter+1,f
 10083  1D5C  2D4F               	goto	L7
 10084  1D5D                     __end_of_LCD_putch:	
 10085                           
 10086                           	psect	text33
 10087  1D10                     __ptext33:	
 10088 ;; *************** function _ADC_read *****************
 10089 ;; Defined at:
 10090 ;;		line 27 in file "ADClib.c"
 10091 ;; Parameters:    Size  Location     Type
 10092 ;;		None
 10093 ;; Auto vars:     Size  Location     Type
 10094 ;;  result          2    3[BANK0 ] unsigned int 
 10095 ;; Return value:  Size  Location     Type
 10096 ;;                  2    0[BANK0 ] unsigned int 
 10097 ;; Registers used:
 10098 ;;		wreg
 10099 ;; Tracked objects:
 10100 ;;		On entry : 0/0
 10101 ;;		On exit  : 0/0
 10102 ;;		Unchanged: 0/0
 10103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10104 ;;      Params:         0       2       0       0       0
 10105 ;;      Locals:         0       2       0       0       0
 10106 ;;      Temps:          0       1       0       0       0
 10107 ;;      Totals:         0       5       0       0       0
 10108 ;;Total ram usage:        5 bytes
 10109 ;; Hardware stack levels used:    1
 10110 ;; Hardware stack levels required when called:    1
 10111 ;; This function calls:
 10112 ;;		Nothing
 10113 ;; This function is called by:
 10114 ;;		_humidityReader
 10115 ;;		_temperatureReader
 10116 ;; This function uses a non-reentrant model
 10117 ;;
 10118                           
 10119                           
 10120                           ;psect for function _ADC_read
 10121  1D10                     _ADC_read:	
 10122                           
 10123                           ;ADClib.c: 29: unsigned int result;
 10124                           ;ADClib.c: 30: _delay((unsigned long)((20)*(3276800/4000000.0)));
 10125                           
 10126                           ;incstack = 0
 10127                           ; Regs used in _ADC_read: [wreg]
 10128  1D10  3005               	movlw	5
 10129  1D11  1283               	bcf	3,5	;RP0=0, select bank0
 10130  1D12  1303               	bcf	3,6	;RP1=0, select bank0
 10131  1D13  00A2               	movwf	??_ADC_read
 10132  1D14                     u8687:	
 10133  1D14  0BA2               	decfsz	??_ADC_read,f
 10134  1D15  2D14               	goto	u8687
 10135                           
 10136                           ;ADClib.c: 31: ADCON0bits.GO = 1;
 10137  1D16  1283               	bcf	3,5	;RP0=0, select bank0
 10138  1D17  1303               	bcf	3,6	;RP1=0, select bank0
 10139  1D18  151F               	bsf	31,2	;volatile
 10140  1D19                     l133:	
 10141                           ;ADClib.c: 32: while(ADCON0bits.GO==1);
 10142                           
 10143  1D19  191F               	btfsc	31,2	;volatile
 10144  1D1A  2D19               	goto	l133
 10145                           
 10146                           ;ADClib.c: 33: result =(ADRESH<<8)+ADRESL;
 10147  1D1B  081E               	movf	30,w	;volatile
 10148  1D1C  00A4               	movwf	ADC_read@result+1
 10149  1D1D  1683               	bsf	3,5	;RP0=1, select bank1
 10150  1D1E  1303               	bcf	3,6	;RP1=0, select bank1
 10151  1D1F  081E               	movf	30,w	;volatile
 10152  1D20  1283               	bcf	3,5	;RP0=0, select bank0
 10153  1D21  1303               	bcf	3,6	;RP1=0, select bank0
 10154  1D22  00A3               	movwf	ADC_read@result
 10155                           
 10156                           ;ADClib.c: 34: return(result);
 10157  1D23  0824               	movf	ADC_read@result+1,w
 10158  1D24  00A1               	movwf	?_ADC_read+1
 10159  1D25  0823               	movf	ADC_read@result,w
 10160  1D26  00A0               	movwf	?_ADC_read
 10161  1D27  0008               	return
 10162  1D28                     __end_of_ADC_read:	
 10163                           
 10164                           	psect	text34
 10165  1CDB                     __ptext34:	
 10166 ;; *************** function _ADC_channel_select *****************
 10167 ;; Defined at:
 10168 ;;		line 41 in file "ADClib.c"
 10169 ;; Parameters:    Size  Location     Type
 10170 ;;  channel         1    wreg     unsigned char 
 10171 ;; Auto vars:     Size  Location     Type
 10172 ;;  channel         1    1[BANK0 ] unsigned char 
 10173 ;; Return value:  Size  Location     Type
 10174 ;;                  1    wreg      void 
 10175 ;; Registers used:
 10176 ;;		wreg, status,2, status,0
 10177 ;; Tracked objects:
 10178 ;;		On entry : 0/0
 10179 ;;		On exit  : 0/0
 10180 ;;		Unchanged: 0/0
 10181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10182 ;;      Params:         0       0       0       0       0
 10183 ;;      Locals:         0       1       0       0       0
 10184 ;;      Temps:          0       1       0       0       0
 10185 ;;      Totals:         0       2       0       0       0
 10186 ;;Total ram usage:        2 bytes
 10187 ;; Hardware stack levels used:    1
 10188 ;; Hardware stack levels required when called:    1
 10189 ;; This function calls:
 10190 ;;		Nothing
 10191 ;; This function is called by:
 10192 ;;		_humidityReader
 10193 ;;		_temperatureReader
 10194 ;; This function uses a non-reentrant model
 10195 ;;
 10196                           
 10197                           
 10198                           ;psect for function _ADC_channel_select
 10199  1CDB                     _ADC_channel_select:	
 10200                           
 10201                           ;incstack = 0
 10202                           ; Regs used in _ADC_channel_select: [wreg+status,2+status,0]
 10203                           ;ADC_channel_select@channel stored from wreg
 10204  1CDB  1283               	bcf	3,5	;RP0=0, select bank0
 10205  1CDC  1303               	bcf	3,6	;RP1=0, select bank0
 10206  1CDD  00A1               	movwf	ADC_channel_select@channel
 10207                           
 10208                           ;ADClib.c: 43: ADCON0bits.CHS=channel;
 10209  1CDE  0821               	movf	ADC_channel_select@channel,w
 10210  1CDF  00A0               	movwf	??_ADC_channel_select
 10211  1CE0  0DA0               	rlf	??_ADC_channel_select,f
 10212  1CE1  0DA0               	rlf	??_ADC_channel_select,f
 10213  1CE2  0DA0               	rlf	??_ADC_channel_select,f
 10214  1CE3  081F               	movf	31,w	;volatile
 10215  1CE4  0620               	xorwf	??_ADC_channel_select,w
 10216  1CE5  39C7               	andlw	-57
 10217  1CE6  0620               	xorwf	??_ADC_channel_select,w
 10218  1CE7  009F               	movwf	31	;volatile
 10219  1CE8  0008               	return
 10220  1CE9                     __end_of_ADC_channel_select:	
 10221                           
 10222                           	psect	text35
 10223  1F4F                     __ptext35:	
 10224 ;; *************** function _config *****************
 10225 ;; Defined at:
 10226 ;;		line 18 in file "config.c"
 10227 ;; Parameters:    Size  Location     Type
 10228 ;;		None
 10229 ;; Auto vars:     Size  Location     Type
 10230 ;;		None
 10231 ;; Return value:  Size  Location     Type
 10232 ;;                  1    wreg      void 
 10233 ;; Registers used:
 10234 ;;		wreg, status,2, status,0, pclath, cstack
 10235 ;; Tracked objects:
 10236 ;;		On entry : 0/0
 10237 ;;		On exit  : 0/0
 10238 ;;		Unchanged: 0/0
 10239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10240 ;;      Params:         0       0       0       0       0
 10241 ;;      Locals:         0       0       0       0       0
 10242 ;;      Temps:          0       1       0       0       0
 10243 ;;      Totals:         0       1       0       0       0
 10244 ;;Total ram usage:        1 bytes
 10245 ;; Hardware stack levels used:    1
 10246 ;; Hardware stack levels required when called:    4
 10247 ;; This function calls:
 10248 ;;		_ADC_initialise
 10249 ;;		_LCD_initialise
 10250 ;; This function is called by:
 10251 ;;		_main
 10252 ;; This function uses a non-reentrant model
 10253 ;;
 10254                           
 10255                           
 10256                           ;psect for function _config
 10257  1F4F                     _config:	
 10258                           
 10259                           ;config.c: 19: LCD_initialise();
 10260                           
 10261                           ;incstack = 0
 10262                           ; Regs used in _config: [wreg+status,2+status,0+pclath+cstack]
 10263  1F4F  160A  118A  2368  160A  158A  	fcall	_LCD_initialise
 10264                           
 10265                           ;config.c: 20: ADC_initialise();
 10266  1F54  160A  158A  24FC  160A  158A  	fcall	_ADC_initialise
 10267                           
 10268                           ;config.c: 24: configuration_Options[0] = "set time";
 10269  1F59  302B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
 10270  1F5A  1283               	bcf	3,5	;RP0=0, select bank0
 10271  1F5B  1303               	bcf	3,6	;RP1=0, select bank0
 10272  1F5C  00AD               	movwf	??_config
 10273  1F5D  082D               	movf	??_config,w
 10274  1F5E  1683               	bsf	3,5	;RP0=1, select bank1
 10275  1F5F  1303               	bcf	3,6	;RP1=0, select bank1
 10276  1F60  00CE               	movwf	_configuration_Options^(0+128)
 10277                           
 10278                           ;config.c: 25: configuration_Options[1] = "set alarm";
 10279  1F61  3021               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
 10280  1F62  1283               	bcf	3,5	;RP0=0, select bank0
 10281  1F63  1303               	bcf	3,6	;RP1=0, select bank0
 10282  1F64  00AD               	movwf	??_config
 10283  1F65  082D               	movf	??_config,w
 10284  1F66  1683               	bsf	3,5	;RP0=1, select bank1
 10285  1F67  1303               	bcf	3,6	;RP1=0, select bank1
 10286  1F68  00CF               	movwf	(low ((_configuration_Options| 0+1)))^(0+128)
 10287                           
 10288                           ;config.c: 26: configuration_Options[2] = "temp mode";
 10289  1F69  3017               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
 10290  1F6A  1283               	bcf	3,5	;RP0=0, select bank0
 10291  1F6B  1303               	bcf	3,6	;RP1=0, select bank0
 10292  1F6C  00AD               	movwf	??_config
 10293  1F6D  082D               	movf	??_config,w
 10294  1F6E  1683               	bsf	3,5	;RP0=1, select bank1
 10295  1F6F  1303               	bcf	3,6	;RP1=0, select bank1
 10296  1F70  00D0               	movwf	(low ((_configuration_Options| 0+2)))^(0+128)
 10297                           
 10298                           ;config.c: 30: temperatureMenu[0] = "Centigrade";
 10299  1F71  3001               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
 10300  1F72  1283               	bcf	3,5	;RP0=0, select bank0
 10301  1F73  1303               	bcf	3,6	;RP1=0, select bank0
 10302  1F74  00AD               	movwf	??_config
 10303  1F75  082D               	movf	??_config,w
 10304  1F76  00F5               	movwf	_temperatureMenu
 10305                           
 10306                           ;config.c: 31: temperatureMenu[1] = "Fahrenheit";
 10307  1F77  300C               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
 10308  1F78  00AD               	movwf	??_config
 10309  1F79  082D               	movf	??_config,w
 10310  1F7A  00F6               	movwf	_temperatureMenu+1
 10311                           
 10312                           ;config.c: 34: OPTION_REG = 0x84;
 10313  1F7B  3084               	movlw	132
 10314  1F7C  1683               	bsf	3,5	;RP0=1, select bank1
 10315  1F7D  1303               	bcf	3,6	;RP1=0, select bank1
 10316  1F7E  0081               	movwf	1	;volatile
 10317                           
 10318                           ;config.c: 35: TMR0 = 0;
 10319  1F7F  1283               	bcf	3,5	;RP0=0, select bank0
 10320  1F80  1303               	bcf	3,6	;RP1=0, select bank0
 10321  1F81  0181               	clrf	1	;volatile
 10322                           
 10323                           ;config.c: 36: INTCON = 0xA8;
 10324  1F82  30A8               	movlw	168
 10325  1F83  008B               	movwf	11	;volatile
 10326                           
 10327                           ;config.c: 38: TRISD = 0X3F;
 10328  1F84  303F               	movlw	63
 10329  1F85  1683               	bsf	3,5	;RP0=1, select bank1
 10330  1F86  1303               	bcf	3,6	;RP1=0, select bank1
 10331  1F87  0088               	movwf	8	;volatile
 10332                           
 10333                           ;config.c: 39: TRISA = 0X03;
 10334  1F88  3003               	movlw	3
 10335  1F89  0085               	movwf	5	;volatile
 10336                           
 10337                           ;config.c: 41: TRISB = 0x80;
 10338  1F8A  3080               	movlw	128
 10339  1F8B  0086               	movwf	6	;volatile
 10340                           
 10341                           ;config.c: 42: alarmTime = 28800;
 10342  1F8C  3000               	movlw	0
 10343  1F8D  00C9               	movwf	(_alarmTime+3)^(0+128)
 10344  1F8E  3000               	movlw	0
 10345  1F8F  00C8               	movwf	(_alarmTime+2)^(0+128)
 10346  1F90  3070               	movlw	112
 10347  1F91  00C7               	movwf	(_alarmTime+1)^(0+128)
 10348  1F92  3080               	movlw	128
 10349  1F93  00C6               	movwf	_alarmTime^(0+128)
 10350                           
 10351                           ;config.c: 48: time = 0;
 10352  1F94  3000               	movlw	0
 10353  1F95  00CD               	movwf	(_time+3)^(0+128)
 10354  1F96  3000               	movlw	0
 10355  1F97  00CC               	movwf	(_time+2)^(0+128)
 10356  1F98  3000               	movlw	0
 10357  1F99  00CB               	movwf	(_time+1)^(0+128)
 10358  1F9A  3000               	movlw	0
 10359  1F9B  00CA               	movwf	_time^(0+128)
 10360                           
 10361                           ;config.c: 49: RD6 = 0;
 10362  1F9C  1283               	bcf	3,5	;RP0=0, select bank0
 10363  1F9D  1303               	bcf	3,6	;RP1=0, select bank0
 10364  1F9E  1308               	bcf	8,6	;volatile
 10365                           
 10366                           ;config.c: 50: RD7 = 0;
 10367  1F9F  1388               	bcf	8,7	;volatile
 10368  1FA0  0008               	return
 10369  1FA1                     __end_of_config:	
 10370                           
 10371                           	psect	text36
 10372  1368                     __ptext36:	
 10373 ;; *************** function _LCD_initialise *****************
 10374 ;; Defined at:
 10375 ;;		line 36 in file "LCDdrive.c"
 10376 ;; Parameters:    Size  Location     Type
 10377 ;;		None
 10378 ;; Auto vars:     Size  Location     Type
 10379 ;;  counter         2   11[BANK0 ] unsigned int 
 10380 ;; Return value:  Size  Location     Type
 10381 ;;                  1    wreg      void 
 10382 ;; Registers used:
 10383 ;;		wreg, status,2, status,0, pclath, cstack
 10384 ;; Tracked objects:
 10385 ;;		On entry : 0/0
 10386 ;;		On exit  : 0/0
 10387 ;;		Unchanged: 0/0
 10388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10389 ;;      Params:         0       0       0       0       0
 10390 ;;      Locals:         0       2       0       0       0
 10391 ;;      Temps:          0       0       0       0       0
 10392 ;;      Totals:         0       2       0       0       0
 10393 ;;Total ram usage:        2 bytes
 10394 ;; Hardware stack levels used:    1
 10395 ;; Hardware stack levels required when called:    3
 10396 ;; This function calls:
 10397 ;;		_LCD_clear
 10398 ;;		_LCD_write
 10399 ;; This function is called by:
 10400 ;;		_config
 10401 ;; This function uses a non-reentrant model
 10402 ;;
 10403                           
 10404                           
 10405                           ;psect for function _LCD_initialise
 10406  1368                     _LCD_initialise:	
 10407                           
 10408                           ;LCDdrive.c: 38: unsigned int counter;
 10409                           ;LCDdrive.c: 40: LCD_write(0x33, 0);
 10410                           
 10411                           ;incstack = 0
 10412                           ; Regs used in _LCD_initialise: [wreg+status,2+status,0+pclath+cstack]
 10413  1368  1283               	bcf	3,5	;RP0=0, select bank0
 10414  1369  1303               	bcf	3,6	;RP1=0, select bank0
 10415  136A  01A0               	clrf	LCD_write@rs
 10416  136B  3033               	movlw	51
 10417  136C  160A  118A  22C9  160A  118A  	fcall	_LCD_write
 10418                           
 10419                           ;LCDdrive.c: 41: for (counter = 0; counter < 1000; counter++);
 10420  1371  1283               	bcf	3,5	;RP0=0, select bank0
 10421  1372  1303               	bcf	3,6	;RP1=0, select bank0
 10422  1373  01AB               	clrf	LCD_initialise@counter
 10423  1374  01AC               	clrf	LCD_initialise@counter+1
 10424  1375  3003               	movlw	3
 10425  1376  022C               	subwf	LCD_initialise@counter+1,w
 10426  1377  30E8               	movlw	232
 10427  1378  1903               	skipnz
 10428  1379  022B               	subwf	LCD_initialise@counter,w
 10429  137A  1803               	btfsc	3,0
 10430  137B  2B89               	goto	l4842
 10431  137C                     l4840:	
 10432  137C  3001               	movlw	1
 10433  137D  07AB               	addwf	LCD_initialise@counter,f
 10434  137E  1803               	skipnc
 10435  137F  0AAC               	incf	LCD_initialise@counter+1,f
 10436  1380  3000               	movlw	0
 10437  1381  07AC               	addwf	LCD_initialise@counter+1,f
 10438  1382  3003               	movlw	3
 10439  1383  022C               	subwf	LCD_initialise@counter+1,w
 10440  1384  30E8               	movlw	232
 10441  1385  1903               	skipnz
 10442  1386  022B               	subwf	LCD_initialise@counter,w
 10443  1387  1C03               	skipc
 10444  1388  2B7C               	goto	l4840
 10445  1389                     l4842:	
 10446                           
 10447                           ;LCDdrive.c: 44: LCD_write(0x32, 0);
 10448  1389  01A0               	clrf	LCD_write@rs
 10449  138A  3032               	movlw	50
 10450  138B  160A  118A  22C9  160A  118A  	fcall	_LCD_write
 10451                           
 10452                           ;LCDdrive.c: 45: for (counter = 0; counter < 1000; counter++);
 10453  1390  1283               	bcf	3,5	;RP0=0, select bank0
 10454  1391  1303               	bcf	3,6	;RP1=0, select bank0
 10455  1392  01AB               	clrf	LCD_initialise@counter
 10456  1393  01AC               	clrf	LCD_initialise@counter+1
 10457  1394  3003               	movlw	3
 10458  1395  022C               	subwf	LCD_initialise@counter+1,w
 10459  1396  30E8               	movlw	232
 10460  1397  1903               	skipnz
 10461  1398  022B               	subwf	LCD_initialise@counter,w
 10462  1399  1803               	btfsc	3,0
 10463  139A  2BA8               	goto	l4852
 10464  139B                     l4850:	
 10465  139B  3001               	movlw	1
 10466  139C  07AB               	addwf	LCD_initialise@counter,f
 10467  139D  1803               	skipnc
 10468  139E  0AAC               	incf	LCD_initialise@counter+1,f
 10469  139F  3000               	movlw	0
 10470  13A0  07AC               	addwf	LCD_initialise@counter+1,f
 10471  13A1  3003               	movlw	3
 10472  13A2  022C               	subwf	LCD_initialise@counter+1,w
 10473  13A3  30E8               	movlw	232
 10474  13A4  1903               	skipnz
 10475  13A5  022B               	subwf	LCD_initialise@counter,w
 10476  13A6  1C03               	skipc
 10477  13A7  2B9B               	goto	l4850
 10478  13A8                     l4852:	
 10479                           
 10480                           ;LCDdrive.c: 48: LCD_write(0x2c, 0);
 10481  13A8  01A0               	clrf	LCD_write@rs
 10482  13A9  302C               	movlw	44
 10483  13AA  160A  118A  22C9  160A  118A  	fcall	_LCD_write
 10484                           
 10485                           ;LCDdrive.c: 49: for (counter = 0; counter < 1000; counter++);
 10486  13AF  1283               	bcf	3,5	;RP0=0, select bank0
 10487  13B0  1303               	bcf	3,6	;RP1=0, select bank0
 10488  13B1  01AB               	clrf	LCD_initialise@counter
 10489  13B2  01AC               	clrf	LCD_initialise@counter+1
 10490  13B3  3003               	movlw	3
 10491  13B4  022C               	subwf	LCD_initialise@counter+1,w
 10492  13B5  30E8               	movlw	232
 10493  13B6  1903               	skipnz
 10494  13B7  022B               	subwf	LCD_initialise@counter,w
 10495  13B8  1803               	btfsc	3,0
 10496  13B9  2BC7               	goto	l4862
 10497  13BA                     l4860:	
 10498  13BA  3001               	movlw	1
 10499  13BB  07AB               	addwf	LCD_initialise@counter,f
 10500  13BC  1803               	skipnc
 10501  13BD  0AAC               	incf	LCD_initialise@counter+1,f
 10502  13BE  3000               	movlw	0
 10503  13BF  07AC               	addwf	LCD_initialise@counter+1,f
 10504  13C0  3003               	movlw	3
 10505  13C1  022C               	subwf	LCD_initialise@counter+1,w
 10506  13C2  30E8               	movlw	232
 10507  13C3  1903               	skipnz
 10508  13C4  022B               	subwf	LCD_initialise@counter,w
 10509  13C5  1C03               	skipc
 10510  13C6  2BBA               	goto	l4860
 10511  13C7                     l4862:	
 10512                           
 10513                           ;LCDdrive.c: 52: LCD_write(0x06, 0);
 10514  13C7  01A0               	clrf	LCD_write@rs
 10515  13C8  3006               	movlw	6
 10516  13C9  160A  118A  22C9  160A  118A  	fcall	_LCD_write
 10517                           
 10518                           ;LCDdrive.c: 53: for (counter = 0; counter < 1000; counter++);
 10519  13CE  1283               	bcf	3,5	;RP0=0, select bank0
 10520  13CF  1303               	bcf	3,6	;RP1=0, select bank0
 10521  13D0  01AB               	clrf	LCD_initialise@counter
 10522  13D1  01AC               	clrf	LCD_initialise@counter+1
 10523  13D2  3003               	movlw	3
 10524  13D3  022C               	subwf	LCD_initialise@counter+1,w
 10525  13D4  30E8               	movlw	232
 10526  13D5  1903               	skipnz
 10527  13D6  022B               	subwf	LCD_initialise@counter,w
 10528  13D7  1803               	btfsc	3,0
 10529  13D8  2BE6               	goto	l4872
 10530  13D9                     l4870:	
 10531  13D9  3001               	movlw	1
 10532  13DA  07AB               	addwf	LCD_initialise@counter,f
 10533  13DB  1803               	skipnc
 10534  13DC  0AAC               	incf	LCD_initialise@counter+1,f
 10535  13DD  3000               	movlw	0
 10536  13DE  07AC               	addwf	LCD_initialise@counter+1,f
 10537  13DF  3003               	movlw	3
 10538  13E0  022C               	subwf	LCD_initialise@counter+1,w
 10539  13E1  30E8               	movlw	232
 10540  13E2  1903               	skipnz
 10541  13E3  022B               	subwf	LCD_initialise@counter,w
 10542  13E4  1C03               	skipc
 10543  13E5  2BD9               	goto	l4870
 10544  13E6                     l4872:	
 10545                           
 10546                           ;LCDdrive.c: 56: LCD_write(0x0c, 0);
 10547  13E6  01A0               	clrf	LCD_write@rs
 10548  13E7  300C               	movlw	12
 10549  13E8  160A  118A  22C9  160A  118A  	fcall	_LCD_write
 10550                           
 10551                           ;LCDdrive.c: 57: for (counter = 0; counter < 1000; counter++);
 10552  13ED  1283               	bcf	3,5	;RP0=0, select bank0
 10553  13EE  1303               	bcf	3,6	;RP1=0, select bank0
 10554  13EF  01AB               	clrf	LCD_initialise@counter
 10555  13F0  01AC               	clrf	LCD_initialise@counter+1
 10556  13F1  3003               	movlw	3
 10557  13F2  022C               	subwf	LCD_initialise@counter+1,w
 10558  13F3  30E8               	movlw	232
 10559  13F4  1903               	skipnz
 10560  13F5  022B               	subwf	LCD_initialise@counter,w
 10561  13F6  1803               	btfsc	3,0
 10562  13F7  2C05               	goto	l4882
 10563  13F8                     l4880:	
 10564  13F8  3001               	movlw	1
 10565  13F9  07AB               	addwf	LCD_initialise@counter,f
 10566  13FA  1803               	skipnc
 10567  13FB  0AAC               	incf	LCD_initialise@counter+1,f
 10568  13FC  3000               	movlw	0
 10569  13FD  07AC               	addwf	LCD_initialise@counter+1,f
 10570  13FE  3003               	movlw	3
 10571  13FF  022C               	subwf	LCD_initialise@counter+1,w
 10572  1400  30E8               	movlw	232
 10573  1401  1903               	skipnz
 10574  1402  022B               	subwf	LCD_initialise@counter,w
 10575  1403  1C03               	skipc
 10576  1404  2BF8               	goto	l4880
 10577  1405                     l4882:	
 10578                           
 10579                           ;LCDdrive.c: 59: LCD_clear();
 10580  1405  160A  158A  2648   	fcall	_LCD_clear
 10581  1408  0008               	return
 10582  1409                     __end_of_LCD_initialise:	
 10583                           
 10584                           	psect	text37
 10585  1E48                     __ptext37:	
 10586 ;; *************** function _LCD_clear *****************
 10587 ;; Defined at:
 10588 ;;		line 128 in file "LCDdrive.c"
 10589 ;; Parameters:    Size  Location     Type
 10590 ;;		None
 10591 ;; Auto vars:     Size  Location     Type
 10592 ;;  counter         2    9[BANK0 ] unsigned int 
 10593 ;; Return value:  Size  Location     Type
 10594 ;;                  1    wreg      void 
 10595 ;; Registers used:
 10596 ;;		wreg, status,2, status,0, pclath, cstack
 10597 ;; Tracked objects:
 10598 ;;		On entry : 0/0
 10599 ;;		On exit  : 0/0
 10600 ;;		Unchanged: 0/0
 10601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10602 ;;      Params:         0       0       0       0       0
 10603 ;;      Locals:         0       2       0       0       0
 10604 ;;      Temps:          0       0       0       0       0
 10605 ;;      Totals:         0       2       0       0       0
 10606 ;;Total ram usage:        2 bytes
 10607 ;; Hardware stack levels used:    1
 10608 ;; Hardware stack levels required when called:    2
 10609 ;; This function calls:
 10610 ;;		_LCD_write
 10611 ;; This function is called by:
 10612 ;;		_LCD_initialise
 10613 ;;		_screenConfigurationMode
 10614 ;;		_setTimeDisplayer
 10615 ;;		_setAlarm
 10616 ;;		_setTemperatureUnit
 10617 ;;		_main
 10618 ;; This function uses a non-reentrant model
 10619 ;;
 10620                           
 10621                           
 10622                           ;psect for function _LCD_clear
 10623  1E48                     _LCD_clear:	
 10624                           
 10625                           ;LCDdrive.c: 130: unsigned int counter;
 10626                           ;LCDdrive.c: 131: LCD_write(1, 0);
 10627                           
 10628                           ;incstack = 0
 10629                           ; Regs used in _LCD_clear: [wreg+status,2+status,0+pclath+cstack]
 10630  1E48  1283               	bcf	3,5	;RP0=0, select bank0
 10631  1E49  1303               	bcf	3,6	;RP1=0, select bank0
 10632  1E4A  01A0               	clrf	LCD_write@rs
 10633  1E4B  3001               	movlw	1
 10634  1E4C  160A  118A  22C9  160A  158A  	fcall	_LCD_write
 10635                           
 10636                           ;LCDdrive.c: 132: for (counter = 0; counter < 1000; counter++);
 10637  1E51  1283               	bcf	3,5	;RP0=0, select bank0
 10638  1E52  1303               	bcf	3,6	;RP1=0, select bank0
 10639  1E53  01A9               	clrf	LCD_clear@counter
 10640  1E54  01AA               	clrf	LCD_clear@counter+1
 10641  1E55  3003               	movlw	3
 10642  1E56  022A               	subwf	LCD_clear@counter+1,w
 10643  1E57  30E8               	movlw	232
 10644  1E58  1903               	skipnz
 10645  1E59  0229               	subwf	LCD_clear@counter,w
 10646  1E5A  1803               	btfsc	3,0
 10647  1E5B  2E69               	goto	l4718
 10648  1E5C                     l4716:	
 10649  1E5C  3001               	movlw	1
 10650  1E5D  07A9               	addwf	LCD_clear@counter,f
 10651  1E5E  1803               	skipnc
 10652  1E5F  0AAA               	incf	LCD_clear@counter+1,f
 10653  1E60  3000               	movlw	0
 10654  1E61  07AA               	addwf	LCD_clear@counter+1,f
 10655  1E62  3003               	movlw	3
 10656  1E63  022A               	subwf	LCD_clear@counter+1,w
 10657  1E64  30E8               	movlw	232
 10658  1E65  1903               	skipnz
 10659  1E66  0229               	subwf	LCD_clear@counter,w
 10660  1E67  1C03               	skipc
 10661  1E68  2E5C               	goto	l4716
 10662  1E69                     l4718:	
 10663                           
 10664                           ;LCDdrive.c: 133: LCD_write(2, 0);
 10665  1E69  01A0               	clrf	LCD_write@rs
 10666  1E6A  3002               	movlw	2
 10667  1E6B  160A  118A  22C9  160A  158A  	fcall	_LCD_write
 10668                           
 10669                           ;LCDdrive.c: 134: for (counter = 0; counter < 1000; counter++);
 10670  1E70  1283               	bcf	3,5	;RP0=0, select bank0
 10671  1E71  1303               	bcf	3,6	;RP1=0, select bank0
 10672  1E72  01A9               	clrf	LCD_clear@counter
 10673  1E73  01AA               	clrf	LCD_clear@counter+1
 10674  1E74                     L8:	
 10675  1E74  3003               	movlw	3
 10676  1E75  022A               	subwf	LCD_clear@counter+1,w
 10677  1E76  30E8               	movlw	232
 10678  1E77  1903               	skipnz
 10679  1E78  0229               	subwf	LCD_clear@counter,w
 10680  1E79  1803               	btfsc	3,0
 10681  1E7A  0008               	return
 10682  1E7B  3001               	movlw	1
 10683  1E7C  07A9               	addwf	LCD_clear@counter,f
 10684  1E7D  1803               	skipnc
 10685  1E7E  0AAA               	incf	LCD_clear@counter+1,f
 10686  1E7F  3000               	movlw	0
 10687  1E80  07AA               	addwf	LCD_clear@counter+1,f
 10688  1E81  2E74               	goto	L8
 10689  1E82                     __end_of_LCD_clear:	
 10690                           
 10691                           	psect	text38
 10692  12C9                     __ptext38:	
 10693 ;; *************** function _LCD_write *****************
 10694 ;; Defined at:
 10695 ;;		line 66 in file "LCDdrive.c"
 10696 ;; Parameters:    Size  Location     Type
 10697 ;;  c               1    wreg     unsigned char 
 10698 ;;  rs              1    0[BANK0 ] unsigned char 
 10699 ;; Auto vars:     Size  Location     Type
 10700 ;;  c               1    5[BANK0 ] unsigned char 
 10701 ;;  counter         2    7[BANK0 ] unsigned int 
 10702 ;;  RSmask          1    6[BANK0 ] unsigned char 
 10703 ;;  temp            1    4[BANK0 ] unsigned char 
 10704 ;;  TRISB_BAK       1    3[BANK0 ] unsigned char 
 10705 ;;  intsON          1    2[BANK0 ] unsigned char 
 10706 ;;  INTCON_BAK      1    0        unsigned char 
 10707 ;; Return value:  Size  Location     Type
 10708 ;;                  1    wreg      void 
 10709 ;; Registers used:
 10710 ;;		wreg, status,2, status,0
 10711 ;; Tracked objects:
 10712 ;;		On entry : 0/0
 10713 ;;		On exit  : 0/0
 10714 ;;		Unchanged: 0/0
 10715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10716 ;;      Params:         0       1       0       0       0
 10717 ;;      Locals:         0       7       0       0       0
 10718 ;;      Temps:          0       1       0       0       0
 10719 ;;      Totals:         0       9       0       0       0
 10720 ;;Total ram usage:        9 bytes
 10721 ;; Hardware stack levels used:    1
 10722 ;; Hardware stack levels required when called:    1
 10723 ;; This function calls:
 10724 ;;		Nothing
 10725 ;; This function is called by:
 10726 ;;		_LCD_initialise
 10727 ;;		_LCD_putch
 10728 ;;		_LCD_clear
 10729 ;;		_LCD_cursor
 10730 ;;		_LCD_cursor_on
 10731 ;;		_LCD_cursor_off
 10732 ;; This function uses a non-reentrant model
 10733 ;;
 10734                           
 10735                           
 10736                           ;psect for function _LCD_write
 10737  12C9                     _LCD_write:	
 10738                           
 10739                           ;incstack = 0
 10740                           ; Regs used in _LCD_write: [wreg+status,2+status,0]
 10741                           ;LCD_write@c stored from wreg
 10742  12C9  1283               	bcf	3,5	;RP0=0, select bank0
 10743  12CA  1303               	bcf	3,6	;RP1=0, select bank0
 10744  12CB  00A5               	movwf	LCD_write@c
 10745                           
 10746                           ;LCDdrive.c: 68: unsigned char temp, intsON;
 10747                           ;LCDdrive.c: 69: unsigned char RSmask = 0;
 10748  12CC  01A6               	clrf	LCD_write@RSmask
 10749                           
 10750                           ;LCDdrive.c: 70: unsigned char TRISB_BAK;
 10751                           ;LCDdrive.c: 71: unsigned char INTCON_BAK;
 10752                           ;LCDdrive.c: 72: unsigned int counter;
 10753                           ;LCDdrive.c: 76: intsON = INTCONbits.GIE;
 10754  12CD  3000               	movlw	0
 10755  12CE  1B8B               	btfsc	11,7	;volatile
 10756  12CF  3001               	movlw	1
 10757  12D0  00A2               	movwf	LCD_write@intsON
 10758                           
 10759                           ;LCDdrive.c: 77: INTCONbits.GIE = 0;
 10760  12D1  138B               	bcf	11,7	;volatile
 10761                           
 10762                           ;LCDdrive.c: 78: TRISB_BAK = TRISB;
 10763  12D2  1683               	bsf	3,5	;RP0=1, select bank1
 10764  12D3  1303               	bcf	3,6	;RP1=0, select bank1
 10765  12D4  0806               	movf	6,w	;volatile
 10766  12D5  1283               	bcf	3,5	;RP0=0, select bank0
 10767  12D6  1303               	bcf	3,6	;RP1=0, select bank0
 10768  12D7  00A1               	movwf	??_LCD_write
 10769  12D8  0821               	movf	??_LCD_write,w
 10770  12D9  00A3               	movwf	LCD_write@TRISB_BAK
 10771                           
 10772                           ;LCDdrive.c: 79: TRISB = 0x00;
 10773  12DA  1683               	bsf	3,5	;RP0=1, select bank1
 10774  12DB  1303               	bcf	3,6	;RP1=0, select bank1
 10775  12DC  0186               	clrf	6	;volatile
 10776                           
 10777                           ;LCDdrive.c: 81: if (rs == 1) RSmask = 0x10;
 10778  12DD  1283               	bcf	3,5	;RP0=0, select bank0
 10779  12DE  1303               	bcf	3,6	;RP1=0, select bank0
 10780  12DF  0320               	decf	LCD_write@rs,w
 10781  12E0  1D03               	btfss	3,2
 10782  12E1  2AE6               	goto	l32
 10783  12E2  3010               	movlw	16
 10784  12E3  00A1               	movwf	??_LCD_write
 10785  12E4  0821               	movf	??_LCD_write,w
 10786  12E5  00A6               	movwf	LCD_write@RSmask
 10787  12E6                     l32:	
 10788                           
 10789                           ;LCDdrive.c: 84: temp = c;
 10790  12E6  0825               	movf	LCD_write@c,w
 10791  12E7  00A1               	movwf	??_LCD_write
 10792  12E8  0821               	movf	??_LCD_write,w
 10793  12E9  00A4               	movwf	LCD_write@temp
 10794                           
 10795                           ;LCDdrive.c: 85: PORTB = (temp >> 4) | RSmask;
 10796  12EA  0824               	movf	LCD_write@temp,w
 10797  12EB  00A1               	movwf	??_LCD_write
 10798  12EC  3004               	movlw	4
 10799  12ED                     u5965:	
 10800  12ED  1003               	clrc
 10801  12EE  0CA1               	rrf	??_LCD_write,f
 10802  12EF  3EFF               	addlw	-1
 10803  12F0  1D03               	skipz
 10804  12F1  2AED               	goto	u5965
 10805  12F2  0821               	movf	??_LCD_write,w
 10806  12F3  0426               	iorwf	LCD_write@RSmask,w
 10807  12F4  0086               	movwf	6	;volatile
 10808                           
 10809                           ;LCDdrive.c: 89: RB5 = 1;
 10810  12F5  1686               	bsf	6,5	;volatile
 10811                           
 10812                           ;LCDdrive.c: 90: for (counter = 0; counter < 2; counter++);
 10813  12F6  01A7               	clrf	LCD_write@counter
 10814  12F7  01A8               	clrf	LCD_write@counter+1
 10815  12F8  3000               	movlw	0
 10816  12F9  0228               	subwf	LCD_write@counter+1,w
 10817  12FA  3002               	movlw	2
 10818  12FB  1903               	skipnz
 10819  12FC  0227               	subwf	LCD_write@counter,w
 10820  12FD  1803               	btfsc	3,0
 10821  12FE  2B0C               	goto	l34
 10822  12FF                     l4486:	
 10823  12FF  3001               	movlw	1
 10824  1300  07A7               	addwf	LCD_write@counter,f
 10825  1301  1803               	skipnc
 10826  1302  0AA8               	incf	LCD_write@counter+1,f
 10827  1303  3000               	movlw	0
 10828  1304  07A8               	addwf	LCD_write@counter+1,f
 10829  1305  3000               	movlw	0
 10830  1306  0228               	subwf	LCD_write@counter+1,w
 10831  1307  3002               	movlw	2
 10832  1308  1903               	skipnz
 10833  1309  0227               	subwf	LCD_write@counter,w
 10834  130A  1C03               	skipc
 10835  130B  2AFF               	goto	l4486
 10836  130C                     l34:	
 10837                           
 10838                           ;LCDdrive.c: 92: RB5 = 0;
 10839  130C  1286               	bcf	6,5	;volatile
 10840                           
 10841                           ;LCDdrive.c: 93: for (counter = 0; counter < 2; counter++);
 10842  130D  01A7               	clrf	LCD_write@counter
 10843  130E  01A8               	clrf	LCD_write@counter+1
 10844  130F  3000               	movlw	0
 10845  1310  0228               	subwf	LCD_write@counter+1,w
 10846  1311  3002               	movlw	2
 10847  1312  1903               	skipnz
 10848  1313  0227               	subwf	LCD_write@counter,w
 10849  1314  1803               	btfsc	3,0
 10850  1315  2B23               	goto	l4496
 10851  1316                     l4494:	
 10852  1316  3001               	movlw	1
 10853  1317  07A7               	addwf	LCD_write@counter,f
 10854  1318  1803               	skipnc
 10855  1319  0AA8               	incf	LCD_write@counter+1,f
 10856  131A  3000               	movlw	0
 10857  131B  07A8               	addwf	LCD_write@counter+1,f
 10858  131C  3000               	movlw	0
 10859  131D  0228               	subwf	LCD_write@counter+1,w
 10860  131E  3002               	movlw	2
 10861  131F  1903               	skipnz
 10862  1320  0227               	subwf	LCD_write@counter,w
 10863  1321  1C03               	skipc
 10864  1322  2B16               	goto	l4494
 10865  1323                     l4496:	
 10866                           
 10867                           ;LCDdrive.c: 96: PORTB = (c & 0x0F) | RSmask;
 10868  1323  0825               	movf	LCD_write@c,w
 10869  1324  390F               	andlw	15
 10870  1325  0426               	iorwf	LCD_write@RSmask,w
 10871  1326  0086               	movwf	6	;volatile
 10872                           
 10873                           ;LCDdrive.c: 100: RB5 = 1;
 10874  1327  1686               	bsf	6,5	;volatile
 10875                           
 10876                           ;LCDdrive.c: 101: for (counter = 0; counter < 2; counter++);
 10877  1328  01A7               	clrf	LCD_write@counter
 10878  1329  01A8               	clrf	LCD_write@counter+1
 10879  132A  3000               	movlw	0
 10880  132B  0228               	subwf	LCD_write@counter+1,w
 10881  132C  3002               	movlw	2
 10882  132D  1903               	skipnz
 10883  132E  0227               	subwf	LCD_write@counter,w
 10884  132F  1803               	btfsc	3,0
 10885  1330  2B3E               	goto	l38
 10886  1331                     l4506:	
 10887  1331  3001               	movlw	1
 10888  1332  07A7               	addwf	LCD_write@counter,f
 10889  1333  1803               	skipnc
 10890  1334  0AA8               	incf	LCD_write@counter+1,f
 10891  1335  3000               	movlw	0
 10892  1336  07A8               	addwf	LCD_write@counter+1,f
 10893  1337  3000               	movlw	0
 10894  1338  0228               	subwf	LCD_write@counter+1,w
 10895  1339  3002               	movlw	2
 10896  133A  1903               	skipnz
 10897  133B  0227               	subwf	LCD_write@counter,w
 10898  133C  1C03               	skipc
 10899  133D  2B31               	goto	l4506
 10900  133E                     l38:	
 10901                           
 10902                           ;LCDdrive.c: 103: RB5 = 0;
 10903  133E  1286               	bcf	6,5	;volatile
 10904                           
 10905                           ;LCDdrive.c: 104: for (counter = 0; counter < 2; counter++);
 10906  133F  01A7               	clrf	LCD_write@counter
 10907  1340  01A8               	clrf	LCD_write@counter+1
 10908  1341  3000               	movlw	0
 10909  1342  0228               	subwf	LCD_write@counter+1,w
 10910  1343  3002               	movlw	2
 10911  1344  1903               	skipnz
 10912  1345  0227               	subwf	LCD_write@counter,w
 10913  1346  1803               	btfsc	3,0
 10914  1347  2B55               	goto	l4516
 10915  1348                     l4514:	
 10916  1348  3001               	movlw	1
 10917  1349  07A7               	addwf	LCD_write@counter,f
 10918  134A  1803               	skipnc
 10919  134B  0AA8               	incf	LCD_write@counter+1,f
 10920  134C  3000               	movlw	0
 10921  134D  07A8               	addwf	LCD_write@counter+1,f
 10922  134E  3000               	movlw	0
 10923  134F  0228               	subwf	LCD_write@counter+1,w
 10924  1350  3002               	movlw	2
 10925  1351  1903               	skipnz
 10926  1352  0227               	subwf	LCD_write@counter,w
 10927  1353  1C03               	skipc
 10928  1354  2B48               	goto	l4514
 10929  1355                     l4516:	
 10930                           
 10931                           ;LCDdrive.c: 106: PORTB = 0x10;
 10932  1355  3010               	movlw	16
 10933  1356  0086               	movwf	6	;volatile
 10934                           
 10935                           ;LCDdrive.c: 108: TRISB = TRISB_BAK;
 10936  1357  0823               	movf	LCD_write@TRISB_BAK,w
 10937  1358  1683               	bsf	3,5	;RP0=1, select bank1
 10938  1359  1303               	bcf	3,6	;RP1=0, select bank1
 10939  135A  0086               	movwf	6	;volatile
 10940                           
 10941                           ;LCDdrive.c: 109: temp = PORTB;
 10942  135B  1283               	bcf	3,5	;RP0=0, select bank0
 10943  135C  1303               	bcf	3,6	;RP1=0, select bank0
 10944  135D  0806               	movf	6,w	;volatile
 10945  135E  00A1               	movwf	??_LCD_write
 10946  135F  0821               	movf	??_LCD_write,w
 10947  1360  00A4               	movwf	LCD_write@temp
 10948                           
 10949                           ;LCDdrive.c: 111: INTCONbits.RBIF=0;
 10950  1361  100B               	bcf	11,0	;volatile
 10951                           
 10952                           ;LCDdrive.c: 112: INTCONbits.INTF=0;
 10953  1362  108B               	bcf	11,1	;volatile
 10954                           
 10955                           ;LCDdrive.c: 114: if(intsON) GIE = 1;
 10956  1363  0822               	movf	LCD_write@intsON,w
 10957  1364  1903               	btfsc	3,2
 10958  1365  0008               	return
 10959  1366  178B               	bsf	11,7	;volatile
 10960  1367  0008               	return
 10961  1368                     __end_of_LCD_write:	
 10962                           
 10963                           	psect	text39
 10964  1CFC                     __ptext39:	
 10965 ;; *************** function _ADC_initialise *****************
 10966 ;; Defined at:
 10967 ;;		line 12 in file "ADClib.c"
 10968 ;; Parameters:    Size  Location     Type
 10969 ;;		None
 10970 ;; Auto vars:     Size  Location     Type
 10971 ;;		None
 10972 ;; Return value:  Size  Location     Type
 10973 ;;                  1    wreg      void 
 10974 ;; Registers used:
 10975 ;;		wreg, status,2, status,0
 10976 ;; Tracked objects:
 10977 ;;		On entry : 0/0
 10978 ;;		On exit  : 0/0
 10979 ;;		Unchanged: 0/0
 10980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10981 ;;      Params:         0       0       0       0       0
 10982 ;;      Locals:         0       0       0       0       0
 10983 ;;      Temps:          0       0       0       0       0
 10984 ;;      Totals:         0       0       0       0       0
 10985 ;;Total ram usage:        0 bytes
 10986 ;; Hardware stack levels used:    1
 10987 ;; Hardware stack levels required when called:    1
 10988 ;; This function calls:
 10989 ;;		Nothing
 10990 ;; This function is called by:
 10991 ;;		_config
 10992 ;; This function uses a non-reentrant model
 10993 ;;
 10994                           
 10995                           
 10996                           ;psect for function _ADC_initialise
 10997  1CFC                     _ADC_initialise:	
 10998                           
 10999                           ;ADClib.c: 14: TRISA = 0x03;
 11000                           
 11001                           ;incstack = 0
 11002                           ; Regs used in _ADC_initialise: [wreg+status,2+status,0]
 11003  1CFC  3003               	movlw	3
 11004  1CFD  1683               	bsf	3,5	;RP0=1, select bank1
 11005  1CFE  1303               	bcf	3,6	;RP1=0, select bank1
 11006  1CFF  0085               	movwf	5	;volatile
 11007                           
 11008                           ;ADClib.c: 15: ADCON1bits.ADCS2 = 0;
 11009  1D00  131F               	bcf	31,6	;volatile
 11010                           
 11011                           ;ADClib.c: 16: ADCON0bits.ADCS=0x01;
 11012  1D01  1283               	bcf	3,5	;RP0=0, select bank0
 11013  1D02  1303               	bcf	3,6	;RP1=0, select bank0
 11014  1D03  081F               	movf	31,w	;volatile
 11015  1D04  393F               	andlw	-193
 11016  1D05  3840               	iorlw	64
 11017  1D06  009F               	movwf	31	;volatile
 11018                           
 11019                           ;ADClib.c: 18: ADCON1bits.ADFM=0x01;
 11020  1D07  1683               	bsf	3,5	;RP0=1, select bank1
 11021  1D08  1303               	bcf	3,6	;RP1=0, select bank1
 11022  1D09  179F               	bsf	31,7	;volatile
 11023                           
 11024                           ;ADClib.c: 19: ADCON1bits.PCFG=0x00;
 11025  1D0A  30F0               	movlw	-16
 11026  1D0B  059F               	andwf	31,f	;volatile
 11027                           
 11028                           ;ADClib.c: 20: ADCON0bits.ADON = 1;
 11029  1D0C  1283               	bcf	3,5	;RP0=0, select bank0
 11030  1D0D  1303               	bcf	3,6	;RP1=0, select bank0
 11031  1D0E  141F               	bsf	31,0	;volatile
 11032  1D0F  0008               	return
 11033  1D10                     __end_of_ADC_initialise:	
 11034                           
 11035                           	psect	text40
 11036  1DA1                     __ptext40:	
 11037 ;; *************** function _TMR1Delay *****************
 11038 ;; Defined at:
 11039 ;;		line 11 in file "TMR1Delay.c"
 11040 ;; Parameters:    Size  Location     Type
 11041 ;;  delay           1    wreg     unsigned char 
 11042 ;; Auto vars:     Size  Location     Type
 11043 ;;  delay           1    2[BANK0 ] unsigned char 
 11044 ;;  x               2    3[BANK0 ] unsigned int 
 11045 ;; Return value:  Size  Location     Type
 11046 ;;                  1    wreg      void 
 11047 ;; Registers used:
 11048 ;;		wreg, status,2, status,0
 11049 ;; Tracked objects:
 11050 ;;		On entry : 0/0
 11051 ;;		On exit  : 0/0
 11052 ;;		Unchanged: 0/0
 11053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11054 ;;      Params:         0       0       0       0       0
 11055 ;;      Locals:         0       3       0       0       0
 11056 ;;      Temps:          0       2       0       0       0
 11057 ;;      Totals:         0       5       0       0       0
 11058 ;;Total ram usage:        5 bytes
 11059 ;; Hardware stack levels used:    1
 11060 ;; Hardware stack levels required when called:    1
 11061 ;; This function calls:
 11062 ;;		Nothing
 11063 ;; This function is called by:
 11064 ;;		_main
 11065 ;; This function uses a non-reentrant model
 11066 ;;
 11067                           
 11068                           
 11069                           ;psect for function _TMR1Delay
 11070  1DA1                     _TMR1Delay:	
 11071                           
 11072                           ;incstack = 0
 11073                           ; Regs used in _TMR1Delay: [wreg+status,2+status,0]
 11074                           ;TMR1Delay@delay stored from wreg
 11075  1DA1  1283               	bcf	3,5	;RP0=0, select bank0
 11076  1DA2  1303               	bcf	3,6	;RP1=0, select bank0
 11077  1DA3  00A2               	movwf	TMR1Delay@delay
 11078                           
 11079                           ;TMR1Delay.c: 12: unsigned int x;
 11080                           ;TMR1Delay.c: 13: T1CON = 0x30;
 11081  1DA4  3030               	movlw	48
 11082  1DA5  0090               	movwf	16	;volatile
 11083                           
 11084                           ;TMR1Delay.c: 15: for (x = 0; x < 2 * delay; x++)
 11085  1DA6  01A3               	clrf	TMR1Delay@x
 11086  1DA7  01A4               	clrf	TMR1Delay@x+1
 11087  1DA8                     l5696:	
 11088  1DA8  0822               	movf	TMR1Delay@delay,w
 11089  1DA9  00A0               	movwf	??_TMR1Delay
 11090  1DAA  01A1               	clrf	??_TMR1Delay+1
 11091  1DAB  1003               	clrc
 11092  1DAC  0DA0               	rlf	??_TMR1Delay,f
 11093  1DAD  0DA1               	rlf	??_TMR1Delay+1,f
 11094  1DAE  0821               	movf	??_TMR1Delay+1,w
 11095  1DAF  0224               	subwf	TMR1Delay@x+1,w
 11096  1DB0  1D03               	skipz
 11097  1DB1  2DB4               	goto	u8235
 11098  1DB2  0820               	movf	??_TMR1Delay,w
 11099  1DB3  0223               	subwf	TMR1Delay@x,w
 11100  1DB4                     u8235:	
 11101  1DB4  1803               	btfsc	3,0
 11102  1DB5  0008               	return
 11103                           
 11104                           ;TMR1Delay.c: 16: {
 11105                           ;TMR1Delay.c: 17: T1CONbits.TMR1ON = 0;
 11106  1DB6  1010               	bcf	16,0	;volatile
 11107                           
 11108                           ;TMR1Delay.c: 18: TMR1H = 0x38;
 11109  1DB7  3038               	movlw	56
 11110  1DB8  008F               	movwf	15	;volatile
 11111                           
 11112                           ;TMR1Delay.c: 19: TMR1L = 0x00;
 11113  1DB9  018E               	clrf	14	;volatile
 11114                           
 11115                           ;TMR1Delay.c: 20: T1CONbits.TMR1ON = 1;
 11116  1DBA  1410               	bsf	16,0	;volatile
 11117  1DBB                     l734:	
 11118                           ;TMR1Delay.c: 21: while (!PIR1bits.TMR1IF);
 11119                           
 11120  1DBB  1C0C               	btfss	12,0	;volatile
 11121  1DBC  2DBB               	goto	l734
 11122                           
 11123                           ;TMR1Delay.c: 22: PIR1bits.TMR1IF = 0;
 11124  1DBD  100C               	bcf	12,0	;volatile
 11125  1DBE  3001               	movlw	1
 11126  1DBF  07A3               	addwf	TMR1Delay@x,f
 11127  1DC0  1803               	skipnc
 11128  1DC1  0AA4               	incf	TMR1Delay@x+1,f
 11129  1DC2  3000               	movlw	0
 11130  1DC3  07A4               	addwf	TMR1Delay@x+1,f
 11131  1DC4  2DA8               	goto	l5696
 11132  1DC5                     __end_of_TMR1Delay:	
 11133                           
 11134                           	psect	text41
 11135  1009                     __ptext41:	
 11136 ;; *************** function _MyISR *****************
 11137 ;; Defined at:
 11138 ;;		line 11 in file "interruptMyISR.c"
 11139 ;; Parameters:    Size  Location     Type
 11140 ;;		None
 11141 ;; Auto vars:     Size  Location     Type
 11142 ;;		None
 11143 ;; Return value:  Size  Location     Type
 11144 ;;                  1    wreg      void 
 11145 ;; Registers used:
 11146 ;;		wreg, status,2, status,0
 11147 ;; Tracked objects:
 11148 ;;		On entry : 0/0
 11149 ;;		On exit  : 0/0
 11150 ;;		Unchanged: 0/0
 11151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11152 ;;      Params:         0       0       0       0       0
 11153 ;;      Locals:         0       0       0       0       0
 11154 ;;      Temps:          5       0       0       0       0
 11155 ;;      Totals:         5       0       0       0       0
 11156 ;;Total ram usage:        5 bytes
 11157 ;; Hardware stack levels used:    1
 11158 ;; This function calls:
 11159 ;;		Nothing
 11160 ;; This function is called by:
 11161 ;;		Interrupt level 1
 11162 ;; This function uses a non-reentrant model
 11163 ;;
 11164                           
 11165                           
 11166                           ;psect for function _MyISR
 11167  1009                     _MyISR:	
 11168                           
 11169                           ;interruptMyISR.c: 12: {
 11170                           ;interruptMyISR.c: 15: if (RD6 == 1 && alarmActivator == 1) {
 11171  1009  1F08               	btfss	8,6	;volatile
 11172  100A  2835               	goto	i1l4226
 11173  100B  1683               	bsf	3,5	;RP0=1, select bank1
 11174  100C  1303               	bcf	3,6	;RP1=0, select bank1
 11175  100D  0351               	decf	_alarmActivator^(0+128),w
 11176  100E  1D03               	btfss	3,2
 11177  100F  2835               	goto	i1l4226
 11178                           
 11179                           ;interruptMyISR.c: 16: if (timeRepeated < 20) {
 11180  1010  3014               	movlw	20
 11181  1011  0278               	subwf	_timeRepeated,w
 11182  1012  1803               	skipnc
 11183  1013  2831               	goto	i1l4224
 11184                           
 11185                           ;interruptMyISR.c: 17: overflowInt++;
 11186  1014  3001               	movlw	1
 11187  1015  00F0               	movwf	??_MyISR
 11188  1016  0870               	movf	??_MyISR,w
 11189  1017  07F7               	addwf	_overflowInt,f
 11190                           
 11191                           ;interruptMyISR.c: 18: TMR0 = 0;
 11192  1018  1283               	bcf	3,5	;RP0=0, select bank0
 11193  1019  1303               	bcf	3,6	;RP1=0, select bank0
 11194  101A  0181               	clrf	1	;volatile
 11195                           
 11196                           ;interruptMyISR.c: 19: if (overflowInt < 25) {
 11197  101B  3019               	movlw	25
 11198  101C  0277               	subwf	_overflowInt,w
 11199  101D  1803               	skipnc
 11200  101E  2821               	goto	i1l4214
 11201                           
 11202                           ;interruptMyISR.c: 20: RD7 = 1;
 11203  101F  1788               	bsf	8,7	;volatile
 11204                           
 11205                           ;interruptMyISR.c: 22: } else if (overflowInt < 75) {
 11206  1020  2835               	goto	i1l4226
 11207  1021                     i1l4214:	
 11208  1021  304B               	movlw	75
 11209  1022  0277               	subwf	_overflowInt,w
 11210  1023  1803               	skipnc
 11211  1024  2827               	goto	i1l4218
 11212                           
 11213                           ;interruptMyISR.c: 23: RD7 = 0;
 11214  1025  1388               	bcf	8,7	;volatile
 11215                           
 11216                           ;interruptMyISR.c: 25: } else if (overflowInt >= 75) {
 11217  1026  2835               	goto	i1l4226
 11218  1027                     i1l4218:	
 11219  1027  304B               	movlw	75
 11220  1028  0277               	subwf	_overflowInt,w
 11221  1029  1C03               	skipc
 11222  102A  2835               	goto	i1l4226
 11223                           
 11224                           ;interruptMyISR.c: 26: overflowInt = 0;
 11225  102B  01F7               	clrf	_overflowInt
 11226                           
 11227                           ;interruptMyISR.c: 27: timeRepeated++;
 11228  102C  3001               	movlw	1
 11229  102D  00F0               	movwf	??_MyISR
 11230  102E  0870               	movf	??_MyISR,w
 11231  102F  07F8               	addwf	_timeRepeated,f
 11232                           
 11233                           ;interruptMyISR.c: 28: }
 11234                           ;interruptMyISR.c: 29: } else {
 11235  1030  2835               	goto	i1l4226
 11236  1031                     i1l4224:	
 11237                           
 11238                           ;interruptMyISR.c: 30: alarmActivator = 0;
 11239  1031  1683               	bsf	3,5	;RP0=1, select bank1
 11240  1032  1303               	bcf	3,6	;RP1=0, select bank1
 11241  1033  01D1               	clrf	_alarmActivator^(0+128)
 11242                           
 11243                           ;interruptMyISR.c: 31: timeRepeated = 0;
 11244  1034  01F8               	clrf	_timeRepeated
 11245  1035                     i1l4226:	
 11246                           
 11247                           ;interruptMyISR.c: 32: }
 11248                           ;interruptMyISR.c: 33: }
 11249                           ;interruptMyISR.c: 34: INTCONbits.TMR0IF = 0;
 11250  1035  110B               	bcf	11,2	;volatile
 11251                           
 11252                           ;interruptMyISR.c: 35: }
 11253                           ;interruptMyISR.c: 36: if (RBIF == 1) {
 11254  1036  1C0B               	btfss	11,0	;volatile
 11255  1037  283F               	goto	i1l231
 11256                           
 11257                           ;interruptMyISR.c: 37: if (RB7 == 1) {
 11258  1038  1283               	bcf	3,5	;RP0=0, select bank0
 11259  1039  1F86               	btfss	6,7	;volatile
 11260  103A  283E               	goto	i1l4236
 11261                           
 11262                           ;interruptMyISR.c: 38: RD6 = !RD6;
 11263  103B  3040               	movlw	64
 11264  103C  0688               	xorwf	8,f
 11265                           
 11266                           ;interruptMyISR.c: 39: timeRepeated = 0;
 11267  103D  01F8               	clrf	_timeRepeated
 11268  103E                     i1l4236:	
 11269                           
 11270                           ;interruptMyISR.c: 41: }
 11271                           ;interruptMyISR.c: 43: INTCONbits.RBIF = 0;
 11272  103E  100B               	bcf	11,0	;volatile
 11273  103F                     i1l231:	
 11274  103F  0874               	movf	??_MyISR+4,w
 11275  1040  1283               	bcf	3,5	;RP0=0, select bank0
 11276  1041  00FF               	movwf	127
 11277  1042  0873               	movf	??_MyISR+3,w
 11278  1043  008A               	movwf	10
 11279  1044  0872               	movf	??_MyISR+2,w
 11280  1045  0084               	movwf	4
 11281  1046  0E71               	swapf	(??_MyISR+1)^(0+-128),w
 11282  1047  0083               	movwf	3
 11283  1048  0EFE               	swapf	126,f
 11284  1049  0E7E               	swapf	126,w
 11285  104A  0009               	retfie
 11286  104B                     __end_of_MyISR:	
 11287  007E                     btemp	set	126	;btemp
 11288  007E                     wtemp	set	126
 11289  007E                     wtemp0	set	126
 11290  0080                     wtemp1	set	128
 11291  0082                     wtemp2	set	130
 11292  0084                     wtemp3	set	132
 11293  0086                     wtemp4	set	134
 11294  0088                     wtemp5	set	136
 11295  007F                     wtemp6	set	127
 11296  007E                     ttemp	set	126
 11297  007E                     ttemp0	set	126
 11298  0081                     ttemp1	set	129
 11299  0084                     ttemp2	set	132
 11300  0087                     ttemp3	set	135
 11301  007F                     ttemp4	set	127
 11302  007E                     ltemp	set	126
 11303  007E                     ltemp0	set	126
 11304  0082                     ltemp1	set	130
 11305  0086                     ltemp2	set	134
 11306  0080                     ltemp3	set	128
 11307                           
 11308                           	psect	intentry
 11309  0004                     __pintentry:	
 11310                           ;incstack = 0
 11311                           ; Regs used in _MyISR: [wreg+status,2+status,0]
 11312                           
 11313  0004                     interrupt_function:	
 11314  007E                     saved_w	set	btemp
 11315  0004  00FE               	movwf	btemp
 11316  0005  0E03               	swapf	3,w
 11317  0006  00F1               	movwf	??_MyISR+1
 11318  0007  0804               	movf	4,w
 11319  0008  00F2               	movwf	??_MyISR+2
 11320  0009  080A               	movf	10,w
 11321  000A  00F3               	movwf	??_MyISR+3
 11322  000B  1283               	bcf	3,5	;RP0=0, select bank0
 11323  000C  1303               	bcf	3,6	;RP1=0, select bank0
 11324  000D  087F               	movf	btemp+1,w
 11325  000E  00F4               	movwf	??_MyISR+4
 11326  000F  160A  118A  2809   	ljmp	_MyISR


Data Sizes:
    Strings     110
    Constant    0
    Data        1
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80     80      80
    BANK1            80     38      54
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    ultoa@buf	PTR unsigned char  size(1) Largest target is 12
		 -> LCD_display_float@buffer(BANK1[12]), LCD_display_value@buffer(COMMON[12]), 

    sp__ultoa	PTR unsigned char  size(1) Largest target is 12
		 -> LCD_display_float@buffer(BANK1[12]), LCD_display_value@buffer(COMMON[12]), 

    ltoa@buf	PTR unsigned char  size(1) Largest target is 12
		 -> LCD_display_float@buffer(BANK1[12]), LCD_display_value@buffer(COMMON[12]), 

    ltoa@cp	PTR unsigned char  size(1) Largest target is 12
		 -> LCD_display_float@buffer(BANK1[12]), LCD_display_value@buffer(COMMON[12]), 

    configuration_Options	PTR const unsigned char [3] size(1) Largest target is 8192
		 -> STR_4(CODE[10]), STR_3(CODE[10]), STR_2(CODE[9]), ROM(CODE[8192]), 

    temperatureMenu	PTR const unsigned char [2] size(1) Largest target is 8192
		 -> STR_6(CODE[11]), STR_5(CODE[11]), ROM(CODE[8192]), 

    sp__ltoa	PTR unsigned char  size(1) Largest target is 12
		 -> LCD_display_float@buffer(BANK1[12]), LCD_display_value@buffer(COMMON[12]), 

    LCD_putsc@s	PTR const unsigned char  size(1) Largest target is 8192
		 -> STR_19(CODE[5]), STR_18(CODE[8]), STR_17(CODE[8]), STR_16(CODE[8]), 
		 -> STR_15(CODE[7]), STR_14(CODE[7]), STR_13(CODE[6]), STR_12(CODE[8]), 
		 -> STR_11(CODE[7]), STR_10(CODE[6]), STR_9(CODE[10]), STR_8(CODE[6]), 
		 -> STR_7(CODE[9]), STR_6(CODE[11]), STR_5(CODE[11]), STR_4(CODE[10]), 
		 -> STR_3(CODE[10]), STR_2(CODE[9]), ROM(CODE[8192]), STR_1(CODE[4]), 

    LCD_puts@s	PTR unsigned char  size(1) Largest target is 12
		 -> LCD_display_float@output(BANK1[7]), LCD_display_value@buffer(COMMON[12]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _MyISR in COMMON

    None.

Critical Paths under _main in BANK0

    _updateTimeDisplayed->___aldiv
    _updateSetAlarm->___aldiv
    _setTimeDisplayer->___lmul
    _setTemperatureUnit->_LCD_putsc
    _setAlarm->___lmul
    ___lmul->___wmul
    _LCD_cursor_on->_LCD_write
    _LCD_cursor_off->_LCD_write
    _screenConfigurationMode->_LCD_putsc
    _LCD_cursor->_LCD_write
    ___lwtoft->___ftpack
    ___ftdiv->___lwtoft
    _LCD_display_float->_ltoa
    _ltoa->___fttol
    _ultoa->___lldiv
    ___fttol->___ftadd
    ___ftsub->___ftadd
    ___ftadd->___ftmul
    ___ftmul->___ftdiv
    _LCD_putsc->_LCD_putch
    _LCD_puts->_LCD_putch
    _LCD_putch->_LCD_write
    _config->_LCD_initialise
    _LCD_initialise->_LCD_clear
    _LCD_clear->_LCD_write

Critical Paths under _MyISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_temperatureReader
    _temperatureReader->_LCD_display_float
    _humidityReader->_LCD_display_float

Critical Paths under _MyISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _MyISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _MyISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  165358
                                             35 BANK1      3     3      0
                          _LCD_clear
                         _LCD_cursor
                          _LCD_putsc
                          _TMR1Delay
                             _config
                     _humidityReader
            _screenConfigurationMode
                           _setAlarm
                 _setTemperatureUnit
                   _setTimeDisplayer
                  _temperatureReader
                     _updateSetAlarm
                _updateTimeDisplayed
 ---------------------------------------------------------------------------------
 (1) _updateTimeDisplayed                                 20    16      4    7941
                                             15 BANK0     20    16      4
                          _LCD_putch
                            ___aldiv
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _updateSetAlarm                                      16    12      4    7558
                                             15 BANK0     16    12      4
                          _LCD_putch
                            ___aldiv
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4    1002
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4    1319
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     753
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _temperatureReader                                    4     4      0   41451
                                             31 BANK1      4     4      0
                 _ADC_channel_select
                           _ADC_read
                  _LCD_display_float
                          _LCD_putch
                          _LCD_putsc
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (1) _setTimeDisplayer                                    22    18      4   17921
                                             19 BANK0     22    18      4
                          _LCD_clear
                         _LCD_cursor
                     _LCD_cursor_off
                      _LCD_cursor_on
                          _LCD_putch
                          _LCD_putsc
                             ___lmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _setTemperatureUnit                                   8     8      0   10769
                                             16 BANK0      8     8      0
                          _LCD_clear
                         _LCD_cursor
                          _LCD_putch
                          _LCD_putsc
 ---------------------------------------------------------------------------------
 (1) _setAlarm                                            22    18      4   17887
                                             19 BANK0     22    18      4
                          _LCD_clear
                         _LCD_cursor
                     _LCD_cursor_off
                      _LCD_cursor_on
                          _LCD_putch
                          _LCD_putsc
                             ___lmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    2530
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     348
                                              6 BANK0     13     5      8
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_cursor_on                                        0     0      0    1385
                          _LCD_write
 ---------------------------------------------------------------------------------
 (2) _LCD_cursor_off                                       0     0      0    1385
                          _LCD_write
 ---------------------------------------------------------------------------------
 (1) _screenConfigurationMode                             10     8      2   10800
                                             16 BANK0     10     8      2
                          _LCD_clear
                         _LCD_cursor
                          _LCD_putch
                          _LCD_putsc
 ---------------------------------------------------------------------------------
 (2) _LCD_cursor                                           3     2      1    4949
                                              9 BANK0      3     2      1
                          _LCD_write
 ---------------------------------------------------------------------------------
 (1) _humidityReader                                       3     3      0   38500
                                             31 BANK1      3     3      0
                 _ADC_channel_select
                           _ADC_read
                  _LCD_display_float
                          _LCD_putch
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             4     1      3    2649
                                              8 BANK0      4     1      3
                           _ADC_read (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    3500
                                             12 BANK0     16    10      6
                           _ADC_read (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_display_float                                   31    27      4   22245
                                              0 BANK1     31    27      4
                           _LCD_puts
                          _LCD_putsc
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftsub
                            ___fttol
                               _ltoa
 ---------------------------------------------------------------------------------
 (3) _ltoa                                                 9     3      6    2166
                                             71 BANK0      9     3      6
                            ___fttol (ARG)
                              _ultoa
 ---------------------------------------------------------------------------------
 (4) _ultoa                                               13     7      6    1559
                                             14 BANK0     13     7      6
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (5) ___llmod                                             10     2      8     386
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             14     6      8     549
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     380
                                             57 BANK0     14    10      4
                            ___ftadd (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    4709
                                             57 BANK0      6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    4459
                                             44 BANK0     13     7      6
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    4030
                                             28 BANK0     16    10      6
                           _ADC_read (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2464
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) ___ftge                                              12     6      6     264
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (2) _LCD_putsc                                            4     4      0    2540
                                             12 BANK0      4     4      0
                          _LCD_putch
 ---------------------------------------------------------------------------------
 (3) _LCD_puts                                             5     5      0    1748
                                             12 BANK0      5     5      0
                          _LCD_putch
 ---------------------------------------------------------------------------------
 (2) _LCD_putch                                            3     3      0    1484
                                              9 BANK0      3     3      0
                          _LCD_write
 ---------------------------------------------------------------------------------
 (2) _ADC_read                                             5     3      2      34
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _ADC_channel_select                                   2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _config                                               1     1      0    3246
                                             13 BANK0      1     1      0
                     _ADC_initialise
                     _LCD_initialise
 ---------------------------------------------------------------------------------
 (2) _LCD_initialise                                       2     2      0    3246
                                             11 BANK0      2     2      0
                          _LCD_clear
                          _LCD_write
 ---------------------------------------------------------------------------------
 (2) _LCD_clear                                            2     2      0    1521
                                              9 BANK0      2     2      0
                          _LCD_write
 ---------------------------------------------------------------------------------
 (3) _LCD_write                                           10     9      1    1385
                                              0 BANK0      9     8      1
 ---------------------------------------------------------------------------------
 (2) _ADC_initialise                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1Delay                                            5     5      0      68
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _MyISR                                                5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_clear
     _LCD_write
   _LCD_cursor
     _LCD_write
   _LCD_putsc
     _LCD_putch
       _LCD_write
   _TMR1Delay
   _config
     _ADC_initialise
     _LCD_initialise
       _LCD_clear
         _LCD_write
       _LCD_write
   _humidityReader
     _ADC_channel_select
     _ADC_read
     _LCD_display_float
       _LCD_puts
         _LCD_putch
           _LCD_write
       _LCD_putsc
         _LCD_putch
           _LCD_write
       ___ftadd
         ___ftdiv (ARG)
           _ADC_read (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _ADC_read (ARG)
             ___ftpack (ARG)
         ___ftmul (ARG)
           _ADC_read (ARG)
           ___ftdiv (ARG)
             _ADC_read (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               _ADC_read (ARG)
               ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _ADC_read (ARG)
             ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftge
       ___ftmul
         _ADC_read (ARG)
         ___ftdiv (ARG)
           _ADC_read (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _ADC_read (ARG)
             ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ADC_read (ARG)
           ___ftpack (ARG)
       ___ftsub
         ___ftadd
           ___ftdiv (ARG)
             _ADC_read (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               _ADC_read (ARG)
               ___ftpack (ARG)
           ___ftmul (ARG)
             _ADC_read (ARG)
             ___ftdiv (ARG)
               _ADC_read (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 _ADC_read (ARG)
                 ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               _ADC_read (ARG)
               ___ftpack (ARG)
           ___ftpack (ARG)
       ___fttol
         ___ftadd (ARG)
           ___ftdiv (ARG)
             _ADC_read (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               _ADC_read (ARG)
               ___ftpack (ARG)
           ___ftmul (ARG)
             _ADC_read (ARG)
             ___ftdiv (ARG)
               _ADC_read (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 _ADC_read (ARG)
                 ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               _ADC_read (ARG)
               ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           _ADC_read (ARG)
           ___ftdiv (ARG)
             _ADC_read (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               _ADC_read (ARG)
               ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _ADC_read (ARG)
             ___ftpack (ARG)
       _ltoa
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftdiv (ARG)
               _ADC_read (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 _ADC_read (ARG)
                 ___ftpack (ARG)
             ___ftmul (ARG)
               _ADC_read (ARG)
               ___ftdiv (ARG)
                 _ADC_read (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   _ADC_read (ARG)
                   ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 _ADC_read (ARG)
                 ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             _ADC_read (ARG)
             ___ftdiv (ARG)
               _ADC_read (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 _ADC_read (ARG)
                 ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               _ADC_read (ARG)
               ___ftpack (ARG)
         _ultoa (ARG)
           ___lldiv
           ___llmod
     _LCD_putch
       _LCD_write
     ___ftadd
       ___ftdiv (ARG)
         _ADC_read (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ADC_read (ARG)
           ___ftpack (ARG)
       ___ftmul (ARG)
         _ADC_read (ARG)
         ___ftdiv (ARG)
           _ADC_read (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _ADC_read (ARG)
             ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ADC_read (ARG)
           ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftdiv
       _ADC_read (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         _ADC_read (ARG)
         ___ftpack (ARG)
     ___ftmul
       _ADC_read (ARG)
       ___ftdiv (ARG)
         _ADC_read (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ADC_read (ARG)
           ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         _ADC_read (ARG)
         ___ftpack (ARG)
     ___lwtoft
       _ADC_read (ARG)
       ___ftpack (ARG)
   _screenConfigurationMode
     _LCD_clear
       _LCD_write
     _LCD_cursor
       _LCD_write
     _LCD_putch
       _LCD_write
     _LCD_putsc
       _LCD_putch
         _LCD_write
   _setAlarm
     _LCD_clear
       _LCD_write
     _LCD_cursor
       _LCD_write
     _LCD_cursor_off
       _LCD_write
     _LCD_cursor_on
       _LCD_write
     _LCD_putch
       _LCD_write
     _LCD_putsc
       _LCD_putch
         _LCD_write
     ___lmul
       ___wmul (ARG)
     ___wmul
   _setTemperatureUnit
     _LCD_clear
       _LCD_write
     _LCD_cursor
       _LCD_write
     _LCD_putch
       _LCD_write
     _LCD_putsc
       _LCD_putch
         _LCD_write
   _setTimeDisplayer
     _LCD_clear
       _LCD_write
     _LCD_cursor
       _LCD_write
     _LCD_cursor_off
       _LCD_write
     _LCD_cursor_on
       _LCD_write
     _LCD_putch
       _LCD_write
     _LCD_putsc
       _LCD_putch
         _LCD_write
     ___lmul
       ___wmul (ARG)
     ___wmul
   _temperatureReader
     _ADC_channel_select
     _ADC_read
     _LCD_display_float
       _LCD_puts
         _LCD_putch
           _LCD_write
       _LCD_putsc
         _LCD_putch
           _LCD_write
       ___ftadd
         ___ftdiv (ARG)
           _ADC_read (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _ADC_read (ARG)
             ___ftpack (ARG)
         ___ftmul (ARG)
           _ADC_read (ARG)
           ___ftdiv (ARG)
             _ADC_read (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               _ADC_read (ARG)
               ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _ADC_read (ARG)
             ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftge
       ___ftmul
         _ADC_read (ARG)
         ___ftdiv (ARG)
           _ADC_read (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _ADC_read (ARG)
             ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ADC_read (ARG)
           ___ftpack (ARG)
       ___ftsub
         ___ftadd
           ___ftdiv (ARG)
             _ADC_read (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               _ADC_read (ARG)
               ___ftpack (ARG)
           ___ftmul (ARG)
             _ADC_read (ARG)
             ___ftdiv (ARG)
               _ADC_read (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 _ADC_read (ARG)
                 ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               _ADC_read (ARG)
               ___ftpack (ARG)
           ___ftpack (ARG)
       ___fttol
         ___ftadd (ARG)
           ___ftdiv (ARG)
             _ADC_read (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               _ADC_read (ARG)
               ___ftpack (ARG)
           ___ftmul (ARG)
             _ADC_read (ARG)
             ___ftdiv (ARG)
               _ADC_read (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 _ADC_read (ARG)
                 ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               _ADC_read (ARG)
               ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           _ADC_read (ARG)
           ___ftdiv (ARG)
             _ADC_read (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               _ADC_read (ARG)
               ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _ADC_read (ARG)
             ___ftpack (ARG)
       _ltoa
         ___fttol (ARG)
           ___ftadd (ARG)
             ___ftdiv (ARG)
               _ADC_read (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 _ADC_read (ARG)
                 ___ftpack (ARG)
             ___ftmul (ARG)
               _ADC_read (ARG)
               ___ftdiv (ARG)
                 _ADC_read (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   _ADC_read (ARG)
                   ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 _ADC_read (ARG)
                 ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             _ADC_read (ARG)
             ___ftdiv (ARG)
               _ADC_read (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 _ADC_read (ARG)
                 ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               _ADC_read (ARG)
               ___ftpack (ARG)
         _ultoa (ARG)
           ___lldiv
           ___llmod
     _LCD_putch
       _LCD_write
     _LCD_putsc
       _LCD_putch
         _LCD_write
     ___ftadd
       ___ftdiv (ARG)
         _ADC_read (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ADC_read (ARG)
           ___ftpack (ARG)
       ___ftmul (ARG)
         _ADC_read (ARG)
         ___ftdiv (ARG)
           _ADC_read (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _ADC_read (ARG)
             ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ADC_read (ARG)
           ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftdiv
       _ADC_read (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         _ADC_read (ARG)
         ___ftpack (ARG)
     ___ftmul
       _ADC_read (ARG)
       ___ftdiv (ARG)
         _ADC_read (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ADC_read (ARG)
           ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         _ADC_read (ARG)
         ___ftpack (ARG)
     ___fttol
       ___ftadd (ARG)
         ___ftdiv (ARG)
           _ADC_read (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _ADC_read (ARG)
             ___ftpack (ARG)
         ___ftmul (ARG)
           _ADC_read (ARG)
           ___ftdiv (ARG)
             _ADC_read (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               _ADC_read (ARG)
               ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _ADC_read (ARG)
             ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         _ADC_read (ARG)
         ___ftdiv (ARG)
           _ADC_read (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _ADC_read (ARG)
             ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ADC_read (ARG)
           ___ftpack (ARG)
     ___lwtoft
       _ADC_read (ARG)
       ___ftpack (ARG)
   _updateSetAlarm
     _LCD_putch
       _LCD_write
     ___aldiv
     ___lwdiv
     ___lwmod
     ___wmul
   _updateTimeDisplayed
     _LCD_putch
       _LCD_write
     ___aldiv
     ___lwdiv
     ___lwmod
     ___wmul

 _MyISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     26      36       7       67.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     50      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      8F      12        0.0%
ABS                  0      0      8F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Fri May 05 15:48:27 2017

                                  pc 0002                                   l32 12E6  
                                 l34 130C                                   l38 133E  
                                 fsr 0004                  ___wmul@multiplicand 0022  
                       ___ftadd@exp1 0058                         ___ftadd@exp2 0057  
                       ___ftadd@sign 0056                                  l133 1D19  
                                l312 0B93                                  l460 0E95  
                                l380 0557                                  l462 0EAD  
                                l463 0EB3                                  l383 056F  
                                l529 17FD                                  l385 0587  
                                l377 0539                                  l466 0ECB  
                                l379 0551                                  l468 0EE3  
                                l661 0191                                  l734 1DBB  
                                l913 11B9                                  l691 03F8  
                                l675 02B7                                  l659 0176  
                                l693 0413                                  l677 02D2  
                                l858 1D8A                                  _GIE 005F  
             __end_of_humidityReader 157A                                  _RD0 0040  
                                _RD1 0041                                  _RB5 0035  
                                _RD2 0042                                  _RD3 0043  
                                _RB7 0037                                  _RD4 0044  
                                _RD6 0046                                  _RD7 0047  
                        ?_LCD_cursor 0029                                  fsr0 0004  
                                indf 0000   updateTimeDisplayed@backMinuteDigit 0037  
                     _alarmActivator 00D1   updateTimeDisplayed@backSecondDigit 0035  
                       ___ftdiv@cntr 0036               __size_of_LCD_cursor_on 0008  
             __end_of_updateSetAlarm 163B                         ___ftdiv@sign 003B  
                               l1110 118D                                 l1026 10F8  
                               l1050 0A2E                                 l1027 1100  
                               l1019 10E3                                 l1194 12B5  
                               l3180 1FCA                                 l3260 1133  
                               l5004 1D82                                 l5110 1E9A  
                               l3184 1FF1                                 l3280 1175  
                               l5120 1EBB                                 l5034 11DA  
                               l5026 11CA                                 l3292 119E  
                               l5052 122D                                 l5044 1212  
                               l5036 11EA                                 l5116 1EB0  
                               l5108 1E8C                                 l5132 07D3  
                               l3286 1182                                 l3278 1165  
                               l5062 1421                                 l5302 04B2  
                               l5310 04D0                                 l5134 07E1  
                               l5142 07FA                                 l3288 1190  
                               l5224 0B34                                 l5208 0AD0  
                               l5400 05ED                                 l5320 04F3  
                               l5304 04BF                                 l5048 121F  
                               l4514 1348                                 l4506 1331  
                               l4530 10B5                                 l5090 149B  
                               l5082 147C                                 l5242 0B8C  
                               l5306 04C3                                 l5330 0516  
                               l5138 07EF                                 l4516 1355  
                               l5068 1437                                 l5404 05F9  
                               l5412 0617                                 l5316 04E6  
                               l4534 10BC                                 l4622 09B6  
                               l3494 1ECA                                 l5510 0EA0  
                               l5326 0509                                 l4544 10E8  
                               l4536 10C8                                 l4640 09DF  
                               l5408 0608                                 l5344 0544  
                               l4546 10F2                                 l4538 10CD  
                               l4810 16D0                                 l4802 16B8  
                               l4650 0A05                                 l4618 09AF  
                               l3498 1EE0                                 l5530 0ED6  
                               l5522 0EBE                                 l5442 0DB4  
                               l5602 174B                                 l5290 0490  
                               l4716 1E5C                                 l4740 1DCD  
                               l4660 0A2A                                 l4652 0A09  
                               l4628 09C5                                 l4564 105D  
                               l5460 0DF9                                 l5364 057A  
                               l5356 0562                                 l5276 0457  
                               l4494 1316                                 l4486 12FF  
                               l4718 1E69                                 l4814 16E0  
                               l4646 09F4                                 l4574 1095  
                               l4566 106D                                 l4590 1F1B  
                               l4910 0BC5                                 l5542 0EFD  
                               l5470 0E1B                                 l5390 05CE  
                               l5382 05B1                                 l5294 049D  
                               l4496 1323                                 l4840 137C  
                               l4664 0A40                                 l4648 0A00  
                               l4912 0BFF                                 l4904 0BC2  
                               l5552 0F19                                 l5560 0F39  
                               l5472 0E1F                                 l5456 0DEC  
                               l5376 05A1                                 l5704 096C  
                               l4850 139B                                 l4842 1389  
                               l4738 1DE7                                 l4754 1E11  
                               l4658 0A1E                                 l4578 10A2  
                               l4594 1F39                                 l4770 1E37  
                               l4930 0CD5                                 l4922 0CBC  
                               l5482 0E42                                 l5634 17F3  
                               l5618 17AD                                 l5386 05BD  
                               l5394 05DD                                 l5714 003B  
                               l4860 13BA                                 l4852 13A8  
                               l4756 1DF6                                 l4780 1653  
                               l4668 0A52                                 l4828 1D66  
                               l4588 1F0B                                 l4684 1241  
                               l4940 0CE2                                 l4924 0CCC  
                               l4916 0C62                                 l5572 0F5E  
                               l5556 0F2A                                 l5548 0F0D  
                               l5492 0E65                                 l5468 0E0E  
                               l5476 0E2C                                 l5644 17FB  
                               l5812 0226                                 l5740 00E5  
                               l5724 0059                                 l4870 13D9  
                               l4862 13C7                                 l4678 0A75  
                               l4598 1F46                                 l4694 1271  
                               l4942 0CE6                                 l5486 0E4F  
                               l5902 03C9                                 l5822 0259  
                               l5830 0288                                 l5750 0118  
                               l4880 13F8                                 l4872 13E6  
                               l4960 0D35                                 l4944 0CFD  
                               l5568 0F4F                                 l5576 0F6D  
                               l5496 0E72                                 l5912 03E4  
                               l5816 022B                                 l5840 02A3  
                               l5744 00EA                                 l4882 1405  
                               l4786 1669                                 l4970 0D48  
                               l4954 0D03                                 l5826 027A  
                               l5754 0139                                 l4956 0D27  
                               l5932 041A                                 l5924 040A  
                               l5860 02D9                                 l5852 02C9  
                               l5780 0188                                 l4798 16A8  
                               l5758 0147                                 l5696 1DA8  
                               l4888 1CF1                                 l5864 02EA  
                               l5768 0162                                 l5792 01A9  
                               l4986 0D5D                                 l4978 0D59  
                               l4988 0D74                                 l5884 0367  
                               l5788 0198                                 l5894 039A  
                               l5798 01B8                                 l5888 036C  
                               l5898 03BB                                 STR_1 0870  
                               STR_2 0830                                 STR_3 0826  
                               STR_4 081C                                 STR_5 0806  
                               STR_6 0811                                 STR_7 0830  
                               STR_8 0865                                 STR_9 0826  
                               u4015 1184                                 u6105 10DC  
                               u6125 10EB                                 u4365 1EE2  
                               u3751 1FBD                                 u6215 106F  
                               u4375 1EEA                                 u3752 1FBE  
                               _RBIF 0058                                 u3753 1FC3  
                               u6225 1084                                 u3754 1FC4  
                               u3771 1FE4                                 u6235 1096  
                               u3772 1FE5                                 u3773 1FEA  
                               u6165 1107                                 u6085 10C1  
                               u3774 1FEB                                 u7135 1D8B  
                               u7215 11EC                                 u6425 09E0  
                               u6265 1F0F                                 u7065 0D0F  
                               u7305 147D                                 u7145 1D92  
                               u8105 0F22                                 u7225 1201  
                               u6515 0A1F                                 u3955 113A  
                               u6195 1061                                 u7315 148E  
                               u7235 1213                                 u6285 1F29  
                               u7325 149C                                 u8150 0FEC  
                               u6455 09F5                                 u6295 1F3A  
                               u8151 0FED                                 u8135 0F58  
                               u8152 0FF2                                 u3985 1166  
                               u8153 0FF3                                 u8145 0F78  
                               u7425 07D6                                 u8235 1DB4  
                               u7195 11DE                                 u7355 1E8F  
                               u6485 0A0A                                 u7285 1449  
                               u7445 07E7                                 u8325 0172  
                               u6735 1675                                 u7295 145B  
                               u7615 04E0                                 u7375 1E9B  
                               u7455 07F0                                 u8255 0057  
                               u6825 16E1                                 u6745 1687  
                               u7385 1EA7                                 u8505 02E8  
                               u6835 16E9                                 u7635 0503  
                               u7555 048A                                 u7395 1EB1  
                               u8515 02F7                                 u5965 12ED  
                               u6775 16B9                                 u8455 02B3  
                               u8375 01A7                                 u7840 0696  
                               u6785 16C1                                 u7905 0E0C  
                               u7841 0697                                 u7825 0602  
                               u7585 04B0                                 u8385 01B6  
                               u7842 069C                                 u7915 0E19  
                               u7843 069D                                 u7835 0622  
                               u7595 04BD                                 u7935 0E3C  
                               u8647 045D                                 u8657 1751  
                               u7785 05C6                                 u8585 03F4  
                               u7955 0E5F                                 u7875 0DE6  
                               u8667 0DBA                                 u8677 0AD6  
                               u8687 1D14                                 _TMR0 0001  
                               _main 0032                         ___ftpack@arg 0020  
                       ___ftpack@exp 0023                                 _ltoa 1E18  
                               _time 00CA                                 btemp 007E  
                   LCD_putch@counter 002A                                 ltemp 007E  
         __size_of_LCD_display_float 01E4                                 start 0012  
                               ttemp 007E  updateTimeDisplayed@frontMinuteDigit 0038  
                               wtemp 007E                     __end_of_ADC_read 1D28  
updateTimeDisplayed@frontSecondDigit 0036                   __size_of_LCD_clear 003A  
                       ___ftmul@cntr 004A                   __size_of_LCD_putch 001D  
                 __size_of_LCD_putsc 002A                         ___ftmul@sign 004B  
                 __size_of_LCD_write 009F             ?_screenConfigurationMode 0030  
                       ___fttol@exp1 0066                         ___fttol@lval 0062  
            __size_of_LCD_initialise 00A1              __size_of_LCD_cursor_off 0008  
                   __end_of_LCD_puts 1DEE                      __end_of___aldiv 1236  
                              ?_main 0070                      __end_of___ftadd 0A8F  
                              STR_10 0865                                ?_ltoa 0067  
                              STR_11 0858                                STR_12 0849  
                              STR_13 085F                                STR_14 0858  
                              STR_15 0851                                STR_16 0839  
                              STR_17 0841                                STR_18 0839  
                              STR_19 086B                      __end_of___ftdiv 14C1  
                    __end_of___lldiv 10AB                      __end_of___ftmul 170E  
                              _T1CON 0010                      __end_of___llmod 1F4F  
                    __end_of___ftsub 1D7E                      __end_of___fttol 11A7  
                    __end_of___lwdiv 1EC0                      ?_humidityReader 0070  
                              i1l231 103F                      __end_of___lwmod 07FF  
              LCD_initialise@counter 002B                                _TMR1H 000F  
                              _TMR1L 000E                                _PORTB 0006  
                              _TRISA 0085                                _TRISB 0086  
                              _TRISD 0088                                _MyISR 1009  
                ___lmul@multiplicand 002A                   __size_of_TMR1Delay 0024  
                 LCD_display_float@i 00BE                   LCD_display_float@j 00B2  
                      ___ftpack@sign 0024                      ?_updateSetAlarm 002F  
                              main@i 00C4                                _ultoa 1236  
                              pclath 000A                                ltemp0 007E  
                              ltemp1 0082                                ltemp2 0086  
                              ltemp3 0080                                ttemp0 007E  
                              ttemp1 0081                                ttemp2 0084  
                              ttemp3 0087                                ttemp4 007F  
                              status 0003                                wtemp0 007E  
                              wtemp1 0080                                wtemp2 0082  
                              wtemp3 0084                                wtemp4 0086  
                              wtemp5 0088                                wtemp6 007F  
        __end_of_updateTimeDisplayed 07CB                  __size_of_LCD_cursor 0013  
                    __initialization 0015                          LCD_cursor@x 002B  
                        LCD_cursor@y 0029                         __end_of_main 0421  
                       __end_of_ltoa 1E48                        _LCD_cursor_on 0876  
         setAlarm@first_Minute_Digit 0041                               ??_main 00C3  
                      ___fttol@sign1 0061                               ??_ltoa 006D  
                     ADC_read@result 0023                               ?_MyISR 0070  
                  __end_of_LCD_clear 1E82                          LCD_write@rs 0020  
                  __end_of_LCD_putch 1D5D                    _temperatureReader 087E  
                  __end_of_LCD_putsc 1E18   setTimeDisplayer@first_Minute_Digit 0041  
                  __end_of_LCD_write 1368                     ___llmod@dividend 0024  
                             _ADRESH 001E                               _ADRESL 009E  
                   __end_of___ftpack 1119                               ?_ultoa 002E  
                 ?_temperatureReader 0070                               i1l4214 1021  
                             i1l4224 1031                               i1l4218 1027  
                             i1l4226 1035                               i1l4236 103E  
                             _INTCON 000B                     __end_of___lwtoft 1D40  
                ??_temperatureReader 00BF                     ??_ADC_initialise 0075  
           __end_of_setTimeDisplayer 06AA                    __end_of_TMR1Delay 1DC5  
                     ?_LCD_cursor_on 0070                               ___ftge 1FA1  
                             ___lmul 1EC0                  updateSetAlarm@hours 003D  
                          ??___aldiv 0028                               ___wmul 1D7E  
                          ??___ftadd 0052                            ??___ftdiv 0032  
                          ??___lldiv 0028                            ??___ftmul 0042  
                          ??___llmod 0028                            ??___ftsub 0075  
                          ??___fttol 005D                            ??___lwdiv 0024  
                          ??___lwmod 0024                               _config 1F4F  
      temperatureReader@TemperatureT 00C0                               _buzzer 00D2  
                   __end_of_setAlarm 1000                ___ftmul@f3_as_product 0047  
          __end_of_temperatureReader 0986                               ltoa@cp 006E  
                             saved_w 007E                            ?_ADC_read 0020  
                             ultoa@c 0039                               ultoa@v 0035  
            __end_of__initialization 002E                           ___ftadd@f1 004C  
                         ___ftadd@f2 004F                           ___ftge@ff1 0020  
                         ___ftge@ff2 0023                            ?_LCD_puts 0070  
                         ___ftdiv@f1 002F                           ___ftdiv@f2 002C  
                         ___ftdiv@f3 0037                           ___ftmul@f1 003C  
                         ___ftmul@f2 003F                        __end_of_MyISR 104B  
                         ___ftsub@f1 005C                           ___ftsub@f2 0059  
                         ___fttol@f1 0059                       __pcstackCOMMON 0070  
                       __pidataBANK1 07FF                       TMR1Delay@delay 0022  
                 _setTemperatureUnit 170E                       _LCD_initialise 1368  
                      __end_of_ultoa 12C9                       _LCD_cursor_off 1001  
            updateSetAlarm@remainder 0035                           ___lwtoft@c 0028  
                 LCD_write@TRISB_BAK 0023                            LCD_puts@c 0030  
                          LCD_puts@i 002F                            LCD_puts@s 002E  
                ?_setTemperatureUnit 0070                         ??_LCD_cursor 002A  
                    _temperatureMenu 0075                              ??_MyISR 0070  
                         ??_ADC_read 0022                              ??_ultoa 0034  
         __end_of_ADC_channel_select 1CE9                           __pbssBANK1 00C6  
               ??_setTemperatureUnit 0030                           ??_LCD_puts 002C  
                    ??_LCD_cursor_on 0075                           __pmaintext 0032  
                 __end_of_LCD_cursor 1CFC               __end_of_LCD_initialise 1409  
                            ?___ftge 0020                              ?___lmul 0026  
             __end_of_LCD_cursor_off 1009                              ?___wmul 0020  
                   ??_humidityReader 0075                           __pintentry 0004  
                            ?_config 0070          setTimeDisplayer@push_Button 0045  
                     ___lmul@product 002F                            ?___ftpack 0020  
                          ?___lwtoft 0028                     ??_updateSetAlarm 0033  
         __size_of_temperatureReader 0108     __size_of_screenConfigurationMode 010B  
           screenConfigurationMode@a 0038             screenConfigurationMode@b 0036  
           screenConfigurationMode@c 0034      updateTimeDisplayed@elapsed_time 002F  
                   LCD_write@counter 0027                           __stringtab 0800  
                setTemperatureUnit@a 0036                  setTemperatureUnit@b 0034  
                setTemperatureUnit@c 0032                            ?_setAlarm 0033  
                    ?_LCD_initialise 0070                              ___aldiv 11A7  
                    __size_of___ftge 005F                      ?_LCD_cursor_off 0070  
                    __size_of___lmul 0041                              ___ftadd 0986  
                            ___ftdiv 1409                              ___lldiv 104B  
setTimeDisplayer@second_Minute_Digit 0042                      __size_of___wmul 0023  
                            ___ftmul 163B                              ___llmod 1F01  
                            ___ftsub 1D5D                              ___fttol 1119  
                            ___lwdiv 1E82                              ___lwmod 07CB  
                    __size_of_config 0052                           ??___ftpack 0025  
                    _snoozeActivator 00D4                              __ptext1 06AA  
                            __ptext2 157A                              __ptext3 07CB  
                            __ptext4 1E82                              __ptext5 11A7  
                            __ptext6 087E                              __ptext7 0421  
                            __ptext8 170E                              __ptext9 0D7E  
                         ??___lwtoft 002B              LCD_display_float@buffer 00A6  
                          _T1CONbits 0010              LCD_display_float@offset 00BC  
               LCD_display_float@pos 00BD                     ___aldiv@dividend 0024  
            LCD_display_float@output 00B3                            _LCD_clear 1E48  
               end_of_initialization 002E                        _setAlarm$1075 003F  
                          _LCD_putch 1D40                            _LCD_putsc 1DEE  
                          _LCD_write 12C9                           _selectMode 00D3  
                            ltoa@buf 006F                           ??_setAlarm 0037  
                            ltoa@val 0067                      ___lldiv@divisor 0020  
                    ___lldiv@counter 002D                    ?_setTimeDisplayer 0033  
                   ___aldiv@quotient 002B         __size_of_updateTimeDisplayed 0121  
                 ??_setTimeDisplayer 0037                            _TMR1Delay 1DA1  
                  __size_of_ADC_read 0018                           ?_LCD_clear 0070  
                         ?_LCD_putch 0070                           ?_LCD_putsc 0070  
                         ?_LCD_write 0020                          ___ftdiv@exp 003A  
                        ___ftmul@exp 0046                    __size_of_LCD_puts 0029  
                     __end_of___ftge 2000                       __end_of___lmul 1F01  
                     __end_of___wmul 1DA1                           ?_TMR1Delay 0070  
                     __end_of_config 1FA1             updateTimeDisplayed@hours 003D  
  updateTimeDisplayed@frontHourDigit 003A              _screenConfigurationMode 0A8F  
                start_initialization 0015             setAlarm@first_Hour_Digit 0044  
       updateTimeDisplayed@remainder 0041     setTimeDisplayer@first_Hour_Digit 0044  
                         LCD_putch@c 0029                           LCD_putsc@c 002E  
                         LCD_putsc@i 002D                           LCD_putsc@s 002F  
                         LCD_write@c 0025                      ___llmod@divisor 0020  
                    ___llmod@counter 0029     updateTimeDisplayed@backHourDigit 0039  
                           ??___ftge 0026                             ??___lmul 002E  
                 _ADC_channel_select 1CDB                             ??___wmul 0075  
                           ??_config 002D                          __pdataBANK1 00D5  
                ?_ADC_channel_select 0070              __size_of_ADC_initialise 0014  
                  __size_of___ftpack 006E                          __pbssCOMMON 0075  
                          ___latbits 0002                    __size_of___lwtoft 0018  
                      __pcstackBANK0 0020                        __pcstackBANK1 00A0  
       updateSetAlarm@hoursVariable3 0038         updateSetAlarm@hoursVariable4 0037  
          ADC_channel_select@channel 0021                     LCD_clear@counter 0029  
                        ??_LCD_clear 0075                          ??_LCD_putch 0075  
                        ??_LCD_putsc 002C                          ??_LCD_write 0021  
             humidityReader@Humidity 00BF                 ??_ADC_channel_select 0020  
                   ??_LCD_initialise 0075          __size_of_setTemperatureUnit 00F2  
                   ??_LCD_cursor_off 0075                            _alarmTime 00C6  
                   ___lwdiv@dividend 0022                    __size_of_setAlarm 0282  
                    LCD_write@RSmask 0026                __end_of_LCD_cursor_on 087E  
                           ?___aldiv 0020                        LCD_write@temp 0024  
                           ?___ftadd 004C                             ?___ftdiv 002C  
                           ?___lldiv 0020                             ?___ftmul 003C  
                           ?___llmod 0020                             ?___ftsub 0059  
                           ?___fttol 0059                             ?___lwdiv 0020  
                           ?___lwmod 0020                          ??_TMR1Delay 0020  
          ??_screenConfigurationMode 0032                            __pstrings 0800  
                    LCD_write@intsON 0022           updateSetAlarm@elapsed_time 002F  
                     __size_of_MyISR 0042                             _ADC_read 1D10  
                         TMR1Delay@x 0023                     ___lwdiv@quotient 0026  
                _updateTimeDisplayed 06AA                       __size_of_ultoa 0093  
             LCD_display_float@isneg 00BA               LCD_display_float@value 00A0  
                    ___aldiv@divisor 0020                    interrupt_function 0004  
                    ___aldiv@counter 0029                       ___wmul@product 0024  
                           _LCD_puts 1DC5                             _PIR1bits 000C  
               ?_updateTimeDisplayed 002F                           _ADCON0bits 001F  
                        __stringbase 0805                           _ADCON1bits 009F  
                  ___wmul@multiplier 0020              __size_of_humidityReader 00B9  
          __size_of_setTimeDisplayer 0289          setAlarm@second_Minute_Digit 0042  
                  ___lmul@multiplier 0026      __end_of_screenConfigurationMode 0B9A  
            __size_of_updateSetAlarm 00C1                ??_updateTimeDisplayed 0033  
                   __size_of___aldiv 008F                     __size_of___ftadd 0109  
                   __size_of___ftdiv 00B8                     __size_of___lldiv 0060  
                   __size_of___ftmul 00D3                     __size_of___llmod 004E  
                   __size_of___ftsub 0021                     __size_of___fttol 008E  
                   __size_of___lwdiv 003E                     __size_of___lwmod 0034  
                           ___ftpack 10AB                   __end_of__stringtab 0806  
              updateSetAlarm@minutes 003B                       _ADC_initialise 1CFC  
                           ___lwtoft 1D28                      ___lwdiv@divisor 0020  
                    ___lwdiv@counter 0025                             __ptext10 1D7E  
                           __ptext11 1EC0                             __ptext20 1E18  
                           __ptext12 0876                             __ptext21 1236  
                           __ptext13 1001                             __ptext30 1DEE  
                           __ptext22 1F01                             __ptext14 0A8F  
                           __ptext31 1DC5                             __ptext23 104B  
                           __ptext15 1CE9                             __ptext40 1DA1  
                           __ptext32 1D40                             __ptext24 1119  
                           __ptext16 14C1                             __ptext41 1009  
                           __ptext33 1D10                             __ptext25 1D5D  
                           __ptext17 1D28                             __ptext34 1CDB  
                           __ptext26 0986                             __ptext18 1409  
                           __ptext35 1F4F                             __ptext27 163B  
                           __ptext19 0B9A                             __ptext36 1368  
                           __ptext28 10AB                             __ptext37 1E48  
                           __ptext29 1FA1                             __ptext38 12C9  
                           __ptext39 1CFC             LCD_display_float@dplaces 00A3  
                      __size_of_main 03EF       setTimeDisplayer@variable_Value 0047  
                      __size_of_ltoa 0030                   setAlarm@pushbutton 0045  
                           _setAlarm 0D7E                    _LCD_display_float 0B9A  
           LCD_display_float@str_len 00BB                   ?_LCD_display_float 00A0  
          setAlarm@second_Hour_Digit 0043               __end_of_ADC_initialise 1D10  
                       _timeRepeated 0078    setTimeDisplayer@second_Hour_Digit 0043  
                ??_LCD_display_float 00A4           updateSetAlarm@minVariable1 003A  
         updateSetAlarm@minVariable2 0039                           _LCD_cursor 1CE9  
                         _INTCONbits 000B                _setTimeDisplayer$1074 003F  
                          ultoa@base 0032                             intlevel1 0000  
                           ltoa@base 006B                     ___lwmod@dividend 0022  
                   ___lldiv@dividend 0024            __end_of_LCD_display_float 0D7E  
                          stringcode 0800                      ?_ADC_initialise 0070  
              _configuration_Options 00CE                             ultoa@buf 003A  
                           ultoa@val 002E                           _OPTION_REG 0081  
                        _temperature 00D5                     ___lldiv@quotient 0029  
                    ___lwmod@divisor 0020                      ___lwmod@counter 0025  
                     _humidityReader 14C1                             stringdir 0800  
                           stringtab 0800                         ___aldiv@sign 002A  
                   _setTimeDisplayer 0421           __end_of_setTemperatureUnit 1800  
                     _updateSetAlarm 157A                          _overflowInt 0077  
        __size_of_ADC_channel_select 000E           updateTimeDisplayed@minutes 003F  
         updateTimeDisplayed@seconds 003B               setAlarm@variable_Value 0047  
